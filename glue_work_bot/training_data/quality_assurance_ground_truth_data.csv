number,body,quality_assurance_Ed,quality_assurance_Steve
173263,"<!--
Thanks for filing a pull request!
Reviewers are typically assigned within a week of filing a request.
To learn more about code review, see our documentation on Tree Hygiene: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
-->

Additional fix for the 'drawerBarrierDismissible' feature in which the ESC key can close the drawer even if the flag is set to false.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

**Note**: The Flutter team is currently trialing the use of [Gemini Code Assist for GitHub](https://developers.google.com/gemini-code-assist/docs/review-github-code). Comments from the `gemini-code-assist` bot should not be taken as authoritative feedback from the Flutter team. If you find its comments useful you can update your code accordingly, but if you are unsure or disagree with the feedback, please feel free to wait for a Flutter team member's review for guidance on which automated comments should be addressed.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",n,
170094,"### Use case

In our [recent effort](https://github.com/flutter/flutter/pull/169365/files#diff-015f3e087548346bf894f919ba75a880b18a574235080bf1f921bb232c07ba34R23) to support SceneDelegate, we still keep plugin registration in app delegate, via `FlutterPluginRegistrant` protocol. 

Developers put the logic inside AppDelegate: 

```
class AppDelegate: FlutterPluginRegistrant {
  func register(with registry: FlutterPluginRegistry) {
    ...
  }
}
```



### Proposal

There has been hints that AppDelegate is going away. We should instead leverage SceneDelegate to take over this responsibility. 

cc @gaaclarke ",n,
174456,"Skwams currently rasters images at their `cullRect` size, and resizes the `bitmaprenderer` canvas that will display the bitmap to the `cullRect` size. It is unclear if the speed-up from the smaller bitmap creation outweighs the cost of resizing and recreating the `bitmaprenderer` canvas.

To prepare for the web renderer unification and unify the rasterization step between the two renderers, this change makes it so Skwasm rasters the pictures at the full screen size, and no longer needs to resize the `bitmaprenderer` canvases unless the screen size changes.

Part of https://github.com/flutter/flutter/issues/172311

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

**Note**: The Flutter team is currently trialing the use of [Gemini Code Assist for GitHub](https://developers.google.com/gemini-code-assist/docs/review-github-code). Comments from the `gemini-code-assist` bot should not be taken as authoritative feedback from the Flutter team. If you find its comments useful you can update your code accordingly, but if you are unsure or disagree with the feedback, please feel free to wait for a Flutter team member's review for guidance on which automated comments should be addressed.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",n,
171425,"> [!NOTE]
> Filed https://github.com/gskinnerTeam/flutter-wonderous-app/issues/222 on the wonderous repo so this can be addressed

### Steps to reproduce

1. Clone the wonderous app https://github.com/gskinnerTeam/flutter-wonderous-app
2. Run the app on the latest master (tested on iOS (both simulator and& physical devices), as well as macOS)
3. Navigate to any of the wonders 
4. Find and click a collectible on the wonders page
5. After clicking the collectible, click on the `View in my collection` button to navigate to the collection page


### Expected results

No error is thrown from the framework.

### Actual results

The error below is thrown by the framework 


```
══╡ EXCEPTION CAUGHT BY WIDGETS LIBRARY ╞═══════════════════════════════════════════════════════════
The following assertion was thrown building AnimatedBuilder(listenable: ScrollController#3f483(one
client, offset 4556.2), dirty, state: _AnimatedState#b564a):
RenderBox was not laid out: RenderFractionalTranslation#743da NEEDS-LAYOUT NEEDS-PAINT
NEEDS-COMPOSITING-BITS-UPDATE
'package:flutter/src/rendering/box.dart':
Failed assertion: line 2250 pos 12: 'hasSize'

Either the assertion indicates an error in the framework itself, or we should provide substantially
more information in this error message to help you determine and fix the underlying cause.
In either case, please report this assertion by filing a bug on GitHub:
  https://github.com/flutter/flutter/issues/new?template=02_bug.yml

The relevant error-causing widget was:
  AnimatedBuilder
  AnimatedBuilder:file:///Users/deanli/projects/wonder/flutter-wonderous-app/lib/ui/screens/editorial/widgets/_title_text.dart:52:28
```

Bisected this to https://github.com/flutter/flutter/commit/d3e8dc3df9e81778c6d8db44d0dd095249fbf0d9. 
cc @LongCatIsLooong, It seems like the fix for https://github.com/flutter/flutter/issues/168936 might have broke something else. Full logs in the log section below

This works as expected on the stable & beta channels

Master 3.33.0-1.0.pre.377 is the last master version where it works as expected. 

### Code sample

Use the wonderous app https://github.com/gskinnerTeam/flutter-wonderous-app.git


### Screenshots or Video

https://github.com/user-attachments/assets/62d9789b-3720-4569-a8ff-2262ee7302ce



### Logs

<details open><summary>Logs</summary>

```
══╡ EXCEPTION CAUGHT BY WIDGETS LIBRARY ╞═══════════════════════════════════════════════════════════
The following assertion was thrown building AnimatedBuilder(listenable: ScrollController#3f483(one
client, offset 4556.2), dirty, state: _AnimatedState#b564a):
RenderBox was not laid out: RenderFractionalTranslation#743da NEEDS-LAYOUT NEEDS-PAINT
NEEDS-COMPOSITING-BITS-UPDATE
'package:flutter/src/rendering/box.dart':
Failed assertion: line 2250 pos 12: 'hasSize'

Either the assertion indicates an error in the framework itself, or we should provide substantially
more information in this error message to help you determine and fix the underlying cause.
In either case, please report this assertion by filing a bug on GitHub:
  https://github.com/flutter/flutter/issues/new?template=02_bug.yml

The relevant error-causing widget was:
  AnimatedBuilder
  AnimatedBuilder:file:///Users/deanli/projects/wonder/flutter-wonderous-app/lib/ui/screens/editorial/widgets/_title_text.dart:52:28

When the exception was thrown, this was the stack:
#2      RenderBox.size (package:flutter/src/rendering/box.dart:2250:12)
#3      RenderFractionalTranslation.applyPaintTransform (package:flutter/src/rendering/proxy_box.dart:3075:50)
#4      RenderObject.getTransformTo (package:flutter/src/rendering/object.dart:3577:25)
#5      RenderBox.localToGlobal (package:flutter/src/rendering/box.dart:3093:39)
#6      ContextUtils.getGlobalPos (package:wonders/ui/common/utils/context_utils.dart:7:18)
#7      _TitleText.build.<anonymous closure> (package:wonders/ui/screens/editorial/widgets/_title_text.dart:55:53)
#8      ListenableBuilder.build (package:flutter/src/widgets/transitions.dart:1147:48)
#9      _AnimatedState.build (package:flutter/src/widgets/transitions.dart:139:48)
#10     StatefulElement.build (package:flutter/src/widgets/framework.dart:5823:27)
#11     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5715:15)
#12     StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5874:11)
#13     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#14     StatefulElement.update (package:flutter/src/widgets/framework.dart:5899:5)
#15     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#16     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#17     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#18     Element.updateChildren (package:flutter/src/widgets/framework.dart:4140:11)
#19     MultiChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7192:17)
#20     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#21     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#22     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#23     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#24     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#25     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#26     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#27     ProxyElement.update (package:flutter/src/widgets/framework.dart:6041:5)
#28     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#29     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#30     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#31     StatelessElement.update (package:flutter/src/widgets/framework.dart:5787:5)
#32     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#33     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#34     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#35     ProxyElement.update (package:flutter/src/widgets/framework.dart:6041:5)
#36     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#37     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#38     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#39     StatelessElement.update (package:flutter/src/widgets/framework.dart:5787:5)
#40     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#41     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#42     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#43     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#44     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#45     StatelessElement.update (package:flutter/src/widgets/framework.dart:5787:5)
#46     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#47     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#48     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#49     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#50     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#51     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#52     StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5874:11)
#53     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#54     StatefulElement.update (package:flutter/src/widgets/framework.dart:5899:5)
#55     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#56     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#57     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#58     Element.updateChildren (package:flutter/src/widgets/framework.dart:4140:11)
#59     MultiChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7192:17)
#60     _ViewportElement.update (package:flutter/src/widgets/viewport.dart:264:11)
#61     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#62     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#63     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#64     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#65     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#66     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#67     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#68     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#69     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#70     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#71     StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5874:11)
#72     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#73     StatefulElement.update (package:flutter/src/widgets/framework.dart:5899:5)
#74     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#75     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#76     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#77     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#78     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#79     ProxyElement.update (package:flutter/src/widgets/framework.dart:6041:5)
#80     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#81     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#82     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#83     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#84     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#85     ProxyElement.update (package:flutter/src/widgets/framework.dart:6041:5)
#86     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#87     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#88     StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5874:11)
#89     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#90     StatefulElement.update (package:flutter/src/widgets/framework.dart:5899:5)
#91     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#92     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#93     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#94     StatelessElement.update (package:flutter/src/widgets/framework.dart:5787:5)
#95     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#96     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#97     StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5874:11)
#98     Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#99     StatefulElement.update (package:flutter/src/widgets/framework.dart:5899:5)
#100    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#101    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#102    Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#103    StatelessElement.update (package:flutter/src/widgets/framework.dart:5787:5)
#104    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#105    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#106    Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#107    ProxyElement.update (package:flutter/src/widgets/framework.dart:6041:5)
#108    _InheritedNotifierElement.update (package:flutter/src/widgets/inherited_notifier.dart:108:11)
#109    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#110    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#111    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5874:11)
#112    Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#113    StatefulElement.update (package:flutter/src/widgets/framework.dart:5899:5)
#114    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#115    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#116    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5874:11)
#117    Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#118    StatefulElement.update (package:flutter/src/widgets/framework.dart:5899:5)
#119    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#120    SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#121    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#122    SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#123    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#124    SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#125    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#126    Element.updateChildren (package:flutter/src/widgets/framework.dart:4140:11)
#127    MultiChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7192:17)
#128    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#129    SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#130    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#131    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#132    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5874:11)
#133    Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#134    StatefulElement.update (package:flutter/src/widgets/framework.dart:5899:5)
#135    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#136    SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7015:14)
#137    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#138    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#139    Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#140    ProxyElement.update (package:flutter/src/widgets/framework.dart:6041:5)
#141    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#142    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5738:16)
#143    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5874:11)
#144    Element.rebuild (package:flutter/src/widgets/framework.dart:5427:7)
#145    StatefulElement.update (package:flutter/src/widgets/framework.dart:5899:5)
#146    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#147    _LayoutBuilderElement._rebuildWithConstraints.updateChildCallback (package:flutter/src/widgets/layout_builder.dart:249:18)
#148    BuildOwner.buildScope (package:flutter/src/widgets/framework.dart:3046:19)
#149    _LayoutBuilderElement._rebuildWithConstraints (package:flutter/src/widgets/layout_builder.dart:272:12)
#150    RenderAbstractLayoutBuilderMixin.layoutCallback (package:flutter/src/widgets/layout_builder.dart:335:38)
#151    RenderObjectWithLayoutCallbackMixin.runLayoutCallback.<anonymous closure> (package:flutter/src/rendering/object.dart:4160:33)
#152    RenderObject.invokeLayoutCallback.<anonymous closure> (package:flutter/src/rendering/object.dart:2885:17)
#153    PipelineOwner._enableMutationsToDirtySubtrees (package:flutter/src/rendering/object.dart:1209:15)
#154    RenderObject.invokeLayoutCallback (package:flutter/src/rendering/object.dart:2884:14)
#155    RenderObjectWithLayoutCallbackMixin.runLayoutCallback (package:flutter/src/rendering/object.dart:4160:5)
#156    _RenderLayoutBuilder.performLayout (package:flutter/src/widgets/layout_builder.dart:449:5)
#157    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#158    RenderProxyBoxMixin.performLayout (package:flutter/src/rendering/proxy_box.dart:115:18)
#159    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#160    RenderProxyBoxMixin.performLayout (package:flutter/src/rendering/proxy_box.dart:115:18)
#161    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#162    ChildLayoutHelper.layoutChild (package:flutter/src/rendering/layout_helper.dart:62:11)
#163    RenderStack._computeSize (package:flutter/src/rendering/stack.dart:646:43)
#164    RenderStack.performLayout (package:flutter/src/rendering/stack.dart:673:12)
#165    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#166    ChildLayoutHelper.layoutChild (package:flutter/src/rendering/layout_helper.dart:62:11)
#167    RenderStack._computeSize (package:flutter/src/rendering/stack.dart:646:43)
#168    RenderStack.performLayout (package:flutter/src/rendering/stack.dart:673:12)
#169    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#170    RenderProxyBoxMixin.performLayout (package:flutter/src/rendering/proxy_box.dart:115:18)
#171    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#172    MultiChildLayoutDelegate.layoutChild (package:flutter/src/rendering/custom_layout.dart:180:12)
#173    _ScaffoldLayout.performLayout (package:flutter/src/material/scaffold.dart:1119:7)
#174    MultiChildLayoutDelegate._callPerformLayout (package:flutter/src/rendering/custom_layout.dart:249:7)
#175    RenderCustomMultiChildLayoutBox.performLayout (package:flutter/src/rendering/custom_layout.dart:419:14)
#176    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#177    RenderProxyBoxMixin.performLayout (package:flutter/src/rendering/proxy_box.dart:115:18)
#178    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#179    RenderProxyBoxMixin.performLayout (package:flutter/src/rendering/proxy_box.dart:115:18)
#180    _RenderCustomClip.performLayout (package:flutter/src/rendering/proxy_box.dart:1483:11)
#181    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#182    RenderProxyBoxMixin.performLayout (package:flutter/src/rendering/proxy_box.dart:115:18)
#183    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#184    RenderProxyBoxMixin.performLayout (package:flutter/src/rendering/proxy_box.dart:115:18)
#185    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#186    RenderProxyBoxMixin.performLayout (package:flutter/src/rendering/proxy_box.dart:115:18)
#187    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#188    RenderProxyBoxMixin.performLayout (package:flutter/src/rendering/proxy_box.dart:115:18)
#189    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#190    RenderProxyBoxMixin.performLayout (package:flutter/src/rendering/proxy_box.dart:115:18)
#191    RenderObject.layout (package:flutter/src/rendering/object.dart:2766:7)
#192    RenderProxyBoxMixin.performLayout (package:flutter/src/rendering/proxy_box.dart:115:18)
#193    RenderObject._layoutWithoutResize (package:flutter/src/rendering/object.dart:2614:7)
#194    PipelineOwner.flushLayout (package:flutter/src/rendering/object.dart:1160:18)
#195    PipelineOwner.flushLayout (package:flutter/src/rendering/object.dart:1173:15)
#196    RendererBinding.drawFrame (package:flutter/src/rendering/binding.dart:629:23)
#197    WidgetsBinding.drawFrame (package:flutter/src/widgets/binding.dart:1261:13)
#198    RendererBinding._handlePersistentFrameCallback (package:flutter/src/rendering/binding.dart:495:5)
#199    SchedulerBinding._invokeFrameCallback (package:flutter/src/scheduler/binding.dart:1438:15)
#200    SchedulerBinding.handleDrawFrame (package:flutter/src/scheduler/binding.dart:1351:9)
#201    SchedulerBinding._handleDrawFrame (package:flutter/src/scheduler/binding.dart:1204:5)
#202    _invoke (dart:ui/hooks.dart:331:13)
#203    PlatformDispatcher._drawFrame (dart:ui/platform_dispatcher.dart:444:5)
#204    _drawFrame (dart:ui/hooks.dart:303:31)
(elided 2 frames from class _AssertionError)

════════════════════════════════════════════════════════════════════════════════════════════════════

Another exception was thrown: RenderBox was not laid out: RenderFractionalTranslation#743da NEEDS-LAYOUT NEEDS-PAINT
NEEDS-COMPOSITING-BITS-UPDATE
Another exception was thrown: RenderBox was not laid out: RenderFractionalTranslation#743da NEEDS-LAYOUT NEEDS-PAINT
NEEDS-COMPOSITING-BITS-UPDATE
Another exception was thrown: RenderBox was not laid out: RenderFractionalTranslation#743da NEEDS-LAYOUT NEEDS-PAINT
NEEDS-COMPOSITING-BITS-UPDATE
Another exception was thrown: RenderBox was not laid out: RenderFractionalTranslation#743da NEEDS-LAYOUT NEEDS-PAINT
NEEDS-COMPOSITING-BITS-UPDATE
Another exception was thrown: RenderBox was not laid out: RenderFractionalTranslation#743da NEEDS-LAYOUT NEEDS-PAINT
NEEDS-COMPOSITING-BITS-UPDATE
```

</details>



### Flutter Doctor output

<details open><summary>Doctor output</summary>


```
[!] Flutter (Channel [user-branch], 3.33.0-1.0.pre.377, on macOS 15.5 24F74 darwin-arm64, locale en-US) [770ms]
    ! Flutter version 3.33.0-1.0.pre.377 on channel [user-branch] at /Users/deanli/dev/master
      Currently on an unknown channel. Run `flutter channel` to switch to an official channel.
      If that doesn't fix the issue, reinstall Flutter by following instructions at https://flutter.dev/setup.
    ! Warning: `flutter` on your path resolves to /Users/deanli/dev/stable/bin/flutter, which is not inside your current Flutter SDK checkout at /Users/deanli/dev/master. Consider adding /Users/deanli/dev/master/bin to the front of your path.
    ! Warning: `dart` on your path resolves to /Users/deanli/dev/stable/bin/dart, which is not inside your current Flutter SDK checkout at /Users/deanli/dev/master. Consider adding /Users/deanli/dev/master/bin to the front of your path.
    ! Upstream repository unknown source is not a standard remote.
      Set environment variable ""FLUTTER_GIT_URL"" to unknown source to dismiss this error.
    • Framework revision 4f31b75649 (4 weeks ago), 2025-06-04 12:26:34 -0700
    • Engine revision 4f31b75649
    • Dart version 3.9.0 (build 3.9.0-196.0.dev)
    • DevTools version 2.47.0
    • If those were intentional, you can disregard the above warnings; however it is recommended to use ""git"" directly to perform update checks and upgrades.

[✓] Android toolchain - develop for Android devices (Android SDK version 36.0.0) [2.1s]
    • Android SDK at /Users/deanli/Library/Android/sdk
    • Emulator version 35.6.10.0 (build_id 13579150) (CL:N/A)
    • Platform android-36, build-tools 36.0.0
    • Java binary at: /Users/deanli/Applications/Android Studio.app/Contents/jbr/Contents/Home/bin/java
      This is the JDK bundled with the latest Android Studio installation on this machine.
      To manually set the JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`.
    • Java version OpenJDK Runtime Environment (build 21.0.6+-13391695-b895.109)
    • All Android licenses accepted.

[✓] Xcode - develop for iOS and macOS (Xcode 26.0) [1,638ms]
    • Xcode at /Applications/Xcode-26.0.0-Beta.2.app/Contents/Developer
    • Build 17A5241o
    • CocoaPods version 1.16.2

[✓] Chrome - develop for the web [15ms]
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2025.1) [15ms]
    • Android Studio at /Users/deanli/Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 21.0.6+-13391695-b895.109)

[✓] VS Code (version 1.100.3) [14ms]
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension version 3.112.0

[✓] Connected device (6 available) [7.5s]
    • iPhone 16 Pro Max (mobile)      • 00008140-00194CC23A68801C            • ios            • iOS 26.0 23A5276f
    • Nexus (wireless) (mobile)       • 00008020-001875E83A38002E            • ios            • iOS 18.5 22F76
    • Dean’s iPad (wireless) (mobile) • 00008103-000825C811E3401E            • ios            • iOS 26.0 23A5260n
    • iPhone 16 Pro (mobile)          • 38325374-D93B-423B-B385-813AAD3B304D • ios            • com.apple.CoreSimulator.SimRuntime.iOS-26-0 (simulator)
    • macOS (desktop)                 • macos                                • darwin-arm64   • macOS 15.5 24F74 darwin-arm64
    • Chrome (web)                    • chrome                               • web-javascript • Google Chrome 138.0.7204.93
    ! Error: Browsing on the local area network for iPhone. Ensure the device is unlocked and attached with a cable or associated with the same local area network as this Mac.
      The device must be opted into Developer Mode to connect wirelessly. (code -27)

[✓] Network resources [956ms]
    • All expected network resources are available.

! Doctor found issues in 1 category.
```

```
[!] Flutter (Channel master, 3.33.0-1.0.pre.767, on macOS 15.5 24F74 darwin-arm64, locale en-US) [3.4s]
    • Flutter version 3.33.0-1.0.pre.767 on channel master at /Users/deanli/dev/master
    ! Warning: `flutter` on your path resolves to /Users/deanli/dev/stable/bin/flutter, which is not inside your current Flutter SDK
      checkout at /Users/deanli/dev/master. Consider adding /Users/deanli/dev/master/bin to the front of your path.
    ! Warning: `dart` on your path resolves to /Users/deanli/dev/stable/bin/dart, which is not inside your current Flutter SDK checkout at
      /Users/deanli/dev/master. Consider adding /Users/deanli/dev/master/bin to the front of your path.
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 975f6d8bef (3 hours ago), 2025-07-01 02:29:09 -0400
    • Engine revision 975f6d8bef
    • Dart version 3.9.0 (build 3.9.0-293.0.dev)
    • DevTools version 2.48.0-dev.0
    • If those were intentional, you can disregard the above warnings; however it is recommended to use ""git"" directly to perform update
      checks and upgrades.

[✓] Android toolchain - develop for Android devices (Android SDK version 36.0.0) [3.6s]
    • Android SDK at /Users/deanli/Library/Android/sdk
    • Emulator version 35.6.10.0 (build_id 13579150) (CL:N/A)
    • Platform android-36, build-tools 36.0.0
    • Java binary at: /Users/deanli/Applications/Android Studio.app/Contents/jbr/Contents/Home/bin/java
      This is the JDK bundled with the latest Android Studio installation on this machine.
      To manually set the JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`.
    • Java version OpenJDK Runtime Environment (build 21.0.6+-13391695-b895.109)
    • All Android licenses accepted.

[✓] Xcode - develop for iOS and macOS (Xcode 26.0) [1,707ms]
    • Xcode at /Applications/Xcode-26.0.0-Beta.2.app/Contents/Developer
    • Build 17A5241o
    • CocoaPods version 1.16.2

[✓] Chrome - develop for the web [11ms]
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2025.1) [11ms]
    • Android Studio at /Users/deanli/Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 21.0.6+-13391695-b895.109)

[✓] VS Code (version 1.100.3) [10ms]
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension version 3.112.0

[✓] Connected device (6 available) [11.2s]
    • iPhone 16 Pro Max (mobile)      • 00008140-00194CC23A68801C            • ios            • iOS 26.0 23A5276f
    • Nexus (wireless) (mobile)       • 00008020-001875E83A38002E            • ios            • iOS 18.5 22F76
    • Dean’s iPad (wireless) (mobile) • 00008103-000825C811E3401E            • ios            • iOS 26.0 23A5260n
    • iPhone 16 Pro (mobile)          • 38325374-D93B-423B-B385-813AAD3B304D • ios            • com.apple.CoreSimulator.SimRuntime.iOS-26-0
      (simulator)
    • macOS (desktop)                 • macos                                • darwin-arm64   • macOS 15.5 24F74 darwin-arm64
    • Chrome (web)                    • chrome                               • web-javascript • Google Chrome 138.0.7204.93
    ! Error: Browsing on the local area network for iPhone. Ensure the device is unlocked and attached with a cable or associated with the
      same local area network as this Mac.
      The device must be opted into Developer Mode to connect wirelessly. (code -27)

[✓] Network resources [1,476ms]
    • All expected network resources are available.

! Doctor found issues in 1 category.
```


</details>
",y,
174081,"Fixes https://github.com/flutter/flutter/issues/173917. Also modifies the test harness to use a newly created app instead of the hello world example, and adds a test case for when a custom gradle file trying to modify the version code is being used.

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

**Note**: The Flutter team is currently trialing the use of [Gemini Code Assist for GitHub](https://developers.google.com/gemini-code-assist/docs/review-github-code). Comments from the `gemini-code-assist` bot should not be taken as authoritative feedback from the Flutter team. If you find its comments useful you can update your code accordingly, but if you are unsure or disagree with the feedback, please feel free to wait for a Flutter team member's review for guidance on which automated comments should be addressed.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",y,
158918,"DRAFT of trying to solve assertion issues on painting Ink in a stacked route (via Overlay).

Note: The `Offstage` widget actually layouts the widgets, even if they are not shown. So other widgets can interact with it and know its size. On the other hand, the Overlay widget ignores them during layout, but still has them in the widget tree.
So the question is, should `Overlay` behave the same as `Offstage` ? If not, then painting should be forbidden for `Renderboxes` which haven't laid out (have no size) to ensure, e.g. `Ink` is not throwing an error.

Contributes to #147452 and 
Closes #151536

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",y,
174241,"Renames the public facing flag, and enables the branching in the pv channel based on the flag.

draft

## Pre-launch Checklist

- [ ] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [ ] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [ ] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [ ] I signed the [CLA].
- [ ] I listed at least one issue that this PR fixes in the description above.
- [ ] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [ ] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [ ] All existing and new tests are passing.

If you need help, consider asking for advice on the #hackers-new channel on [Discord].

**Note**: The Flutter team is currently trialing the use of [Gemini Code Assist for GitHub](https://developers.google.com/gemini-code-assist/docs/review-github-code). Comments from the `gemini-code-assist` bot should not be taken as authoritative feedback from the Flutter team. If you find its comments useful you can update your code accordingly, but if you are unsure or disagree with the feedback, please feel free to wait for a Flutter team member's review for guidance on which automated comments should be addressed.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md
",n,
174585,"### Help us understand the severity of this issue

- [ ] breakage; unable to contribute or trigger builds will no workarounds
- [ ] inconvenient workarounds exist, but significant effort required
- [ ] needed for a Flutter team-wide priority (already agreed upon)
- [ ] nice-to-have; none of the above

### What do you need help with

linux-17 lost external connection from the phone device.

<img width=""1383"" height=""27"" alt=""Image"" src=""https://github.com/user-attachments/assets/f9d7de65-3c80-4645-bdc3-f7dabb2e957d"" />",n,
174398,"## Problem
Flutter forwards application lifecycle events to plugins. After migrating to scenes, application lifecycle events may not work the same as before. Therefore, we need to migrate to scene lifecycle events.

## Prerequisites 

* https://github.com/flutter/flutter/issues/174395

## Proposal

Introduce a `FlutterPluginSceneLifeCycleDelegate` to `FlutterEngine`. `FlutterPluginSceneLifeCycleDelegate` will hold a weak array to all registered plugins.

The `FlutterSceneDelegate` will forward scene lifecycle events to all [associated engines](https://github.com/flutter/flutter/issues/174395), which will then forward the event to the `FlutterPluginSceneLifeCycleDelegate`, which will then forward the events to the plugins.

`FlutterSceneDelegate.mm`:

```objc
- (void)sceneDidBecomeActive:(UIScene*)scene {
 for (FlutterEngine* engine in [_engines allObjects]) {
   if (!engine) {
     continue;
   }
   [engine.sceneLifeCycleDelegate sceneDidBecomeActive:scene];
 }
}
```

```objc
@implementation FlutterPluginSceneLifeCycleDelegate {
  // Weak references to registered plugins.
  NSPointerArray* _delegates;
}

- (instancetype)init {
  if (self = [super init]) {
    _delegates = [NSPointerArray weakObjectsPointerArray];
  }
  return self;
}

- (void)addDelegate:(NSObject<FlutterSceneLifeCycleDelegate>*)delegate {
  [_delegates addPointer:(__bridge void*)delegate];
  if (IsPowerOfTwo([_delegates count])) {
    [_delegates compact];
  }
}

- (void)flutterViewController:(FlutterViewController*)controller
            didConnectToScene:(UIScene*)scene
                      options:(UISceneConnectionOptions*)connectionOptions {
  for (NSObject<FlutterSceneLifeCycleDelegate>* delegate in [_delegates allObjects]) {
    if (!delegate) {
      continue;
    }
    if ([delegate respondsToSelector:_cmd]) {
      [delegate flutterViewController:controller didConnectToScene:scene options:connectionOptions];
    }
  }
}

- (void)sceneDidBecomeActive:(UIScene*)scene {
  for (NSObject<FlutterSceneLifeCycleDelegate>* delegate in [_delegates allObjects]) {
    if (!delegate) {
      continue;
    }
    if ([delegate respondsToSelector:_cmd]) {
      [delegate sceneDidBecomeActive:scene];
    } else {
      // TODO: Fallback to application callback
    }
  }
}

- (void)windowScene:(UIWindowScene*)windowScene
    performActionForShortcutItem:(UIApplicationShortcutItem*)shortcutItem
               completionHandler:(void (^)(BOOL succeeded))completionHandler {
  FlutterPluginAppLifeCycleDelegate* appLifeCycleDelegate = [self applicationLifeCycleDelegate];

  for (NSObject<FlutterSceneLifeCycleDelegate>* delegate in [_delegates allObjects]) {
    if (!delegate) {
      continue;
    }
    if ([delegate respondsToSelector:_cmd]) {
      [delegate windowScene:windowScene
          performActionForShortcutItem:shortcutItem
                     completionHandler:completionHandler];
    } else {
      // Fallback to application callback
      if (appLifeCycleDelegate != nil) {
        [FlutterLogger
            logWarning:
                @""Plugin does not support scene. Falling back to application lifecycle event.""];
        [appLifeCycleDelegate application:FlutterSharedApplication.application
             performActionForShortcutItem:shortcutItem
                        completionHandler:completionHandler];
      } else {
        [FlutterLogger logWarning:@""Plugin does not support scene""];
      }
    }
  }
}

...

- (FlutterPluginAppLifeCycleDelegate*)applicationLifeCycleDelegate {
  id appDelegate = FlutterSharedApplication.application.delegate;
  FlutterPluginAppLifeCycleDelegate* lifeCycleDelegate = nil;
  if ([appDelegate respondsToSelector:@selector(lifeCycleDelegate)]) {
    lifeCycleDelegate = [appDelegate lifeCycleDelegate];
  }
  return lifeCycleDelegate;
}
@end
```

See [prototype](https://github.com/flutter/flutter/compare/master...vashworth:flutter:uiscene_lifecycle_wip).",y,
174395,"## Problem
Flutter does certain things in response to lifecycle events. After migrating to scenes, application lifecycle events may not work the same as before. Therefore, we need to migrate to scene lifecycle events. However, we need to consider that there could be multiple scene, which could have multiple engines. As such, we should track engines that are associated with the scene.

## Proposal

When a `FlutterViewController` is added to the scene, we should add its `FlutterEngine` to the `FlutterSceneDelegate`.

`FlutterSceneDelegate.mm`:

```
_engines = [NSPointerArray weakObjectsPointerArray];

...

- (void)addFlutterViewController:(FlutterViewController*)controller {
  NSLog(@""Engine added to scene"");

  // NSPointerArray is clever and assumes that unless a mutation operation has occurred on it that
  // has set one of its values to nil, nothing could have changed and it can skip compaction.
  // That's reasonable behaviour on a regular NSPointerArray but not for a weakObjectPointerArray.
  // As a workaround, we mutate it first. See: http://www.openradar.me/15396578
  [self.engines addPointer:nil];
  [self.engines compact];

  // Check if the engine is already in the array to avoid duplicates.
  if (![self.engines.allObjects containsObject:controller.engine]) {
    [self.engines addPointer:(__bridge void*)controller.engine];
  }

  [controller.engine.sceneLifeCycleDelegate flutterViewController:controller
                                                didConnectToScene:(UIScene*)self
                                                          options:self.sceneConnectionOptions];
}
```

`FlutterViewController`:
```
- (void)viewIsAppearing:(BOOL)animated {
  FML_LOG(ERROR) << ""viewIsAppearing"";
  [self connectFlutterViewControllerWithScene];
  [super viewIsAppearing:animated];
}

- (void)connectFlutterViewControllerWithScene {
  // The scene is not available until viewIsAppearing
  UIWindowScene* scene = self.view.window.windowScene;

  // self.view.window.windowScene
  if ([scene.delegate conformsToProtocol:@protocol(FlutterSceneLifeCycleProvider)]) {
    id<FlutterSceneLifeCycleProvider> lifeCycleProvider =
        (id<FlutterSceneLifeCycleProvider>)scene.delegate;
    [lifeCycleProvider addFlutterViewController:self];
  }
}
```

See [prototype](https://github.com/flutter/flutter/compare/master...vashworth:flutter:uiscene_lifecycle_wip).",y,
173357,"## Problem 

Due to changes in initialization order, accessing the FlutterViewController from the application(_:didFinishLaunchingWithOptions:) method no longer works and will result in a crash (after migrating to UIScene). 

Flutter’s official documentation was to [set up app-level method channels in application:didFinishLaunching:](https://docs.flutter.dev/platform-integration/platform-channels#step-4-add-an-ios-platform-specific-implementation).

```
- (BOOL)application:(UIApplication*)application didFinishLaunchingWithOptions:(NSDictionary*)launchOptions {
  FlutterViewController* controller = (FlutterViewController*)self.window.rootViewController;

  FlutterMethodChannel* batteryChannel = [FlutterMethodChannel
                                    methodChannelWithName:@""samples.flutter.dev/battery""
                                          binaryMessenger:controller.binaryMessenger];
```

To mitigate this, https://github.com/flutter/flutter/pull/169399 introduced a callback called `registerWithRegistry` that can be used in a iOS project's AppDelegate. This callback returns an object that conforms to `FlutterPluginRegistry`. The `FlutterAppDelegate`, `FlutterEngine`, and `FlutterViewController` all conform to this protocol. 

```
- (BOOL)application:(UIApplication*)application didFinishLaunchingWithOptions:(NSDictionary*)launchOptions {
  self.pluginRegistrant = self;
  return [super application:application didFinishLaunchingWithOptions:launchOptions];
}

- (void)registerWithRegistry:(NSObject<FlutterPluginRegistry>*)registry {
  [GeneratedPluginRegistrant registerWithRegistry:registry];
}
```

However, to create a method channel you need a `binaryMessenger`.

## Proposal

Introduce a new base protocol, called `FlutterBaseRegistrar`, make [`FlutterPluginRegistrar`](https://github.com/flutter/flutter/blob/96933bf400e4a927facab702a74129ce4ae17065/engine/src/flutter/shell/platform/darwin/ios/framework/Headers/FlutterPlugin.h#L283-L380) inherit from it, and move most methods up to the base.

Plugin specific methods can stay in `FlutterPluginRegistrar`, such as:
* addApplicationDelegate:, as application authors can do this directly instead.
* lookupKeyForAsset:*, as it’s not clear that this has a use case in the app context. (It could easily be moved up later if there is a use case).
* publish:, which similarly does not seem likely to be useful in the app context.

Introduce a new sibling protocol to `FlutterPluginRegistrar` called `FlutterApplicationRegistrar`, which inherits from the same base. For now this would have no new methods, but by adding this intermediate layer we can trivially add app-specific methods later if needed, without breaking changes or new delegate methods.

Then add a property to `FlutterPluginRegistry`:

```
- (nonnull NSObject<FlutterPluginRegistrar>*)registrarForApplication;
```

The implementation of `registrarForApplication` would create a `FlutterEngineRegistrar` with a unique identifier and register it to the engine: 
https://github.com/flutter/flutter/blob/96933bf400e4a927facab702a74129ce4ae17065/engine/src/flutter/shell/platform/darwin/ios/framework/Source/FlutterEngine.mm#L1310-L1317

Then from a developer's `AppDelegate`, they can do the following:

```
- (BOOL)application:(UIApplication*)application didFinishLaunchingWithOptions:(NSDictionary*)launchOptions {
  self.pluginRegistrant = self;
  return [super application:application didFinishLaunchingWithOptions:launchOptions];
}

- (void)registerWithRegistry:(NSObject<FlutterPluginRegistry>*)registry {
  NSObject<FlutterPluginRegistrar>* registrar = registry.registrarForApplication;
  FlutterMethodChannel* batteryChannel = [FlutterMethodChannel
                                    methodChannelWithName:@""samples.flutter.dev/battery""
                                          binaryMessenger:registrar.messenger];
  
  [GeneratedPluginRegistrant registerWithRegistry:registry];
}
```

",y,
174529,"
https://dart.googlesource.com/sdk.git/+log/89023922f96d..4c4fe42bee2e

2025-08-27 dart-internal-merge@dart-ci-internal.iam.gserviceaccount.com Version 3.10.0-145.0.dev
2025-08-27 dart-internal-merge@dart-ci-internal.iam.gserviceaccount.com Version 3.10.0-144.0.dev
2025-08-27 dart-internal-merge@dart-ci-internal.iam.gserviceaccount.com Version 3.10.0-143.0.dev

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/dart-sdk-flutter
Please CC dart-vm-team@google.com,jimgraham@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",n,
174432,"This PR addresses performance issues (#106521) in `ExpansionPanelList` by implementing individual animation controllers and optimized rendering. 

Issue #106521 initially suggested implementing a Sliver-based approach. However, after investigation, this approach would introduce breaking changes to `ExpansionPanelList` layout behavior. Existing applications rely on `ExpansionPanelList` working within fixed-height containers.

This PR takes a more conservative approach that delivers performance improvements.

### Key Changes

- **Individual Animation Controllers**: Each expansion panel now uses its own AnimationController, allowing multiple panels to animate concurrently without interference
- **Optimized Rendering**: AnimatedBuilder now uses the child parameter to prevent unnecessary rebuilds of panel body content during animations  

### Testing

- Added regression test for concurrent animation performance verification

## Pre-launch Checklist

- [x] I read the [[Contributor Guide](https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview)] and followed the process outlined there for submitting PRs.
- [x] I read the [[Tree Hygiene](https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md)] wiki page, which explains my responsibilities.
- [x] I read and followed the [[Flutter Style Guide](https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md)], including [[Features we expect every widget to implement](https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement)].
- [x] I signed the [[CLA](https://cla.developers.google.com/)].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [[test-exempt](https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests)].
- [x] I followed the [[breaking change policy](https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes)] and added [[Data Driven Fixes](https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md)] where supported.
- [x] All existing and new tests are passing.

<!-- Links -->
[Contributor Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#overview
[Tree Hygiene]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md
[test-exempt]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#tests
[Flutter Style Guide]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md
[Features we expect every widget to implement]: https://github.com/flutter/flutter/blob/main/docs/contributing/Style-guide-for-Flutter-repo.md#features-we-expect-every-widget-to-implement
[CLA]: https://cla.developers.google.com/
[flutter/tests]: https://github.com/flutter/tests
[breaking change policy]: https://github.com/flutter/flutter/blob/main/docs/contributing/Tree-hygiene.md#handling-breaking-changes
[Discord]: https://github.com/flutter/flutter/blob/main/docs/contributing/Chat.md
[Data Driven Fixes]: https://github.com/flutter/flutter/blob/main/docs/contributing/Data-driven-Fixes.md",n,
145524,"### Steps to reproduce

1. write a flutter web page has a TextField and Button....
2. build flutter web page to web and deploy to a website.
3. flutter website start and brower to ""http://localhost:9000/index.html""==>everything is working normally.
4. write a html page(test.html) just has a button to open modal(dialog)
5. The modal(dialog) has a iframe that embedding the flutter web page==> <iframe id=""ifm"" src=""http://localhost:9000/index.html"" height=""100%"" width=""100%"" 
6. deploy  test.html to website and brower to http://localhost:9000/test.html==>can see a button then click to open modal(dialog),the flutter page(index.html) will show up,but the TextField can not show normally(missing or missing boder) and can not focus in and can not edit.

### Expected results

The TextField in flutter web page should be edit and work normallhy.

### Actual results

The TextField in flutter web page can not focus ,can not edit,can not display normally.

### Code sample

<details open><summary>Flutter web page</summary>

```flutter
import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'TextField and Button Example',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  TextEditingController _textFieldController = TextEditingController();
  String _inputText = '';

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('TextField and Button Example'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            TextField(
              controller: _textFieldController,
              onChanged: (value) {
                setState(() {
                  _inputText = value;
                });
              },
              decoration: InputDecoration(
                labelText: 'Enter Text',
              ),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Do something with the input text, for example, print it
                print('Input Text: $_inputText');
              },
              child: Text('Submit'),
            ),
          ],
        ),
      ),
    );
  }

  @override
  void dispose() {
    _textFieldController.dispose();
    super.dispose();
  }
}

```
<details open><summary>Html web page</summary>

```html
<!DOCTYPE html>
<html>
<head>
    <title>Popup Chat Room</title>
    <style>
/* The Modal (background) */
.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%; /* Full width */
  height: 100%; /* Full height */
  overflow: auto; /* Enable scroll if needed */
  background-color: rgb(0,0,0); /* Fallback color */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content/Box */
.modal-content {
  background-color: #fefefe;
  margin: 15% auto; /* 15% from the top and centered */
  padding: 20px;
  border: 1px solid #888;
  width: 80%; /* Could be more or less, depending on screen size */
}

/* The Close Button */
.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}
    </style>
</head>
<body>
<!-- Trigger/Open The Modal -->
<button id=""myBtn"">Open Modal</button>

<!-- The Modal -->
<div id=""myModal"" class=""modal"">

  <!-- Modal content -->
  <div class=""modal-content"">
    <span class=""close"">&times;</span>
      <iframe id=""ifm"" src=""http://localhost:9000/index.html"" height=""100%"" width=""100%"" ></iframe>
  </div>

</div>

<script>
// Get the modal
var modal = document.getElementById(""myModal"");

// Get the button that opens the modal
var btn = document.getElementById(""myBtn"");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName(""close"")[0];

// When the user clicks on the button, open the modal
btn.onclick = function() {
  modal.style.display = ""block"";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
  modal.style.display = ""none"";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
  if (event.target == modal) {
    modal.style.display = ""none"";
  }
}
</script>
</body>
</html>
```

</details>


### Screenshots or Video

<details open>
<summary>Screenshots / Video demonstration</summary>

[Upload media here]

</details>


### Logs

<details open><summary>Logs</summary>

```console
[Paste your logs here]
```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
[Paste your output here]
```

</details>
",y,
174583,"### Steps to reproduce

Create and use an `ImageFilter.blur(sigmaX: 0, sigmaY: 0)`.

### Expected results

It should work without crashing.

### Actual results

Skwasm crashes.

### Code sample

See the code in `engine/src/flutter/lib/web_ui/test/ui/filters_test.dart` under the test `'does not throw for both sigmaX and sigmaY set to 0'`.


### Screenshots or Video

<details open>
<summary>Screenshots / Video demonstration</summary>

[Upload media here]

</details>


### Logs

<details open><summary>Logs</summary>

```console
[Paste your logs here]
```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
[Paste your output here]
```

</details>
",y,
170832,"The recent release of `build` 2.5.0 [seems to have accidentally included a breaking change](https://github.com/dart-lang/build/pull/4033#issuecomment-2985523880). The latest version of `build_test` works with `build` 2.5.0, but the latest version of `build_test` is 3.x, and `go_router_builder` is currently using 2.x.

I'm going to temporarily restrict `go_router_builder` to depend on `build` <2.5, but since `build` is a non-dev dependency this is likely to cause issues for `go_router_builder` clients, and regardless it's going to become a problem for us at some point as well as other things start hitting transitive dependency version conflicts.

`go_router_builder` should be migrated to `build_test` 3.x (and the `build` restriction removed) ASAP, before the older dependency causes a new set of tree-blocking issues.",n,
171003,"The current list of warnings is:

```
   info • lib/src/go_router_generator.dart:79:5 • 'Element' is deprecated and shouldn't be used. This is part of the old analyzer element model. Please
          see
          https://github.com/dart-lang/sdk/blob/main/pkg/analyzer/doc/element_model_migration_guide.md
          for information about how to migrate to the new
          element model. Try replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/go_router_generator.dart:87:21 • 'ClassElement' is deprecated and shouldn't be used. Use ClassElement2 instead. Try replacing the use
          of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:63:24 • 'unnamedConstructor' is deprecated and shouldn't be used. This is part of the old analyzer element model. Please
          see
          https://github.com/dart-lang/sdk/blob/main/pkg/analyzer/doc/element_model_migration_guide.md
          for information about how to migrate to the new
          element model. Try replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:70:41 • 'unnamedConstructor' is deprecated and shouldn't be used. This is part of the old analyzer element model. Please
          see
          https://github.com/dart-lang/sdk/blob/main/pkg/analyzer/doc/element_model_migration_guide.md
          for information about how to migrate to the new
          element model. Try replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:122:73 • 'unnamedConstructor' is deprecated and shouldn't be used. This is part of the old analyzer element model. Please
          see
          https://github.com/dart-lang/sdk/blob/main/pkg/analyzer/doc/element_model_migration_guide.md
          for information about how to migrate to the new
          element model. Try replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:261:3 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing the
          use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:262:27 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:274:16 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:274:43 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:296:21 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:323:11 • 'PropertyAccessorElement' is deprecated and shouldn't be used. Use PropertyAccessorElement2 instead. Try
          replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:341:16 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:370:19 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:371:31 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:378:19 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:379:15 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:383:3 • 'ConstructorElement' is deprecated and shouldn't be used. Use ConstructorElement2 instead. Try replacing the
          use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:384:11 • 'ConstructorElement' is deprecated and shouldn't be used. Use ConstructorElement2 instead. Try replacing the
          use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:384:53 • 'unnamedConstructor' is deprecated and shouldn't be used. This is part of the old analyzer element model. Please
          see
          https://github.com/dart-lang/sdk/blob/main/pkg/analyzer/doc/element_model_migration_guide.md
          for information about how to migrate to the new
          element model. Try replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:446:16 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:446:47 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:492:5 • 'InterfaceElement' is deprecated and shouldn't be used. Use InterfaceElement2 instead. Try replacing the use
          of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:510:5 • 'InterfaceElement' is deprecated and shouldn't be used. Use InterfaceElement2 instead. Try replacing the use
          of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:515:34 • 'element' is deprecated and shouldn't be used. Use element3 instead. Try replacing the use of the deprecated
          member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:526:11 • 'InterfaceElement' is deprecated and shouldn't be used. Use InterfaceElement2 instead. Try replacing the use
          of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:526:57 • 'element' is deprecated and shouldn't be used. Use element3 instead. Try replacing the use of the deprecated
          member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:630:9 • 'InterfaceElement' is deprecated and shouldn't be used. Use InterfaceElement2 instead. Try replacing the use
          of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:642:47 • 'InterfaceElement' is deprecated and shouldn't be used. Use InterfaceElement2 instead. Try replacing the use
          of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:645:17 • 'FieldElement' is deprecated and shouldn't be used. Use FieldElement2 instead. Try replacing the use of the
          deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:668:23 • 'FieldElement' is deprecated and shouldn't be used. Use FieldElement2 instead. Try replacing the use of the
          deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:675:17 • 'MethodElement' is deprecated and shouldn't be used. Use MethodElement2 instead. Try replacing the use of
          the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:678:23 • 'MethodElement' is deprecated and shouldn't be used. Use MethodElement2 instead. Try replacing the use of
          the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:752:3 • 'PropertyAccessorElement' is deprecated and shouldn't be used. Use PropertyAccessorElement2 instead. Try
          replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:779:32 • 'element' is deprecated and shouldn't be used. Use element3 instead. Try replacing the use of the deprecated
          member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:783:14 • 'FieldElement' is deprecated and shouldn't be used. Use FieldElement2 instead. Try replacing the use of the
          deprecated member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:783:45 • 'element' is deprecated and shouldn't be used. Use element3 instead. Try replacing the use of the deprecated
          member with the replacement. • deprecated_member_use
   info • lib/src/route_config.dart:784:15 • 'FieldElement' is deprecated and shouldn't be used. Use FieldElement2 instead. Try replacing the use of the
          deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:56:24 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing the
          use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:85:20 • 'PropertyAccessorElement' is deprecated and shouldn't be used. Use PropertyAccessorElement2 instead. Try
          replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:100:42 • 'InterfaceElement' is deprecated and shouldn't be used. Use InterfaceElement2 instead. Try replacing the use
          of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:107:15 • 'getParsedLibraryByElement' is deprecated and shouldn't be used. Use getParsedLibraryByElement2() instead.
          Try replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:107:49 • 'library' is deprecated and shouldn't be used. This is part of the old analyzer element model. Please
          see
          https://github.com/dart-lang/sdk/blob/main/pkg/analyzer/doc/element_model_migration_guide.md
          for information about how to migrate to the new
          element model. Try replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:108:9 • 'ElementDeclarationResult' is deprecated and shouldn't be used. Use FragmentDeclarationResult instead. Try
          replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:109:21 • 'getElementDeclaration' is deprecated and shouldn't be used. Use getFragmentDeclaration() instead. Try
          replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:118:21 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:133:54 • 'element' is deprecated and shouldn't be used. Use element3 instead. Try replacing the use of the deprecated
          member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:135:26 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:168:18 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:309:11 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:347:7 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing the
          use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:444:7 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing the
          use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:466:27 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:467:40 • 'ParameterElement' is deprecated and shouldn't be used. Use FormalParameterElement instead. Try replacing
          the use of the deprecated member with the replacement. • deprecated_member_use
   info • lib/src/type_helpers.dart:479:5 • 'Element' is deprecated and shouldn't be used. This is part of the old analyzer element model. Please
          see
          https://github.com/dart-lang/sdk/blob/main/pkg/analyzer/doc/element_model_migration_guide.md
          for information about how to migrate to the new
          element model. Try replacing the use of the deprecated member with the replacement. • deprecated_member_use
   info • tool/run_tests.dart:40:13 • 'LibraryElement' is deprecated and shouldn't be used. Use LibraryElement2 instead. Try replacing the use of the
          deprecated member with the replacement. • deprecated_member_use
   info • tool/run_tests.dart:40:59 • 'LibraryElement' is deprecated and shouldn't be used. Use LibraryElement2 instead. Try replacing the use of the
          deprecated member with the replacement. • deprecated_member_use
```",n,
174557,"### Package

google_fonts

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:
The digit ""8"" is broken at font-weight 200 and 300, starting at a certain font size. Later, I discovered that the capital letter 'Q' was also broken in some font-weights!!!

<img width=""348"" alt=""Screenshot 2024-01-24 at 22 17 54"" src=""https://github.com/flutter/flutter/assets/17278021/c7e6ce2a-205a-4b16-847a-2f3b23cd992e"">

<img width=""396"" alt=""Screenshot 2024-01-25 at 11 28 42"" src=""https://github.com/flutter/flutter/assets/17278021/a2ca3075-b000-442a-8097-d4276e86b548"">


## Steps to reproduce:
1. Take a device with 2400*1080 resolution and Android 14 OS. (Samsung sm-a528b)
2. Go to Settings -> Display -> Display size and text ->  Turn on the switcher ""Bold text""
3. Run the following code:

```
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        textTheme: GoogleFonts.montserratTextTheme(),
        useMaterial3: true,
      ),
      home: Scaffold(
        appBar: AppBar(
          backgroundColor: Theme.of(context).colorScheme.inversePrimary,
          title: const Text(""Montserrat Font Test Page""),
        ),
        body: Column(
          crossAxisAlignment: CrossAxisAlignment.center,
          children: <Widget>[
            const SizedBox(height: 50),
            const Text('w200, fontSize22:'),
            Text(
              'abcdefghijklmnopqQrstuvwxyz 1234567890',
              style: GoogleFonts.montserrat(fontWeight: FontWeight.w200, fontSize: 22),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            const Text('w200, fontSize23 and above:'),
            Text(
              'abcdefghijklmnopqQrstuvwxyz 1234567890',
              style: GoogleFonts.montserrat(fontWeight: FontWeight.w200, fontSize: 23),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 50),
            const Text('w300, fontSize15:'),
            Text(
              'abcdefghijklmnopqQrstuvwxyz 1234567890',
              style: GoogleFonts.montserrat(fontWeight: FontWeight.w300, fontSize: 15),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            const Text('w300, fontSize16 and above:'),
            Text(
              'abcdefghijklmnopqQrstuvwxyz 1234567890',
              style: GoogleFonts.montserrat(fontWeight: FontWeight.w300, fontSize: 16),
              textAlign: TextAlign.center,
            ),
            const SizedBox(height: 20),
            const Text('w300, fontSize32 and above:'),
            Text(
              'abcdefghijklmnopqQrstuvwxyz 1234567890',
              style: GoogleFonts.montserrat(fontWeight: FontWeight.w300, fontSize: 32),
              textAlign: TextAlign.center,
            ),
          ],
        ),
      ),
    );
  }
}
```


### Relevant log output

```shell
[✓] Flutter (Channel stable, 3.16.8, on macOS 13.5.2 22G91 darwin-arm64, locale en-UA)
    • Flutter version 3.16.8 on channel stable at /Users/nikolai/flutter
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 67457e669f (8 days ago), 2024-01-16 16:22:29 -0800
    • Engine revision 6e2ea58a5c
    • Dart version 3.2.5
    • DevTools version 2.28.5

[✓] Android toolchain - develop for Android devices (Android SDK version 33.0.2)
    • Android SDK at /Users/nikolai/Library/Android/sdk
    • Platform android-33, build-tools 33.0.2
    • ANDROID_HOME = /Users/nikolai/Library/Android/sdk
    • Java binary at: /Applications/Android Studio.app/Contents/jbr/Contents/Home/bin/java
    • Java version OpenJDK Runtime Environment (build 17.0.7+0-17.0.7b1000.6-10550314)
    • All Android licenses accepted.

[✓] Xcode - develop for iOS and macOS (Xcode 15.0.1)
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Build 15A507
    • CocoaPods version 1.14.3

[✓] Chrome - develop for the web
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2023.1)
    • Android Studio at /Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 17.0.7+0-17.0.7b1000.6-10550314)

[✓] Connected device (2 available)
    • sdk gphone64 arm64 (mobile) • emulator-5554             • android-arm64  • Android 14 (API 34) (emulator)
    • Chrome (web)                • chrome                    • web-javascript • Google Chrome 120.0.6099.234

[✓] Network resources
    • All expected network resources are available.
```
",y,
174558,"### Package

google_fonts

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:

Google Fonts Cabin Sketch *bold* doesn't look the same as when you get that from font files.

## Steps to reproduce:
1. Import google_fonts and cabin sketch fonts individually
2. 
```
Column(
        mainAxisSize: MainAxisSize.min,
        children: <Widget>[
          Text(
            text,
            style: const TextStyle(
              fontFamily: 'Cabin Sketch',
              fontWeight: FontWeight.bold,
              fontSize: 40,
            ),
          ),
          Text(
            text,
            style: GoogleFonts.cabinSketchTextTheme()
                .bodyLarge
                ?.copyWith(fontSize: 40, fontWeight: FontWeight.bold),
          ),
        ],
      ),
```
3.
![image](https://github.com/flutter/flutter/assets/23531172/7246b1cc-64f0-46b5-b7ab-69df12d9524a)

Flutter version: 3.13.6
Google_fonts: 6.1.0


### Relevant log output

_No response_",y,
174559,"### Package

google_fonts

### Existing issue?

- [x] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:

Expected result should match specimen on [https://fonts.google.com/specimen/Roboto+Flex](https://fonts.google.com/specimen/Roboto+Flex). The actual rendering is bold and thin and does not look like this. 

---

### Expected:
![Screen Shot 2023-11-01 at 2 50 55 PM](https://github.com/flutter/flutter/assets/466426/60bfca35-8262-4ce7-b73f-3a2c7875d4ac)

---
### Actual:

![Screen Shot 2023-11-01 at 4 49 07 PM](https://github.com/flutter/flutter/assets/466426/cdb459cd-7657-4688-8f6d-b723944a1242)

---

## Steps to reproduce:
1. `import 'package:google_fonts/google_fonts.dart';`
2. Use `GoogleFonts.robotoFlex` with a higher weight e.g. 800 (ExtraBold), 900 (Black), 1000. 
Example: 
```
  Text(
    'Whereas recognition of the inherent dignity',
    style: GoogleFonts.robotoFlex(
      fontSize: 96,
      fontWeight: FontWeight.w900,
    )
  ),
```

Note: There is an existing issue about this which was raised about a year ago in 2022 in https://github.com/material-foundation/flutter-packages/issues/263, but it was closed incorrectly. The user was incorrectly told: ""Please ask a support forum (e.g. StackOverflow, Discord, Reddit) for more help. GitHub issues are meant for feature requests and bug reports.""

This is **not** an issue of the user needing help and it should not have been closed. **This is a bug.** 

The font does not render correctly according to Google's specifications using `google_fonts`, which should happen when specifying the font at higher weights (e.g. 900), so Roboto Flex isn't supported properly. I've also tried to use the `FontVariation` class with the wght axis, which also does not work. This a bummer as Google did a whole design blog post about variable fonts and Roboto Flex, and it would be nice if this worked in Flutter. It would be good to know if there was a workaround in the meantime as well - like maybe with a specific `.ttf` file.


### Relevant log output

_No response_",y,
174560,"### Package

google_fonts

### Description

Using ""flutter build apk --analyze-size --target-platform android-arm64""

```
...
  lib/
    arm64-v8a                                                              47 MB
    Dart AOT symbols accounted decompressed size                           22 MB
      package:google_fonts                                                  7 MB
      package:flutter                                                       4 MB

...
```

Why? Even if i wanted to use a single font ~100kb it would be 70 times smaller than using google fonts to ""reduce the size for production""",n,
174143,"
https://skia.googlesource.com/skia.git/+log/721e68fe652a..5d394f86f37f

2025-08-20 bungeman@google.com Properly handle value types in LRUCache
2025-08-20 syoussefi@google.com Skip ImageBackendTextureTest on protected contexts
2025-08-20 fmalita@google.com [skcms] Update SHA to reflect actual roller state
2025-08-20 thomsmit@google.com [graphite] Bubble up opacity in paint params.
2025-08-20 syoussefi@google.com [graphite][vulkan] Enable skipped BackendTextureTests
2025-08-20 michaelludwig@google.com [skif] Adjust overscaling logic for periodic tiling
2025-08-20 skia-autoroll@skia-public.iam.gserviceaccount.com Roll ANGLE from ff95cc93afac to dc24ecca9ed9 (4 revisions)
2025-08-20 recipe-mega-autoroller@chops-service-accounts.iam.gserviceaccount.com Roll recipe dependencies (trivial).
2025-08-20 recipe-mega-autoroller@chops-service-accounts.iam.gserviceaccount.com Roll recipe dependencies (trivial).

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/skia-flutter-autoroll
Please CC fmalita@google.com,jimgraham@google.com,kjlubick@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Skia: https://bugs.chromium.org/p/skia/issues/entry
To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",n,
174229,This is my attempt to handle https://github.com/flutter/flutter/issues/6537 for SimpleDialog and SimpleDialogOption UI controls.,n,
174561,"### Package

All packages

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

After using GoogleFonts. notoColorEmoji(), there is a large space between Arabic numerals that cannot be removed

### Relevant log output

```shell
GoogleFonts.notoColorEmoji()
```
",y,
173103,"Use route navigator for CupertinoSheetRoute pop
Fixes: #172010 

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.",y,
174562,"### Package

google_fonts

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

With HTML renderer in Webkit browsers all fonts with a font-weight above 500 get displayed incorrect and the following Warning gets thrown in the web-inspector: „Font was synthesized to be bold because no bold font is available.“ (see attachment 1). The fonts get displayed correctly in the expected font-weight and the warning disappears, when the inline style attribute: ""font-weight: (e.g.) 600;"" gets removed or when the value gets changed to anything below 600 (e.g. ""font-weight: 500;"") in the web-inspector (see attachment 2). 

With CanvasKit renderer there is no such warning in Webkit browsers and the fonts get displayed correctly.
 
In Chromium based web browsers the fonts get displayed correctly with both - HTML and CanvasKit web-renderer. The inline style attribute e.g.: ""font-weight: 600;"" gets ignored - removing it makes no difference - the fonts get always displayed correctly (also with the correct font-weight). 

Attachment 1:
<img width=""1791"" alt=""Attachment-1"" src=""https://github.com/flutter/flutter/assets/87870776/843f41e8-1980-49e4-972c-430f8b0a41c0"">

Attachment 2:
<img width=""1792"" alt=""Attachment-2"" src=""https://github.com/flutter/flutter/assets/87870776/f7df60ee-07ae-4405-939a-06efbc3f6dbd"">



## Steps to reproduce:
1. Add GoogleFonts to pubspec yaml.
2. Import GoogleFonts
3. Use any GoogleFont with a font-weight above 500
4. Run the app with HTML web-renderer
5. Open the app in a webkit browser (e.g. macOS Safari Version 16.5)
6. Open the web-inspector and find the text element in the Shadow Content
7. Switch to inspect font



### Relevant log output

_No response_",y,
174563,"### Package

google_fonts

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## GoogleFonts TextTheme Color defined to always use M2 light mode color

GoogleFonts TextTheme have their TextStyle colors hard coded to M2 light mode colors.

When using a GoogleFonts text theme, like e.g. `GoogleFonts.notoSansTextTheme()` it always comes with the colors from `ThemeData.light().textTheme` baked in as default color.

These TextTheme colors are only appropriate in `ThemeData(textTheme: ..., ...)` for M2 light mode. They are wrong default colors for all other modes, like dark M2, light or dark M3 and primaryTextTheme. Thus, when used for such cases as `TextTheme` in `ThemeData`, the colors have to be overridden for every TextStyle in the TextTheme to get mode correct or even usable contrast color.

If the used `TextStyle` colors in all the GoogleFonts TextThemes were null, `ThemeData` would add M2/M3 mode and light/dark appropriate colors to the GoogleFonts TextThemes when used in a theme.

The GoogleFonts TextThemes already have **NO font sizes defined**, since `ThemeData.light().textTheme` used as default does not yet resolve sizes, they are all null and get applied later in the localization step, this fact gives us M2/M3 mode correct sizes, but not colors. 

Letting `Color` remain null in all `GoogleFonts` text themes and be applied by `ThemeData` to appropriate colors would be similar behavior for color and make the default GoogleFonts TextTheme get correct M2 (opacity based) based contrast colors in M2 and M3 (onSurface based) colors in M3 mode as well as correct contrast colors for light/dark mode.

Even when used as `primaryTextTheme`, color would be resolved based on `ThemeData` modes, with the known issue and limitation `primaryTextTheme` has see Flutter [issue #118146](https://github.com/flutter/flutter/issues/118146).


Build the attached sample app to see the result. Toggle the switch ON to see expected results, keep OFF to see issues as presented below.


### Expected results

Expect to get M2/M3 mode and light/dark mode correct contrast color on the text when using `GoogleFonts` as `TextTheme` in `ThemeData` when used as `textTheme` and `primaryTextTheme`.

| M3 light | M3 dark |
|----------|---------|
| ![Screenshot 2023-05-15 at 6 05 42](https://github.com/flutter/flutter/assets/39990307/8419824d-755d-47a0-b1da-67e40f88e620) | ![Screenshot 2023-05-15 at 6 06 08](https://github.com/flutter/flutter/assets/39990307/2f6cf646-765f-4d75-95b8-6d6d1a45d5fc) |


| M2 light  | M2 dark   |
|-----------|-----------|
| ![Screenshot 2023-05-15 at 6 06 38](https://github.com/flutter/flutter/assets/39990307/a090c199-04f1-4c39-b32e-fb8f19e0f3c5) | ![Screenshot 2023-05-15 at 6 07 05](https://github.com/flutter/flutter/assets/39990307/e2c98e1e-e739-420b-8326-7e244c933751) |

> **NOTE:** The dark mode `primaryTextTheme` above have wrong contrast colors, but that is due to unrelated `ThemeData` [issue #118146](https://github.com/flutter/flutter/issues/118146).


### Actual results

| M3 light | M3 dark |
|----------|---------|
| ![Screenshot 2023-05-15 at 6 07 49](https://github.com/flutter/flutter/assets/39990307/8271401b-f39b-4822-a893-cfd7e9ea0909) | ![Screenshot 2023-05-15 at 6 08 14](https://github.com/flutter/flutter/assets/39990307/be0051e8-cb20-4cad-ac7e-7c851c1b25ee) |

In M3 light mode, the `textTheme` colors get M2 light mode based colors with its different opacities for different styles. This is incorrect, they should all be `onSurface` color with no opacity.

The `primaryTextTheme` is also M2 light mode text theme based, not only is it incorrect, it is also incorrect contrast for the used `primary` color.

In M3 dark mode, the same M2 light mode colors are used, they are not usable at all as colors on a dark mode `textTheme`. 

Ironically, in dark mode, the light M2 theme mode font colors happen to work better on `primary` color than what `ThemeData` actually makes when colors are null. As mentioned, the reason for this is [issue #118146](https://github.com/flutter/flutter/issues/118146) and unrelated to this case. 

| M2 light  | M2 dark   |
|-----------|-----------|
| ![Screenshot 2023-05-15 at 6 09 00](https://github.com/flutter/flutter/assets/39990307/8bed0490-3d99-4154-82c4-5e1b92544a8b) | ![Screenshot 2023-05-15 at 6 09 22](https://github.com/flutter/flutter/assets/39990307/be50c440-e902-4a2e-866d-aba1b9256659) |


In M2 light mode, the colors are actually correct for `textTheme`.
> Well for `Typography2014` anyway, I don't remember if it is actually correct for M2 `Typography2018` as well, or if 2018 changed any of the opacities used from 2014. I seem to recall they did not, it was just font sizes and some letter spacing. In this example that uses just vanilla `ThemeData` we get the very old `Typography2014` that actually don't use correct M2 sizes and letter spacing, but if we were to change to `Typography2018` we would get the correct M2 sizes. So that part works, but colors would remain with 2014 opacities, but as I recall, they are the same as 2018, so they are most likely correct ""by accident"".


In M2 dark mode, the `textTheme` uses the M2 light mode colors, and they are of course not legible at all. Again, in this case due mentioned unrelated issue, the dark mode `primaryTextTheme` is better than what `ThemeData` would actually make if colors were null.


### Proposal

Keep `color` null in all returned GoogleFonts TextThemes and all their TextStyles, and let `ThemeData` apply appropriate default colors. Users can still apply their own colors as needed.

The change is potentially breaking, but it makes `GoogleFonts` default TextThemes better in all `ThemeData` modes in Flutter. Importantly, it also gives us correct M3 mode font colors by default when we use M3.

If the **hard coded** M2 light mode colors for some reason are critical in the current `TextThemes` returned by `GoogleFonts`, maybe consider adding another new `TextTheme` getter where all `TextStyle` colors are null. This, as a more suitable optional/new default `TextTheme` more usable and suitable for `ThemeData` consumption.

Currently, I'm using a version of the fix presented in the attached sample in FlexColorScheme. As seen, I found a ""reasonably"" safe way to check when a given passed `TextTheme` is using a default GoogleFonts TextTheme, and only set colors to null then. It would be nice to not need this workaround. but I can of course continue to use it. Still it might also be nice to not have all users of GoogleFonts that use vanilla `ThemeData` struggle with this issue.

### Issue sample code

The reproduction sample code is attached below.

#### Sample build requirements

Add GoogleFonts to pubspec yaml.


```yaml
dependencies:
  google_fonts: ^4.0.4
```

If using **macOS** add:

```xml
<key>com.apple.security.network.client</key>
<true/>
```
To at least the macOS debug mode entitlements file.

<details>
<summary>Code sample</summary>


```dart
// MIT License
//
// Copyright (c) 2023 Mike Rydstrom
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the ""Software""), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

// A seed color for the M3 ColorScheme.
const Color seedColor = Color(0xFF05AAC2);
// Make M3 ColorSchemes from a seed color.
final ColorScheme schemeLight = ColorScheme.fromSeed(
  brightness: Brightness.light,
  seedColor: seedColor,
);
final ColorScheme schemeDark = ColorScheme.fromSeed(
  brightness: Brightness.dark,
  seedColor: seedColor,
);

/// If the TextTheme looks like a GoogleFonts TextTheme, return the same theme
/// with font color set to null in all its TextStyles, otherwise keep as is.
TextTheme? makeGoogleFontsTextThemeColorsNull(final TextTheme? textTheme) {
  if (textTheme != null) {
    final TextTheme googleFontsTextTheme = ThemeData.light().textTheme.apply(
      fontFamily: '',
      fontFamilyFallback: <String>[''],
    );
    final TextTheme passedTextTheme = textTheme.apply(
      fontFamily: '',
      fontFamilyFallback: <String>[''],
    );
    // We don't care which text theme it was, just that its fingerprint
    // looked like a GoogleFonts TextTheme removing the fontFamily and
    // fontFamilyFallback above allows us to match on any font.
    if (googleFontsTextTheme == passedTextTheme) {
      return TextThemeColor.nullFontColor(textTheme);
    } else {
      return textTheme;
    }
  } else {
    return textTheme;
  }
}

// Example theme
ThemeData theme(ThemeMode mode, ThemeSettings settings) {
  final ColorScheme colorScheme =
      mode == ThemeMode.light ? schemeLight : schemeDark;

  final TextTheme textTheme = GoogleFonts.notoSansTextTheme();
  final TextTheme primaryTextTheme = GoogleFonts.robotoCondensedTextTheme();
  debugPrint('GoogleFonts bodyMedium size: ${textTheme.bodyMedium?.fontSize}');
  debugPrint('GoogleFonts bodyMedium color: ${textTheme.bodyMedium?.color}');

  return ThemeData(
    colorScheme: colorScheme,
    useMaterial3: settings.useMaterial3,
    visualDensity: VisualDensity.standard,
    textTheme: settings.useCustomTheme
        ? makeGoogleFontsTextThemeColorsNull(textTheme)
        : textTheme,
    primaryTextTheme: settings.useCustomTheme
        ? makeGoogleFontsTextThemeColorsNull(primaryTextTheme)
        : primaryTextTheme,
  );
}

void main() {
  runApp(const IssueDemoApp());
}

class IssueDemoApp extends StatefulWidget {
  const IssueDemoApp({super.key});

  @override
  State<IssueDemoApp> createState() => _IssueDemoAppState();
}

class _IssueDemoAppState extends State<IssueDemoApp> {
  ThemeMode themeMode = ThemeMode.light;
  bool longLabel = false;
  TextDirection textDirection = TextDirection.ltr;
  ThemeSettings settings = const ThemeSettings(
    useMaterial3: true,
    useCustomTheme: false,
  );

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      themeMode: themeMode,
      theme: theme(ThemeMode.light, settings),
      darkTheme: theme(ThemeMode.dark, settings),
      home: Directionality(
        textDirection: textDirection,
        child: Scaffold(
          appBar: AppBar(
            title: settings.useMaterial3
                ? const Text(""GoogleFonts TextTheme font color (Material 3)"")
                : const Text(""GoogleFonts TextTheme font color (Material 2)""),
            actions: [
              IconButton(
                icon: settings.useMaterial3
                    ? const Icon(Icons.filter_3)
                    : const Icon(Icons.filter_2),
                onPressed: () {
                  setState(() {
                    settings =
                        settings.copyWith(useMaterial3: !settings.useMaterial3);
                  });
                },
                tooltip: ""Switch to Material ${settings.useMaterial3 ? 2 : 3}"",
              ),
              IconButton(
                icon: themeMode == ThemeMode.dark
                    ? const Icon(Icons.wb_sunny_outlined)
                    : const Icon(Icons.wb_sunny),
                onPressed: () {
                  setState(() {
                    if (themeMode == ThemeMode.light) {
                      themeMode = ThemeMode.dark;
                    } else {
                      themeMode = ThemeMode.light;
                    }
                  });
                },
                tooltip: ""Toggle brightness"",
              ),
            ],
          ),
          body: HomePage(
            settings: settings,
            onSettings: (ThemeSettings value) {
              setState(() {
                settings = value;
              });
            },
          ),
        ),
      ),
    );
  }
}

class HomePage extends StatelessWidget {
  const HomePage({
    super.key,
    required this.settings,
    required this.onSettings,
  });
  final ThemeSettings settings;
  final ValueChanged<ThemeSettings> onSettings;

  @override
  Widget build(BuildContext context) {
    final ThemeData theme = Theme.of(context);
    return ListView(
      children: [
        const Padding(
          padding: EdgeInsets.all(16.0),
          child: Text(
            'GoogleFonts TextTheme have hard coded to M2 light mode colors.\n'
            '\n'
            'When using a GoogleFonts text theme, like e.g. '
            'GoogleFonts.notoSansTextTheme() it always comes with the colors '
            'from ThemeData.light().textTheme baked in as default color.\n'
            '\n'
            'These TextTheme colors are only appropriate in '
            'ThemeData(textTheme: ...) '
            'for M2 light mode. They are wrong default colors for all other'
            'modes, dark M2, light/dark M3 and primaryTextTheme. Thus when '
            'used for such cases as TextTheme in ThemeData, the colors '
            'have to be overridden for every TextStyle in the TextTheme to '
            'get mode correct or even usable contrast color.'
            '\n'
            'If the used TextStyle colors in all the GoogleFonts TextThemes '
            'were null, '
            'ThemeData would add M2/M3 mode and light/dark appropriate colors '
            'to the GoogleFonts TextThemes when used in a theme.\n'
            '\n'
            'The GoogleFonts TextThemes already have NO font sizes defined, '
            'since ThemeData.light().textTheme used as default does not '
            'yet resolve sizes, they are all null and get applied later in '
            'localization step. Letting Color be applied by ThemeData to '
            'appropriate colors would be similar behavior for color and '
            'make the default GoogleFonts TextTheme get correct M2 '
            '(opacity based)/M3 (onSurface based) colors in respective '
            'mode as well as correct contrast colors for light/dark mode.',
          ),
        ),
        SwitchListTile(
          title: const Text(
              'Set GoogleFonts TextTheme colors to NULL to fix issue'),
          value: settings.useCustomTheme,
          onChanged: (bool value) {
            onSettings(settings.copyWith(useCustomTheme: value));
          },
        ),
        Padding(
          padding: const EdgeInsets.symmetric(horizontal: 16.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: <Widget>[
              const SizedBox(height: 8),
              Card(
                child: Padding(
                  padding: const EdgeInsets.all(16),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: <Widget>[
                      Padding(
                        padding: const EdgeInsets.symmetric(vertical: 16),
                        child: Text('Normal TextTheme',
                            style: theme.textTheme.titleMedium),
                      ),
                      const TextThemeShowcase(),
                    ],
                  ),
                ),
              ),
              const SizedBox(height: 8),
              Card(
                color: theme.colorScheme.primary,
                child: Padding(
                  padding: const EdgeInsets.all(16),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: <Widget>[
                      Padding(
                        padding: const EdgeInsets.symmetric(vertical: 16),
                        child: Text('Primary TextTheme',
                            style: theme.primaryTextTheme.titleMedium),
                      ),
                      const PrimaryTextThemeShowcase(),
                    ],
                  ),
                ),
              ),
              const SizedBox(height: 16),
              const ShowColorSchemeColors(),
            ],
          ),
        ),
      ],
    );
  }
}

class DatePickerDialogShowcase extends StatelessWidget {
  const DatePickerDialogShowcase({super.key});

  Future<void> _openDialog(BuildContext context) async {
    await showDialog<void>(
      context: context,
      useRootNavigator: false,
      builder: (BuildContext context) => DatePickerDialog(
        initialDate: DateTime.now(),
        firstDate: DateTime(1930),
        lastDate: DateTime(2050),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      children: <Widget>[
        AbsorbPointer(
          child: DatePickerDialog(
            initialDate: DateTime.now(),
            firstDate: DateTime(1930),
            lastDate: DateTime(2050),
          ),
        ),
        TextButton(
          child: const Text(
            'Show DatePickerDialog',
            style: TextStyle(fontWeight: FontWeight.bold),
          ),
          onPressed: () async => _openDialog(context),
        ),
      ],
    );
  }
}

/// A Theme Settings class to bundle properties we want to modify on our
/// theme interactively.
@immutable
class ThemeSettings with Diagnosticable {
  final bool useMaterial3;
  final bool useCustomTheme;

  const ThemeSettings({
    required this.useMaterial3,
    required this.useCustomTheme,
  });

  /// Flutter debug properties override, includes toString.
  @override
  void debugFillProperties(DiagnosticPropertiesBuilder properties) {
    super.debugFillProperties(properties);
    properties.add(DiagnosticsProperty<bool>('useMaterial3', useMaterial3));
    properties.add(DiagnosticsProperty<bool>('useCustomTheme', useCustomTheme));
  }

  /// Copy the object with one or more provided properties changed.
  ThemeSettings copyWith({
    bool? useMaterial3,
    bool? useCustomTheme,
    bool? useIndicatorWidth,
    bool? useTileHeight,
  }) {
    return ThemeSettings(
      useMaterial3: useMaterial3 ?? this.useMaterial3,
      useCustomTheme: useCustomTheme ?? this.useCustomTheme,
    );
  }

  /// Override the equality operator.
  @override
  bool operator ==(Object other) {
    if (identical(this, other)) return true;
    if (other.runtimeType != runtimeType) return false;
    return other is ThemeSettings &&
        other.useMaterial3 == useMaterial3 &&
        other.useCustomTheme == useCustomTheme;
  }

  /// Override for hashcode, dart.ui Jenkins based.
  @override
  int get hashCode => Object.hashAll(<Object?>[
        useMaterial3.hashCode,
        useCustomTheme.hashCode,
      ]);
}

class TextThemeShowcase extends StatelessWidget {
  const TextThemeShowcase({super.key});

  @override
  Widget build(BuildContext context) {
    return TextThemeColumnShowcase(textTheme: Theme.of(context).textTheme);
  }
}

class PrimaryTextThemeShowcase extends StatelessWidget {
  const PrimaryTextThemeShowcase({super.key});

  @override
  Widget build(BuildContext context) {
    return TextThemeColumnShowcase(
        textTheme: Theme.of(context).primaryTextTheme);
  }
}

class TextThemeColumnShowcase extends StatelessWidget {
  const TextThemeColumnShowcase({super.key, required this.textTheme});
  final TextTheme textTheme;

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: <Widget>[
        Text('Font: ${textTheme.titleSmall!.fontFamily}',
            style:
                textTheme.titleMedium!.copyWith(fontWeight: FontWeight.w600)),
        Text(
          'Display Large '
          '(${textTheme.displayLarge!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.displayLarge,
        ),
        Text(
          'Display Medium '
          '(${textTheme.displayMedium!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.displayMedium,
        ),
        Text(
          'Display Small '
          '(${textTheme.displaySmall!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.displaySmall,
        ),
        const SizedBox(height: 12),
        Text(
          'Headline Large '
          '(${textTheme.headlineLarge!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.headlineLarge,
        ),
        Text(
          'Headline Medium '
          '(${textTheme.headlineMedium!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.headlineMedium,
        ),
        Text(
          'Headline Small '
          '(${textTheme.headlineSmall!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.headlineSmall,
        ),
        const SizedBox(height: 12),
        Text(
          'Title Large '
          '(${textTheme.titleLarge!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.titleLarge,
        ),
        Text(
          'Title Medium '
          '(${textTheme.titleMedium!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.titleMedium,
        ),
        Text(
          'Title Small '
          '(${textTheme.titleSmall!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.titleSmall,
        ),
        const SizedBox(height: 12),
        Text(
          'Body Large '
          '(${textTheme.bodyLarge!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.bodyLarge,
        ),
        Text(
          'Body Medium '
          '(${textTheme.bodyMedium!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.bodyMedium,
        ),
        Text(
          'Body Small '
          '(${textTheme.bodySmall!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.bodySmall,
        ),
        const SizedBox(height: 12),
        Text(
          'Label Large '
          '(${textTheme.labelLarge!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.labelLarge,
        ),
        Text(
          'Label Medium '
          '(${textTheme.labelMedium!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.labelMedium,
        ),
        Text(
          'Label Small '
          '(${textTheme.labelSmall!.fontSize!.toStringAsFixed(0)})',
          style: textTheme.labelSmall,
        ),
      ],
    );
  }
}

/// Draw a number of boxes showing the colors of key theme color properties
/// in the ColorScheme of the inherited ThemeData and its color properties.
class ShowColorSchemeColors extends StatelessWidget {
  const ShowColorSchemeColors({super.key, this.onBackgroundColor});

  /// The color of the background the color widget are being drawn on.
  ///
  /// Some of the theme colors may have semi transparent fill color. To compute
  /// a legible text color for the sum when it shown on a background color, we
  /// need to alpha merge it with background and we need the exact background
  /// color it is drawn on for that. If not passed in from parent, it is
  /// assumed to be drawn on card color, which usually is close enough.
  final Color? onBackgroundColor;

  // Return true if the color is light, meaning it needs dark text for contrast.
  static bool _isLight(final Color color) =>
      ThemeData.estimateBrightnessForColor(color) == Brightness.light;

  // On color used when a theme color property does not have a theme onColor.
  static Color _onColor(final Color color, final Color bg) =>
      _isLight(Color.alphaBlend(color, bg)) ? Colors.black : Colors.white;

  @override
  Widget build(BuildContext context) {
    final ThemeData theme = Theme.of(context);
    final ColorScheme colorScheme = theme.colorScheme;
    final bool useMaterial3 = theme.useMaterial3;
    const double spacing = 4;

    // Grab the card border from the theme card shape
    ShapeBorder? border = theme.cardTheme.shape;
    // If we had one, copy in a border side to it.
    if (border is RoundedRectangleBorder) {
      border = border.copyWith(
        side: BorderSide(
          color: colorScheme.outlineVariant,
          width: 1,
        ),
      );
      // If
    } else {
      // If border was null, make one matching Card default, but with border
      // side, if it was not null, we leave it as it was.
      border ??= RoundedRectangleBorder(
        borderRadius: BorderRadius.all(Radius.circular(useMaterial3 ? 12 : 4)),
        side: BorderSide(
          color: colorScheme.outlineVariant,
          width: 1,
        ),
      );
    }

    // Get effective background color.
    final Color background =
        onBackgroundColor ?? theme.cardTheme.color ?? theme.cardColor;

    // Wrap this widget branch in a custom theme where card has a border outline
    // if it did not have one, but retains its ambient themed border radius.
    return Theme(
      data: Theme.of(context).copyWith(
        cardTheme: CardTheme.of(context).copyWith(
          elevation: 0,
          surfaceTintColor: Colors.transparent,
          shape: border,
        ),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: <Widget>[
          Padding(
            padding: const EdgeInsets.symmetric(vertical: 8),
            child: Text(
              'ColorScheme Colors',
              style: theme.textTheme.titleMedium,
            ),
          ),
          Wrap(
            alignment: WrapAlignment.start,
            crossAxisAlignment: WrapCrossAlignment.center,
            spacing: spacing,
            runSpacing: spacing,
            children: <Widget>[
              ColorCard(
                label: 'Primary',
                color: colorScheme.primary,
                textColor: colorScheme.onPrimary,
              ),
              ColorCard(
                label: 'on\nPrimary',
                color: colorScheme.onPrimary,
                textColor: colorScheme.primary,
              ),
              ColorCard(
                label: 'Primary\nContainer',
                color: colorScheme.primaryContainer,
                textColor: colorScheme.onPrimaryContainer,
              ),
              ColorCard(
                label: 'onPrimary\nContainer',
                color: colorScheme.onPrimaryContainer,
                textColor: colorScheme.primaryContainer,
              ),
              ColorCard(
                label: 'Secondary',
                color: colorScheme.secondary,
                textColor: colorScheme.onSecondary,
              ),
              ColorCard(
                label: 'on\nSecondary',
                color: colorScheme.onSecondary,
                textColor: colorScheme.secondary,
              ),
              ColorCard(
                label: 'Secondary\nContainer',
                color: colorScheme.secondaryContainer,
                textColor: colorScheme.onSecondaryContainer,
              ),
              ColorCard(
                label: 'on\nSecondary\nContainer',
                color: colorScheme.onSecondaryContainer,
                textColor: colorScheme.secondaryContainer,
              ),
              ColorCard(
                label: 'Tertiary',
                color: colorScheme.tertiary,
                textColor: colorScheme.onTertiary,
              ),
              ColorCard(
                label: 'on\nTertiary',
                color: colorScheme.onTertiary,
                textColor: colorScheme.tertiary,
              ),
              ColorCard(
                label: 'Tertiary\nContainer',
                color: colorScheme.tertiaryContainer,
                textColor: colorScheme.onTertiaryContainer,
              ),
              ColorCard(
                label: 'on\nTertiary\nContainer',
                color: colorScheme.onTertiaryContainer,
                textColor: colorScheme.tertiaryContainer,
              ),
              ColorCard(
                label: 'Error',
                color: colorScheme.error,
                textColor: colorScheme.onError,
              ),
              ColorCard(
                label: 'on\nError',
                color: colorScheme.onError,
                textColor: colorScheme.error,
              ),
              ColorCard(
                label: 'Error\nContainer',
                color: colorScheme.errorContainer,
                textColor: colorScheme.onErrorContainer,
              ),
              ColorCard(
                label: 'onError\nContainer',
                color: colorScheme.onErrorContainer,
                textColor: colorScheme.errorContainer,
              ),
              ColorCard(
                label: 'Background',
                color: colorScheme.background,
                textColor: colorScheme.onBackground,
              ),
              ColorCard(
                label: 'on\nBackground',
                color: colorScheme.onBackground,
                textColor: colorScheme.background,
              ),
              ColorCard(
                label: 'Surface',
                color: colorScheme.surface,
                textColor: colorScheme.onSurface,
              ),
              ColorCard(
                label: 'on\nSurface',
                color: colorScheme.onSurface,
                textColor: colorScheme.surface,
              ),
              ColorCard(
                label: 'Surface\nVariant',
                color: colorScheme.surfaceVariant,
                textColor: colorScheme.onSurfaceVariant,
              ),
              ColorCard(
                label: 'onSurface\nVariant',
                color: colorScheme.onSurfaceVariant,
                textColor: colorScheme.surfaceVariant,
              ),
              ColorCard(
                label: 'Outline',
                color: colorScheme.outline,
                textColor: colorScheme.background,
              ),
              ColorCard(
                label: 'Outline\nVariant',
                color: colorScheme.outlineVariant,
                textColor: colorScheme.onBackground,
              ),
              ColorCard(
                label: 'Shadow',
                color: colorScheme.shadow,
                textColor: _onColor(colorScheme.shadow, background),
              ),
              ColorCard(
                label: 'Scrim',
                color: colorScheme.scrim,
                textColor: _onColor(colorScheme.scrim, background),
              ),
              ColorCard(
                label: 'Inverse\nSurface',
                color: colorScheme.inverseSurface,
                textColor: colorScheme.onInverseSurface,
              ),
              ColorCard(
                label: 'onInverse\nSurface',
                color: colorScheme.onInverseSurface,
                textColor: colorScheme.inverseSurface,
              ),
              ColorCard(
                label: 'Inverse\nPrimary',
                color: colorScheme.inversePrimary,
                textColor: colorScheme.inverseSurface,
              ),
              ColorCard(
                label: 'Surface\nTint',
                color: colorScheme.surfaceTint,
                textColor: colorScheme.onPrimary,
              ),
            ],
          ),
        ],
      ),
    );
  }
}

/// A [SizedBox] with a [Card] and string text in it. Used in this demo to
/// display theme color boxes.
///
/// Can specify label text color and background color.
class ColorCard extends StatelessWidget {
  const ColorCard({
    super.key,
    required this.label,
    required this.color,
    required this.textColor,
    this.size,
  });

  final String label;
  final Color color;
  final Color textColor;
  final Size? size;

  @override
  Widget build(BuildContext context) {
    const double fontSize = 11;
    const Size effectiveSize = Size(86, 58);

    return SizedBox(
      width: effectiveSize.width,
      height: effectiveSize.height,
      child: Card(
        margin: EdgeInsets.zero,
        clipBehavior: Clip.antiAlias,
        color: color,
        child: Center(
          child: Text(
            label,
            style: TextStyle(color: textColor, fontSize: fontSize),
            textAlign: TextAlign.center,
          ),
        ),
      ),
    );
  }
}

/// A utility class to set the color of the font color to null in all
/// [TextStyle]s in a [TextTheme].
class TextThemeColor {
  /// Set font color to null in all styles in passed in [TextTheme] and
  /// return the new [TextTheme] other properties remain unchanged.
  static TextTheme nullFontColor(TextTheme textTheme) {
    /// Set font color to null in all styles in passed in [TextTheme] and
    return TextTheme(
      displayLarge: nullColor(textTheme.displayLarge!),
      displayMedium: nullColor(textTheme.displayMedium!),
      displaySmall: nullColor(textTheme.displaySmall!),
      //
      headlineLarge: nullColor(textTheme.headlineLarge!),
      headlineMedium: nullColor(textTheme.headlineMedium!),
      headlineSmall: nullColor(textTheme.headlineSmall!),
      //
      titleLarge: nullColor(textTheme.titleLarge!),
      titleMedium: nullColor(textTheme.titleMedium!),
      titleSmall: nullColor(textTheme.titleSmall!),
      //
      bodyLarge: nullColor(textTheme.bodyLarge!),
      bodyMedium: nullColor(textTheme.bodyMedium!),
      bodySmall: nullColor(textTheme.bodySmall!),
      //
      labelLarge: nullColor(textTheme.labelLarge!),
      labelMedium: nullColor(textTheme.labelMedium!),
      labelSmall: nullColor(textTheme.labelSmall!),
    );
  }

  /// Set font color to null in passed in [TextStyle] and
  /// return the new [TextStyle], other properties remain unchanged.
  static TextStyle nullColor(TextStyle style) {
    return TextStyle(
      color: null, // Set color to NULL, let ThemeData handle default.
      backgroundColor: style.backgroundColor,
      fontSize: style.fontSize,
      fontWeight: style.fontWeight,
      fontStyle: style.fontStyle,
      letterSpacing: style.letterSpacing,
      wordSpacing: style.wordSpacing,
      textBaseline: style.textBaseline,
      height: style.height,
      leadingDistribution: style.leadingDistribution,
      locale: style.locale,
      foreground: style.foreground,
      background: style.background,
      shadows: style.shadows,
      fontFeatures: style.fontFeatures,
      fontVariations: style.fontVariations,
      decoration: style.decoration,
      decorationColor: style.decorationColor,
      decorationStyle: style.decorationStyle,
      decorationThickness: style.decorationThickness,
      debugLabel: style.debugLabel,
      fontFamily: style.fontFamily,
      fontFamilyFallback: style.fontFamilyFallback,
      overflow: style.overflow,
    );
  }
}

```

</details>






### Used versions

* Flutter Channel stable, 3.10.0
* GoogleFonts 4.0.4

### Relevant log output

<details>
  <summary>Flutter doctor</summary>

```console
flutter doctor -v
[v] Flutter (Channel stable, 3.10.0, on macOS 13.2.1 22D68 darwin-arm64, locale en-US)
    • Flutter version 3.10.0 on channel stable at /Users/rydmike/fvm/versions/stable
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 84a1e904f4 (6 days ago), 2023-05-09 07:41:44 -0700
    • Engine revision d44b5a94c9
    • Dart version 3.0.0
    • DevTools version 2.23.1

[✓] Android toolchain - develop for Android devices (Android SDK version 33.0.0)
    • Android SDK at /Users/rydmike/Library/Android/sdk
    • Platform android-33, build-tools 33.0.0
    • Java binary at: /Applications/Android Studio.app/Contents/jbr/Contents/Home/bin/java
    • Java version OpenJDK Runtime Environment (build 11.0.15+0-b2043.56-8887301)
    • All Android licenses accepted.

[✓] Xcode - develop for iOS and macOS (Xcode 14.3)
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Build 14E222b
    • CocoaPods version 1.11.3

[✓] Chrome - develop for the web
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2022.1)
    • Android Studio at /Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 11.0.15+0-b2043.56-8887301)

[✓] IntelliJ IDEA Community Edition (version 2023.1)
    • IntelliJ at /Applications/IntelliJ IDEA CE.app
    • Flutter plugin version 73.0.4
    • Dart plugin version 231.8109.91

[✓] VS Code (version 1.77.3)
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension version 3.62.0

[✓] Connected device (2 available)
    • macOS (desktop) • macos  • darwin-arm64   • macOS 13.2.1 22D68 darwin-arm64
    • Chrome (web)    • chrome • web-javascript • Google Chrome 113.0.5672.92

[✓] Network resources
    • All expected network resources are available.

```

</details>

",y,
170636,"This PR adds a `splashRadius` to the `IconButtonThemeData` class to allow customisation. Also ensured to add test cases.

Fixes https://github.com/flutter/flutter/issues/72267

```
testWidgets('IconButtonTheme IconButton.styleFrom splashRadius overrides default splash radius', (
      WidgetTester tester,
      ) async {
    const double splashRadius = 42.0;
    await tester.pumpWidget(
      MaterialApp(
        home: Scaffold(
          body: Center(
            child: IconButtonTheme(
              data: IconButtonThemeData(
                style: IconButton.styleFrom(),
                splashRadius: splashRadius
              ),
              child: IconButton(
                onPressed: () {},
                icon: const Icon(Icons.add),
              ),
            ),
          ),
        ),
      )
    );
  });

```",n,
171261,"fix https://github.com/flutter/flutter/issues/170413

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.
",n,
174564,"### Package

google_fonts

### Description

My dart server has the function to create the pdf file but my Thai language doesn't support it with the default font on the [pdf package](https://pub.dev/packages/pdf). Then I want to use the font from this package.
But it looks like this package doesn't support the Dart server side.
I got this error after running the server.
```
/C:/Users/user/AppData/Local/Pub/Cache/hosted/pub.dev/google_fonts-4.0.3/lib/google_fonts.dart:7:8: Error: Dart library 'dart:ui' is not available on this platform.
import 'dart:ui' as ui;
^
Context: The unavailable library 'dart:ui' is imported through these packages:

dart_server.dart => package:google_fonts => dart:ui
dart_server.dart => package:google_fonts => package:flutter => dart:ui
...

Detailed import paths for (some of) the these imports:

dart_server.dart => package:google_fonts/google_fonts.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/assertions.dart => package:flutter/src/foundation/diagnostics.dart => package:flutter/src/foundation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/binding.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/binding.dart => package:flutter/src/foundation/assertions.dart => package:flutter/src/foundation/diagnostics.dart => package:flutter/src/foundation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/binding.dart => package:flutter/src/foundation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/change_notifier.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/change_notifier.dart => package:flutter/src/foundation/assertions.dart => package:flutter/src/foundation/diagnostics.dart => package:flutter/src/foundation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/change_notifier.dart => package:flutter/src/foundation/diagnostics.dart => package:flutter/src/foundation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/change_notifier.dart => package:flutter/src/foundation/memory_allocations.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/change_notifier.dart => package:flutter/src/foundation/memory_allocations.dart => package:flutter/src/foundation/assertions.dart => package:flutter/src/foundation/diagnostics.dart => package:flutter/
src/foundation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/change_notifier.dart => package:flutter/src/foundation/memory_allocations.dart => package:flutter/src/foundation/diagnostics.dart => package:flutter/src/foundation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/diagnostics.dart => package:flutter/src/foundation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/key.dart => package:flutter/src/foundation/diagnostics.dart => package:flutter/src/foundation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/memory_allocations.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/memory_allocations.dart => package:flutter/src/foundation/assertions.dart => package:flutter/src/foundation/diagnostics.dart => package:flutter/src/foundation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/foundation.dart => package:flutter/src/foun
dation/memory_allocations.dart => package:flutter/src/foundation/diagnostics.dart => package:flutter/src/foundation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/scheduler.dart => package:flutter/src/sched
uler/binding.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/scheduler.dart => package:flutter/src/sched
uler/binding.dart => package:flutter/src/scheduler/priority.dart => package:flutter/foundation.dart => package:flutter/src/foundation/assertions.dart => package:flutter/src/foundation/diagnostics.dart => pa
ckage:flutter/src/foundation/debug.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/scheduler.dart => package:flutter/src/sched
uler/binding.dart => package:flutter/src/scheduler/priority.dart => package:flutter/foundation.dart => package:flutter/src/foundation/binding.dart => dart:ui
dart_server.dart => package:google_fonts/google_fonts.dart => package:flutter/material.dart => package:flutter/src/material/about.dart => package:flutter/scheduler.dart => package:flutter/src/sched
uler/binding.dart => package:flutter/src/scheduler/priority.dart => package:flutter/foundation.dart => package:flutter/src/foundation/binding.dart => package:flutter/src/foundation/assertions.dart => packag
^
/C:/src/flutter/packages/flutter/lib/src/material/app_bar_theme.dart:5:8: Error: Dart library 'dart:ui' is not available on this platform.
import 'dart:ui' show lerpDouble;
^
/C:/src/flutter/packages/flutter/lib/src/material/arc.dart:6:8: Error: Dart library 'dart:ui' is not available on this platform.
import 'dart:ui' show lerpDouble;
^
/C:/src/flutter/packages/flutter/lib/src/material/badge_theme.dart:5:8: Error: Dart library 'dart:ui' is not available on this platform.
import 'dart:ui' show lerpDouble;
^
```",y,
174251,"### Steps to reproduce

1. Run the sample code
2. Use a trackpad gesture (e.g. two-finger pinch or scroll) over the blue box.
3. Observe that no pan/zoom events are printed to the console.


### Expected results

Pointer pan/zoom gestures (e.g. trackpad pinch or pan) should trigger the corresponding callbacks.

### Actual results

No PointerPanZoom events are triggered on Web. The same code works as expected on macOS.

### Code sample

<details open><summary>Code sample</summary>

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(const MainApp());
}

class MainApp extends StatelessWidget {
  const MainApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Listener(
        onPointerPanZoomStart: (event) {
          print('pointer pan zoom started');
        },
        onPointerPanZoomUpdate: (event) {
          print('pointer pan zoom updated');
        },
        onPointerPanZoomEnd: (event) {
          print('pointer pan zoom ended');
        },
        child: Container(color: Colors.blue, width: 300, height: 300),
      ),
    );
  }
}

```

</details>


### Screenshots or Video

<details open>
<summary>Screenshots / Video demonstration</summary>

[Upload media here]

</details>


### Logs

<details open><summary>Logs</summary>

```console
[Paste your logs here]
```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
❯ flutter doctor -v
[✓] Flutter (Channel stable, 3.35.1, on macOS 15.6 24G84 darwin-arm64, locale en-VN) [288ms]
    • Flutter version 3.35.1 on channel stable at /Users/khoa.nguyen/fvm/versions/3.35.1
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 20f8274939 (7 days ago), 2025-08-14 10:53:09 -0700
    • Engine revision 1e9a811bf8
    • Dart version 3.9.0
    • DevTools version 2.48.0
    • Feature flags: enable-web, enable-linux-desktop, enable-macos-desktop, enable-windows-desktop, enable-android, enable-ios, cli-animations,
      enable-lldb-debugging

[!] Android toolchain - develop for Android devices (Android SDK version 36.0.0) [1,172ms]
    • Android SDK at /Users/khoa.nguyen/Library/Android/sdk
    • Emulator version 35.5.10.0 (build_id 13402964) (CL:N/A)
    • Platform android-36, build-tools 36.0.0
    • Java binary at: /opt/homebrew/opt/openjdk@17/bin/java
      This JDK is specified in your Flutter configuration.
      To change the current JDK, run: `flutter config --jdk-dir=""path/to/jdk""`.
    • Java version OpenJDK Runtime Environment Homebrew (build 17.0.15+0)
    ! Some Android licenses not accepted. To resolve this, run: flutter doctor --android-licenses

[✓] Xcode - develop for iOS and macOS (Xcode 16.4) [808ms]
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Build 16F6
    • CocoaPods version 1.16.2

[✓] Chrome - develop for the web [7ms]
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2024.3) [7ms]
    • Android Studio at /Users/khoa.nguyen/Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 21.0.6+-13368085-b895.109)

[✓] VS Code (version 1.103.1) [6ms]
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension version 3.116.0

[✓] Connected device (3 available) [5.9s]
    • iPhone 16 Pro Max (mobile) • 1FB5DCF2-7F04-4919-8C57-0E963C451C35 • ios            • com.apple.CoreSimulator.SimRuntime.iOS-18-5 (simulator)
    • macOS (desktop)            • macos                                • darwin-arm64   • macOS 15.6 24G84 darwin-arm64
    • Chrome (web)               • chrome                               • web-javascript • Google Chrome 139.0.7258.128

[✓] Network resources [1,055ms]
    • All expected network resources are available.

! Doctor found issues in 1 category.
```

</details>
",y,
174565,"### Package

google_fonts

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

google_fonts library JavaScript itself has the file size of 8Mb.
It is only library JavaScript, so fonts are loaded additionally and have their own file sizes.

Might be nice to reduce the library JavaScript file size to something acceptable for the web.

> google_fonts_base.dart.lib.js size 8Mb
![image](https://user-images.githubusercontent.com/25195453/226542968-aee19ebe-27f2-4865-9211-945a48c63201.png)


### Relevant log output

_No response_",n,
174566,"### Package

google_fonts

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:
Letters are rendered correctly whether the Roboto font is loaded through google_fonts or not.

## Steps to reproduce:
See attached code.
The text is rendered perfectly fine as long as you don't load the Google Font. Once loaded, the ""Roboto_regular' text breaks.
Is the 'regular' variant of Roboto not the default one ?

```dart
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

void main() {
  runApp(const MaterialApp(
    home: MyHomePage(),
  ));
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key});

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {

  void loadGoodleFont() {
    GoogleFonts.getFont('Roboto');
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Test'),
        actions: [
          IconButton(
            onPressed: loadGoodleFont,
            icon: const Icon(Icons.refresh,),
          ),
        ],
      ),
      body: Column(
        children: const [
          Text(
            'S̴i̴L̴e̶N̷c̴E̷.̷ ̴',
            style: TextStyle(fontFamily: 'Roboto'),
          ),
          Text(
            'S̴i̴L̴e̶N̷c̴E̷.̷ ̴',
            style: TextStyle(fontFamily: 'Roboto_regular'),
          ),
        ],
      ),
    );
  }
}

```

### Relevant log output

```shell
[√] Flutter (Channel stable, 3.7.6, on Microsoft Windows [Version 10.0.19044.2604], locale fr-BE)
    • Flutter version 3.7.6 on channel stable at D:\Code\Flutter\sdk\flutter
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 12cb4eb7a0 (8 days ago), 2023-03-01 10:29:26 -0800
    • Engine revision ada363ee93
    • Dart version 2.19.3
    • DevTools version 2.20.1

[√] Windows Version (Installed version of Windows is version 10 or higher)

[√] Android toolchain - develop for Android devices (Android SDK version 30.0.3)
    • Android SDK at C:\Users\user\AppData\Local\Android\sdk
    • Platform android-33, build-tools 30.0.3
    • Java binary at: C:\Program Files\Android\Android Studio\jre\bin\java
    • Java version OpenJDK Runtime Environment (build 11.0.12+7-b1504.28-7817840)
    • All Android licenses accepted.

[√] Android Studio (version 2021.2)
    • Android Studio at C:\Program Files\Android\Android Studio
    • Flutter plugin can be installed from:
       https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
       https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 11.0.12+7-b1504.28-7817840)

[√] VS Code (version 1.76.0)
    • VS Code at C:\Users\user\AppData\Local\Programs\Microsoft VS Code
    • Flutter extension version 3.44.0

[√] VS Code, 64-bit edition (version 1.74.3)
    • VS Code at C:\Program Files\Microsoft VS Code
    • Flutter extension version 3.44.0

[√] Connected device (1 available)
    • sdk gphone64 x86 64 (mobile) • emulator-5554 • android-x64 • Android 13 (API 33) (emulator)

[√] HTTP Host Availability
    • All required HTTP hosts are available

• No issues found!
```
",y,
174497,"This PR adds support for configuring smartQuotesType and smartDashesType in SearchAnchor. These values are passed down to the inner TextField, allowing developers to control smart quotes and smart dashes behavior consistently when using SearchAnchor

fixes: #174509 

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [x] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.
",n,
174049,"### Steps to reproduce

Run the example code on chrome with a linux build.

### Expected results

Drag events should work as they do on other browsers, and even Windows Chrome.

### Actual results

Drag events are broken, no updates are provided and end does not output accurate coordinates.

### Code sample

<details open><summary>Code sample</summary>

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(const App());
}

class App extends StatelessWidget {
  const App({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(
        body: DragGestureDemo(),
      ),
    );
  }
}

class DragGestureDemo extends StatefulWidget {
  const DragGestureDemo({super.key});

  @override
  State<DragGestureDemo> createState() => _DragGestureDemoState();
}

class _DragGestureDemoState extends State<DragGestureDemo> {
  Offset _offset = const Offset(120, 150);

  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        Positioned.fill(
          child: IgnorePointer(
            ignoring: true,
            child: CustomPaint(
              painter: _CrosshairPainter(),
            ),
          ),
        ),
        Positioned(
          left: _offset.dx,
          top: _offset.dy,
          child: GestureDetector(
            onPanStart: (details) {
              print(
                  'PanStart: global=${details.globalPosition}, local=${details.localPosition}');
            },
            onPanUpdate: (details) {
              setState(() {
                _offset += details.delta;
              });
              print(
                  'PanUpdate: delta=${details.delta}, global=${details.globalPosition}, local=${details.localPosition} -> newOffset=$_offset');
            },
            onPanEnd: (details) {
              print(
                  'PanEnd: velocity=${details.velocity.pixelsPerSecond}, magnitude=${details.velocity.pixelsPerSecond.distance}');
            },
            onPanCancel: () {
              print('PanCancel');
            },
            child: MouseRegion(
              cursor: SystemMouseCursors.move,
              child: Container(
                width: 200,
                height: 100,
                decoration: BoxDecoration(
                  color: Colors.cyan,
                  borderRadius: BorderRadius.circular(8),
                  boxShadow: const [
                    BoxShadow(
                      color: Colors.black26,
                      blurRadius: 8,
                      offset: Offset(2, 4),
                    )
                  ],
                ),
                alignment: Alignment.center,
                child: const Text(
                  'Gesture Drag\n(Watch console)',
                  textAlign: TextAlign.center,
                  style: TextStyle(fontSize: 16, fontWeight: FontWeight.w600),
                ),
              ),
            ),
          ),
        ),
      ],
    );
  }
}

class _CrosshairPainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    final paint = Paint()
      ..color = Colors.grey.shade300
      ..strokeWidth = 1;
    canvas.drawLine(Offset(size.width / 2, 0),
        Offset(size.width / 2, size.height), paint);
    canvas.drawLine(Offset(0, size.height / 2),
        Offset(size.width, size.height / 2), paint);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) => false;
}
```

</details>


### Screenshots or Video




### Logs

<details open><summary>Logs</summary>

```console
PanStart: global=Offset(226.0, 221.0), local=Offset(106.0, 71.0)
PanEnd: velocity=Offset(0.0, 0.0), magnitude=0
PanStart: global=Offset(243.0, 180.0), local=Offset(123.0, 30.0)
PanEnd: velocity=Offset(0.0, 0.0), magnitude=0
PanStart: global=Offset(262.0, 169.0), local=Offset(142.0, 19.0)
PanEnd: velocity=Offset(0.0, 0.0), magnitude=0
```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
[✓] Flutter (Channel stable, 3.35.1, on Ubuntu 25.04 6.14.0-28-generic, locale en_US.UTF-8) [42ms]
    • Flutter version 3.35.1 on channel stable at /home/code/flutter
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 20f8274939 (5 days ago), 2025-08-14 10:53:09 -0700
    • Engine revision 1e9a811bf8
    • Dart version 3.9.0
    • DevTools version 2.48.0
    • Feature flags: enable-web, enable-linux-desktop, enable-macos-desktop, enable-windows-desktop, enable-android, enable-ios,
      cli-animations, enable-lldb-debugging

[✗] Android toolchain - develop for Android devices [22ms]
    ✗ Unable to locate Android SDK.
      Install Android Studio from: https://developer.android.com/studio/index.html
      On first launch it will assist you in installing the Android SDK components.
      (or visit https://flutter.dev/to/linux-android-setup for detailed instructions).
      If the Android SDK has been installed to a custom location, please use
      `flutter config --android-sdk` to update to that location.


[✓] Chrome - develop for the web [11ms]
    • Chrome at google-chrome

[✗] Linux toolchain - develop for Linux desktop [25ms]
    ✗ clang++ is required for Linux development.
      It is likely available from your distribution (e.g.: apt install clang), or can be downloaded from https://releases.llvm.org/
    ✗ CMake is required for Linux development.
      It is likely available from your distribution (e.g.: apt install cmake), or can be downloaded from
      https://cmake.org/download/
    ✗ ninja is required for Linux development.
      It is likely available from your distribution (e.g.: apt install ninja-build), or can be downloaded from
      https://github.com/ninja-build/ninja/releases
    ✗ pkg-config is required for Linux development.
      It is likely available from your distribution (e.g.: apt install pkg-config), or can be downloaded from
      https://www.freedesktop.org/wiki/Software/pkg-config/

[!] Android Studio (not installed) [9ms]
    • Android Studio not found; download from https://developer.android.com/studio/index.html
      (or visit https://flutter.dev/to/linux-android-setup for detailed instructions).

[✓] VS Code (version 1.103.1) [8ms]
    • VS Code at /usr/share/code
    • Flutter extension version 3.116.0

[✓] Connected device (2 available) [64ms]
    • Linux (desktop) • linux  • linux-x64      • Ubuntu 25.04 6.14.0-28-generic
    • Chrome (web)    • chrome • web-javascript • Google Chrome 139.0.7258.127

[✓] Network resources [560ms]
    • All expected network resources are available.
```

</details>
",y,
174567,"## Steps to Reproduce

I am about to use a bundled version of a font, the documentation says:

> Note: Since these files are listed as assets, there is no need to list them in the fonts section of the pubspec.yaml. This can be done because the files are consistently named from the Google Fonts API (so be sure not to rename them!)

I did the same for [`Plus Jakarta Sans`](https://fonts.google.com/specimen/Plus+Jakarta+Sans?query=Plus+#standard-styles) with `allowRuntimeFetching = false` but this lead to the error:

```
I/flutter ( 9128): Error: google_fonts was unable to load font PlusJakartaSans-Regular because the following exception occurred:
I/flutter ( 9128): Exception: GoogleFonts.config.allowRuntimeFetching is false but font PlusJakartaSans-Regular was not found in the application assets. Ensure PlusJakartaSans-Regular.ttf exists in a folder that is included in your pubspec's assets.
```

Which makes sense as I don't have `PlusJakartaSans-Regular.ttf` in the assets but `PlusJakartaSans-VariableFont_wght.ttf` which is the one you get when downloading from Google Fonts. 


**Expected results:** 
The variable font should be used.

**Actual results:** <!-- what did you see? -->
It does not get used


**Additional context** 
A workaround for just downloading the regular variant is also not possible, since when you just select the regular style on fonts.google.com also only the variable font is downloaded

https://fonts.google.com/share?selection.family=Plus%20Jakarta%20Sans




",n,
174568,"**Describe the bug**
During golden tests, I noticed that any font coming from google_fonts is missing in the first golden. Creating the same golden again (with pumping the widget again) then works. 


**To Reproduce**
Steps to reproduce the behavior:
Take the default main app and add a font from the google_fonts package:
```
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({Key? key, required this.title}) : super(key: key);
  final String title;

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;

  void _incrementCounter() {
    setState(() {
      _counter++;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text(widget.title)),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'You have pushed the button this many times:',
              style: TextStyle(fontFamily: 'Teko'),
            ),
            Text(
              '$_counter',
              style: GoogleFonts.lato(
                fontSize: 20,
                fontWeight: FontWeight.bold,
              ),
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Increment',
        child: Icon(Icons.add),
      ), // This trailing comma makes auto-formatting nicer for build methods.
    );
  }
}
```

Running the following tests: 
```
import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';

import 'package:example/main.dart';

void main() {
  testWidgets('Counter increments smoke test', (WidgetTester tester) async {
    await tester.pumpWidget(MaterialApp(home: MyHomePage(title: 'Test')));

    await expectLater(
        find.byType(MyHomePage), matchesGoldenFile('goldens/test1.png'));
  });

  testWidgets('Counter increments smoke test', (WidgetTester tester) async {
    await tester.pumpWidget(MaterialApp(home: MyHomePage(title: 'Test')));

    await expectLater(
        find.byType(MyHomePage), matchesGoldenFile('goldens/test2.png'));
  });
}
```

**Expected behavior**
Both Goldens should look identical. Only the counter is of interest here. The other text that does not load properly is not relevant here. 

**Include the contents of your `google_fonts` directory**
Pubspec.yaml:
```
flutter:
  uses-material-design: true
  assets:
    - images/
    - google_fonts/
```
<img width=""267"" alt=""Screenshot 2021-06-29 at 19 42 32"" src=""https://user-images.githubusercontent.com/86478606/123843403-2945a180-d912-11eb-93ee-7b0fd7f8101a.png"">


**Screenshots**
goldens/test1.png
![test1](https://user-images.githubusercontent.com/86478606/123843604-627e1180-d912-11eb-8ee9-79f900d253c7.png)
goldens/test2.png
![test2](https://user-images.githubusercontent.com/86478606/123843606-6316a800-d912-11eb-984a-6427bb6a6342.png)


**Desktop (please complete the following information if applicable):**
 - OS: macOS BigSur 11.2.3
 - Flutter 2.2.2 • channel stable • https://github.com/flutter/flutter.git
 - Framework • revision d79295af24 (3 weeks ago) • 2021-06-11 08:56:01 -0700
 - Engine • revision 91c9fc8fe0
 - Tools • Dart 2.13.3

**Additional context**
This could probably be solved by the requests made in material-foundation/flutter-packages#151 or material-foundation/flutter-packages#150.",y,
174211,"### Steps to reproduce

1. Run the sample code
2. Use a laptop trackpad to zoom
3. Observe that both callbacks fire repeatedly during the gesture.

### Expected results

onInteractionStart should fire once when the user begins an interaction .
onInteractionEnd should fire once when the user ends the interaction.

### Actual results

Both callbacks fire every frame update of the gesture. 
This does not happen on MacOS 

### Code sample

<details open><summary>Code sample</summary>

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        body: Center(
          child: InteractiveViewer(
            onInteractionStart: (_) => print(""Start""),
            onInteractionEnd: (_) => print(""End""),
            child: Container(
              width: 200,
              height: 200,
              color: Colors.blue,
            ),
          ),
        ),
      ),
    );
  }
}

```

</details>


### Screenshots or Video

<details open>
<summary>Screenshots / Video demonstration</summary>

[Upload media here]

</details>


### Logs

<details open><summary>Logs</summary>

```console
Launching lib/main.dart on Chrome in debug mode...
This app is linked to the debug service: ws://127.0.0.1:55511/RZchx6z7jb4=/ws
Debug service listening on ws://127.0.0.1:55511/RZchx6z7jb4=/ws
Connecting to VM Service at ws://127.0.0.1:55511/RZchx6z7jb4=/ws
Connected to the VM Service.
Start
End
Start
End
Start
End
Start
End
Start
End
Start
End
Start
End
Start
End
Start
End
Start
End
Start
End
Start
End
Start
End
Start
End

```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
❯ flutter doctor -v
[✓] Flutter (Channel master, 3.33.0-1.0.pre-1511, on macOS 15.5 24F74 darwin-arm64, locale en-VN) [2.7s]
    • Flutter version 3.33.0-1.0.pre-1511 on channel master at /Users/khoa/Work/flutter
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 91bc77d790 (13 hours ago), 2025-08-20 20:27:09 -0400
    • Engine revision 00590369f7
    • Dart version 3.10.0 (build 3.10.0-118.0.dev)
    • DevTools version 2.49.0
    • Feature flags: enable-web, enable-linux-desktop, enable-macos-desktop, enable-windows-desktop, enable-android, enable-ios, cli-animations, enable-native-assets, omit-legacy-version-file,
      enable-lldb-debugging

[✓] Android toolchain - develop for Android devices (Android SDK version 35.0.0) [864ms]
    • Android SDK at /Users/khoa/Library/Android/sdk
    • Emulator version 35.2.10.0 (build_id 12414864) (CL:N/A)
    • Platform android-36, build-tools 35.0.0
    • Java binary at: /Users/khoa/Applications/Android Studio.app/Contents/jbr/Contents/Home/bin/java
      This is the JDK bundled with the latest Android Studio installation on this machine.
      To manually set the JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`.
    • Java version OpenJDK Runtime Environment (build 21.0.4+-12422083-b607.1)
    • All Android licenses accepted.

[✓] Xcode - develop for iOS and macOS (Xcode 16.2) [549ms]
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Build 16C5032a
    • CocoaPods version 1.16.2

[✓] Chrome - develop for the web [5ms]
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Connected device (3 available) [5.6s]
    • iPhone 16 Pro Max (mobile) • 33B397ED-CCA5-4780-BD6C-E3EF3C8CCE0A • ios            • com.apple.CoreSimulator.SimRuntime.iOS-18-2 (simulator)
    • macOS (desktop)            • macos                                • darwin-arm64   • macOS 15.5 24F74 darwin-arm64
    • Chrome (web)               • chrome                               • web-javascript • Google Chrome 139.0.7258.128

[✓] Network resources [407ms]
    • All expected network resources are available.

• No issues found!
```

</details>
",y,
174569,"Would be great if it was possible to use the loaded font as a fallback ex. something like 
```
  GoogleFonts.getFont('Noto Color Emoji Compat')

  Text(
      'Hello 👋',
      style: TextStyle(
        fontFamilyFallback: ['Noto Color Emoji Compat'],
      ),
    )
```
The scenario where it would be useful is if we want to have a default font, but if it doesn't have a specific emoji (very common on older Android versions), fallback to a dynamically loaded emoji font. I know it is possible if you include emoji font in the asset folder, but it increases the app file size.",n,
174570,"I know that Flutter ""rounds"" your weight selection to the nearest available, but how do you find all the available weights for a font? I couldn't find any method that does this.

For example, if I had a font selector with weight, how would I let the user select semibold/bold/black in one font, but just regular/light in the other? If I display the 9 options and ask to choose one, it would be trial and error.",n,
173159,"Feat: Make CupertinoSheetRouteTransitionMixin a public API
fixes: #161502 

## Pre-launch Checklist

- [x] I read the [Contributor Guide] and followed the process outlined there for submitting PRs.
- [x] I read the [Tree Hygiene] wiki page, which explains my responsibilities.
- [x] I read and followed the [Flutter Style Guide], including [Features we expect every widget to implement].
- [x] I signed the [CLA].
- [x] I listed at least one issue that this PR fixes in the description above.
- [x] I updated/added relevant documentation (doc comments with `///`).
- [ ] I added new tests to check the change I am making, or this PR is [test-exempt].
- [x] I followed the [breaking change policy] and added [Data Driven Fixes] where supported.
- [x] All existing and new tests are passing.",n,
174215,"### Steps to reproduce

1. Place one finger (left hand) on the trackpad.
2. Place two fingers (right hand) and swipe down.
3. Release the two fingers (right hand).
4. Release the one finger (left hand).
5. Place one finger (left hand) again.
6. Place two fingers (right hand) and swipe down.
7. Observe the exception.

Repeat a few times if needed

### Expected results

No exception

### Actual results

Exception threw

### Code sample

<details open><summary>Code sample</summary>

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        body: Center(
          child: GestureDetector( 
            child: Center(),
          ),
        ),
      ),
    );
  }
}
```

</details>


### Screenshots or Video

<details open>
<summary>Screenshots / Video demonstration</summary>

[Upload media here]

</details>


### Logs

<details open><summary>Logs</summary>

```console
[   +1 ms] Debug service listening on ws://127.0.0.1:62115/eSWJbumYxkA=/ws
[        ] Flutter run key commands.
[        ] r Hot reload. 🔥🔥🔥
[        ] R Hot restart.
[        ] h List all available interactive commands.
[        ] d Detach (terminate ""flutter run"" but leave application running).
[        ] c Clear the screen
[        ] q Quit (terminate the application on the device).
[        ] A Dart VM Service on Chrome is available at: http://127.0.0.1:62115/eSWJbumYxkA=
[   +7 ms] Starting application from main method in: org-dartlang-app:/web_entrypoint.dart.
[ +205 ms] ExpressionEvaluator: Evaluating ""() { return true; }"" at
packages/flutter/src/cupertino/text_form_field_row.dart
[   +4 ms] ExpressionEvaluator: Evaluating JS: ""function () {
             try {
               return ((() => {var sentinel = {}; var output = function() {
                   let dart = dartDevEmbedder.importLibrary(""dart:_runtime"", function(lib) {
                     dart = lib;
                   });
                   let dart_rti = dartDevEmbedder.importLibrary(""dart:_rti"", function(lib) {
                     dart_rti = lib;
                   });
                   let dartx = dartDevEmbedder.importLibrary(""dartx"", function(lib) {
                     dartx = lib;
                   });
                   var T = {
                     VoidTobool: () => (T.VoidTobool = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse,
                     ""core|bool()"", true)))()
                   };
                   return dart.fn(() => true, T.VoidTobool());
                 }(); if (output === sentinel) throw Error(""Value not found in scope"");return output?._boundMethod ||
                 output;})())();
             } catch (error) {
               return error.name + "": "" + error.message;
             }
           }"" with scope: {}
[  +39 ms] ExpressionEvaluator: Evaluated ""() { return true; }"" to ""{type: boolean, value: true}""
[ +196 ms] The Flutter DevTools debugger and profiler on Chrome is available at:
                    http://127.0.0.1:9102?uri=http://127.0.0.1:62115/eSWJbumYxkA=
[+8289 ms] ══╡ EXCEPTION CAUGHT BY GESTURES LIBRARY ╞══════════════════════════════════════════════════════════
[   +3 ms] The following assertion was thrown while handling a pointer data packet:
[        ] Assertion failed:
[        ] file:///Users/khoa/fvm/versions/stable/packages/flutter/lib/src/gestures/events.dart:1639:15
[        ] !identical(kind, PointerDeviceKind.trackpad)
[        ] is not true
[        ] When the exception was thrown, this was the stack:
[        ] dart-sdk/lib/_internal/js_dev_runtime/private/ddc_runtime/errors.dart 274:3        throw_
[        ] dart-sdk/lib/_internal/js_dev_runtime/private/ddc_runtime/errors.dart 44:3         assertFailed
[        ] package:flutter/src/gestures/events.dart 1639:50                                   new
[        ] package:flutter/src/gestures/converter.dart 152:26                                 <fn>
[        ] dart-sdk/lib/internal/iterable.dart 420:20                                         moveNext
[        ] dart-sdk/lib/internal/iterable.dart 904:20                                         moveNext
[   +1 ms] dart-sdk/lib/_internal/js_dev_runtime/private/ddc_runtime/operations.dart 1277:20  next
[        ] dart-sdk/lib/collection/queue.dart 755:14                                          addAll
[        ] package:flutter/src/gestures/binding.dart 304:7
[_handlePointerDataPacket]
[        ] dart-sdk/lib/_internal/js_dev_runtime/private/ddc_runtime/operations.dart 118:77   tear
[        ] lib/_engine/engine/platform_dispatcher.dart 1537:5                                 invoke1
[        ] lib/_engine/engine/platform_dispatcher.dart 292:5                                  invokeOnPointerDataPacket
[        ] lib/_engine/engine/pointer_binding.dart 440:30                                     [_sendToFramework]
[        ] lib/_engine/engine/pointer_binding.dart 228:7                                      onPointerData
[        ] dart-sdk/lib/_internal/js_dev_runtime/private/ddc_runtime/operations.dart 118:77   tear
[        ] lib/_engine/engine/pointer_binding.dart 757:14                                     [_handleWheelEvent]
[        ] lib/_engine/engine/pointer_binding.dart 1080:7                                     <fn>
[        ] dart-sdk/lib/async/zone.dart 1849:54                                               runUnary
[        ] dart-sdk/lib/async/zone.dart 1804:26                                               <fn>
[        ] dart-sdk/lib/_internal/js_dev_runtime/patch/js_allow_interop_patch.dart 224:27     _callDartFunctionFast1
[        ] ════════════════════════════════════════════════════════════════════════════════════════════════════

```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
❯ flutter doctor -v
[✓] Flutter (Channel stable, 3.35.1, on macOS 15.5 24F74 darwin-arm64, locale en-VN) [209ms]
    • Flutter version 3.35.1 on channel stable at /Users/khoa/fvm/versions/stable
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 20f8274939 (7 days ago), 2025-08-14 10:53:09 -0700
    • Engine revision 1e9a811bf8
    • Dart version 3.9.0
    • DevTools version 2.48.0
    • Feature flags: enable-web, enable-linux-desktop, enable-macos-desktop, enable-windows-desktop, enable-android,
      enable-ios, cli-animations, enable-lldb-debugging

[✓] Android toolchain - develop for Android devices (Android SDK version 35.0.0) [1,212ms]
    • Android SDK at /Users/khoa/Library/Android/sdk
    • Emulator version 35.2.10.0 (build_id 12414864) (CL:N/A)
    • Platform android-36, build-tools 35.0.0
    • Java binary at: /Users/khoa/Applications/Android Studio.app/Contents/jbr/Contents/Home/bin/java
      This is the JDK bundled with the latest Android Studio installation on this machine.
      To manually set the JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`.
    • Java version OpenJDK Runtime Environment (build 21.0.4+-12422083-b607.1)
    • All Android licenses accepted.

[✓] Xcode - develop for iOS and macOS (Xcode 16.2) [535ms]
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Build 16C5032a
    • CocoaPods version 1.16.2

[✓] Chrome - develop for the web [5ms]
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2024.2) [5ms]
    • Android Studio at /Users/khoa/Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 21.0.4+-12422083-b607.1)

[✓] VS Code (version 1.103.1) [4ms]
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension version 3.116.0

[✓] Connected device (3 available) [5.7s]
    • iPhone 16 Pro Max (mobile) • 33B397ED-CCA5-4780-BD6C-E3EF3C8CCE0A • ios            •
      com.apple.CoreSimulator.SimRuntime.iOS-18-2 (simulator)
    • macOS (desktop)            • macos                                • darwin-arm64   • macOS 15.5 24F74
      darwin-arm64
    • Chrome (web)               • chrome                               • web-javascript • Google Chrome 139.0.7258.128

[✓] Network resources [1,233ms]
    • All expected network resources are available.

• No issues found!

```

</details>
",y,
173151,This is my attempt to handle https://github.com/flutter/flutter/issues/6537 for the CheckboxListTile UI control.,n,
173090,This is my attempt to handle https://github.com/flutter/flutter/issues/6537 for the MaterialApp UI control.,n,
172229,"
This is my attempt to handle #6537 for the BottomSheet UI control.",n,
173026,This is my attempt to handle https://github.com/flutter/flutter/issues/6537 for the EndDrawerButton UI control.,n,
172489,"###Help us understand the severity of this issue

- [ ] causing severe production issues e.g. malfunctions or data loss
- [ ] blocking next binary release
- [X] blocking a client feature launch within a quarter
- [ ] nice-to-have but does not block a launch within the next quarter

### Steps to reproduce

1. Using a screenreader such as Voiceover, focus on the first button
2. Click the first button using the screenreader
3. Observe that the focus jumps forward to the next button
4. Click the second button using the screenreader
5. Observe that the focus jumps backwards to the first button

### Expected results

When clicking a button using a screenreader, the focus should remain on that button.

### Actual results

The focus jumps forward or backwards if a button's state changes to include an icon.

### Code sample

<details open><summary>Code sample</summary>

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: Scaffold(body: Center(child: ButtonIconExample())),
    );
  }
}

class ButtonIconExample extends StatefulWidget {
  const ButtonIconExample({super.key});

  @override
  State<StatefulWidget> createState() => ButtonIconExampleState();
}

class ButtonIconExampleState extends State<ButtonIconExample> {
  bool toggled1 = false;
  bool toggled2 = false;

  @override
  Widget build(BuildContext context) {
    return Container(
      child: Card(
        color: Colors.blue,
        child: SizedBox(
          width: 500,
          height: 100,
          child: Row(
            children: [
              OutlinedButton.icon(
                label: Text('test button 1'),
                onPressed: () => setState(() => toggled1 = !toggled1),
                icon: toggled1 ? Icon(Icons.favorite) : null,
              ),
              OutlinedButton.icon(
                label: Text('test button 2'),
                onPressed: () => setState(() => toggled2 = !toggled2),
                icon: toggled2 ? Icon(Icons.favorite) : null,
              ),
            ],
          ),
        ),
      ),
    );
  }
}

```

</details>


### Screenshots or Video

<details open>
<summary>Screenshots / Video demonstration</summary>

https://github.com/user-attachments/assets/26d063a3-a1a5-4b59-a900-5c9cafe5dc64

</details>


### Logs

<details open><summary>Logs</summary>

```console
[Paste your logs here]
```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
[Paste your output here]
```

</details>
",y,
174572,"It would be great to be able to specify a fallback font. So if a character doesn't exist in the main font, the glyph from the fallback one is used. It would make the process of adding new languages to the app a bit easier.",n,
172902,This is my attempt to handle https://github.com/flutter/flutter/issues/6537 for the CloseButton UI control.,n,
174573,"I have a use case where I would like to offer users the ability to select a font from this package, but there are just so many that it's overwhelming.

In particular, I would like to be able to narrow the list down to only monospace fonts, but there's currently no clean way to do so (without e.g. manually collecting font names from https://fonts.google.com/?category=Monospace).

It would be nice if we could programmatically obtain the category (Serif, Sans Serif, Display, Handwriting, Monospace) of each font. For instance `asMap()` could have a counterpart `byCategory()` or similar.",n,
174509,"### Use case

Currently, SearchAnchor does not expose smartQuotesType or smartDashesType for the TextField it manages internally. This prevents developers from controlling smart quotes and smart dashes behavior when using SearchAnchor, even though they can do so directly on a standalone TextField.

### Proposal

Adding these properties would make SearchAnchor more consistent with TextField",n,
174577,`TextDecoration.lineThrough` showing the line at the bottom of the text. It used to be (using assets font) at the center. I switched back to the assets font and it's working perfectly.,n,
174511,"### Steps to reproduce

1. Run the code sample
2. Observe the icon button color

### Expected results

The icon is green according to `IconButton.color` property

<img width=""75"" height=""76"" alt=""Image"" src=""https://github.com/user-attachments/assets/e99fc491-b44e-4e03-b22d-80af3269f2f4"" />

### Actual results

The icon is purple according to the ambient `IconButtonTheme`, despite `IconButton.color` being set to green.

<img width=""76"" height=""79"" alt=""Image"" src=""https://github.com/user-attachments/assets/728ccee0-9bad-4172-96b0-00ec9b7140c0"" />

### Code sample

<details open><summary>Code sample</summary>

```dart
import 'package:flutter/material.dart';

void main() => runApp(const IconButtonDemo());

class IconButtonDemo extends StatelessWidget {
  const IconButtonDemo({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData(
        iconButtonTheme: const IconButtonThemeData(
          style: ButtonStyle(iconColor: WidgetStateColor.fromMap({WidgetState.any: Colors.purple})),
        ),
      ),
      home: Scaffold(
        body: Center(
          child: IconButton(
            onPressed: () {},
            icon: const Icon(Icons.build_circle, size: 64),
            color: Colors.green,
          ),
        ),
      ),
    );
  }
}


```

</details>


### Screenshots or Video




### Logs




### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
Flutter (Channel [user-branch], 3.36.0-1.0.pre-286, on Ubuntu 24.04.2 LTS 6.8.0-78-generic, locale fr_FR.UTF-8)
```

</details>
",y,
174555,"### Package

`google_fonts`

### Description

If you ran into this error, it means that an attempt was made to fetch a font TTF file from Google Fonts' servers, but failed. For example:

```
Exception has occurred.
_Exception (Exception: Failed to load font with url https://fonts.gstatic.com/s/a/85fcd167f63837ebb1c310a8e83bf1d5039fbbd5a13ac4812691d52817631161.ttf: Failed host lookup: 'fonts.gstatic.com')
```

### Solution

The most common reason is the device/emulator/simulator doesn't have internet access. 

- For macOS and Android, you must allow HTTP requests following [these instructions](https://docs.flutter.dev/data-and-backend/networking#platform-notes)
- If this occurred in a test, see https://github.com/material-foundation/flutter-packages/blob/main/packages/google_fonts/example/test for how to set up things properly
- Your device/emulator/simulator may not be connected to Wi-Fi or a mobile network
- Your Internet Service Provider (ISP) (e.g. in China) may be blocking the request
- (Highly unlikely) The URL may be invalid, or Google Fonts may be down. Navigate to https://fonts.gstatic.com/s/a/85fcd167f63837ebb1c310a8e83bf1d5039fbbd5a13ac4812691d52817631161.ttf to verify.

### Background 
The default behavior for this package is to fetch (and cache) fonts from the Internet at runtime. Including chosen fonts at build time is also supported, instructions for doing this are in the README.

### Still need help?
If you ran into this issue and have eliminated all possible causes listed above, please comment with all relevant information (Wi-Fi / mobile network, target device & OS, `flutter version -v`, etc.)",n,
156910,"### Document Link

https://flutter.dev/go/web-cleanup-service-worker

### What problem are you solving?

The current default service worker implementation is one of (several) approaches that can be used by Flutter web, however it's not a good fit for all use-cases.

This confuses users when it doesn't behave as they expect.

Having a default service worker implementation sends the message that it is *necessary* or *recommended* by Flutter web to function correctly, but that is not the case.

This design doc discusses how the current implementation of `flutter_service_worker.js` is going to be phased out (TL;DR: with a cleanup service worker for those currently using the default one), and how the flutter tools and flutter.js will eventually stop generating (or loading) a default service worker, allowing web app developers to do what's best for their specific apps.",n,
174532,"### Existing issue?

- [x] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

Please add 'Iansui' font.
https://fonts.google.com/specimen/Iansui

### Relevant log output

```shell

```",n,
174533,"### Package

google_fonts

### Description

Please add 'Google Sans Code' to the package.

https://x.com/GoogleDesign/status/1950966219592605730
",n,
174539,"### Package

google_fonts

### Existing issue?

- [x] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

[Great Vibes](https://fonts.google.com/specimen/Great+Vibes) doesn't render Cyrillic glyphs

If I [bundle the font manually](https://github.com/material-foundation/flutter-packages/tree/main/packages/google_fonts#bundling-fonts-when-releasing), Cyrillic glyphs start working correctly

Seems similar to https://github.com/material-foundation/flutter-packages/issues/207

Flutter **3.32.8**
Platform: **Web**
`google_fonts: ^6.2.1`

## Expected vs actual result:

Expected _(Cyrillic is supported on [fonts.google.com](https://fonts.google.com/specimen/Great+Vibes))_:

<img width=""517"" height=""135"" alt=""Image"" src=""https://github.com/user-attachments/assets/2f38a692-b2bf-4849-b36a-8da05cc53c02"" />

<img width=""1055"" height=""562"" alt=""Image"" src=""https://github.com/user-attachments/assets/8bb95c3c-68b4-4c27-837e-d9ccb7162eb0"" />

Actual _(Cyrillic glyphs are rendered with a generic font)_:
<img width=""657"" height=""176"" alt=""Image"" src=""https://github.com/user-attachments/assets/7f512259-d162-456d-8667-73e05aea110b"" />
```dart
Text(
  'Test принимая во внимание, что народы Объединенных Наций подтвердили',
  style: GoogleFonts.greatVibes(
    fontSize: 32,
    color: const Color(0xff896e4f),
    fontWeight: FontWeight.w100,
  ),
),
```

## Steps to reproduce:
1. Add a `Text` widget containing Cyrillic glyphs with `style: GoogleFonts.greatVibes`


### Relevant log output

```shell
[✓] Flutter (Channel stable, 3.32.8, on macOS 15.5 24F74 darwin-arm64, locale en-US) [968ms]
    • Flutter version 3.32.8 on channel stable at /Users/vanyasem/fvm/versions/3.32.8
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision edada7c56e (6 days ago), 2025-07-25 14:08:03 +0000
    • Engine revision ef0cd00091
    • Dart version 3.8.1
    • DevTools version 2.45.1

[✓] Android toolchain - develop for Android devices (Android SDK version 35.0.0) [2.2s]
    • Android SDK at /Users/vanyasem/Library/Android/sdk
    • Platform android-35, build-tools 35.0.0
    • Java binary at: /Users/vanyasem/Applications/Android Studio.app/Contents/jbr/Contents/Home/bin/java
      This is the JDK bundled with the latest Android Studio installation on this machine.
      To manually set the JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`.
    • Java version OpenJDK Runtime Environment (build 21.0.6+-13391695-b895.109)
    • All Android licenses accepted.

[✓] Xcode - develop for iOS and macOS (Xcode 16.4) [2.2s]
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Build 16F6
    • CocoaPods version 1.16.2

[✓] Chrome - develop for the web [12ms]
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2025.1) [11ms]
    • Android Studio at /Users/vanyasem/Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 21.0.6+-13391695-b895.109)

[✓] VS Code (version 1.102.2) [10ms]
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension version 3.114.0

[✓] Connected device (2 available) [6.4s]
    • macOS (desktop)                  • macos                     • darwin-arm64   • macOS 15.5 24F74 darwin-arm64
    • Chrome (web)                     • chrome                    • web-javascript • Google Chrome 138.0.7204.183

[✓] Network resources [359ms]
    • All expected network resources are available.

• No issues found!
```",y,
174540,"### Package

All packages

### Existing issue?

- [x] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

### Description

After upgrading Flutter from **3.27** to **3.29**, fonts loaded using the `google_fonts` package appear corrupted or do not render correctly **in release mode**. This issue does not occur in debug or profile mode.

---

### Steps to Reproduce

1. Upgrade Flutter from 3.27 to 3.29.
2. Use the `google_fonts` package to load any font (e.g., `GoogleFonts.roboto()`).
3. Run the app in **release mode**.
4. Observe that the fonts either:

   * Render incorrectly
   * Do not load at all
   * Appear distorted or corrupted

---

### Flutter Doctor
```
[✓] Flutter (Channel stable, 3.29.0, on macOS 15.4.1 24E263 darwin-arm64, locale en-IN) [1,081ms]
    • Flutter version 3.29.0 on channel stable at /Users/admin/Documents/Configuration/flutter-3-29
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 35c388afb5 (6 months ago), 2025-02-10 12:48:41 -0800
    • Engine revision f73bfc4522
    • Dart version 3.7.0
    • DevTools version 2.42.2

[✓] Android toolchain - develop for Android devices (Android SDK version 36.0.0) [1,773ms]
    • Android SDK at /Users/admin/Library/Android/sdk
    • Platform android-36, build-tools 36.0.0
    • Java binary at: /Applications/Android Studio Preview.app/Contents/jbr/Contents/Home/bin/java
      This is the JDK bundled with the latest Android Studio installation on this machine.
      To manually set the JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`.
    • Java version OpenJDK Runtime Environment (build 17.0.10+0-17.0.10b1087.17-11446219)
    • All Android licenses accepted.

[!] Xcode - develop for iOS and macOS [707ms]
    ✗ Xcode installation is incomplete; a full installation is necessary for iOS and macOS development.
      Download at: https://developer.apple.com/xcode/
      Or install Xcode via the App Store.
      Once installed, run:
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
        sudo xcodebuild -runFirstLaunch
    • CocoaPods version 1.16.2

[✗] Chrome - develop for the web (Cannot find Chrome executable at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome) [28ms]
    ! Cannot find Chrome. Try setting CHROME_EXECUTABLE to a Chrome executable.

[✓] Android Studio (version 2023.3.1) [28ms]
    • Android Studio at /Applications/Android Studio Preview.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 17.0.10+0-17.0.10b1087.17-11446219)

[✓] VS Code (version 1.102.2) [27ms]
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension can be installed from:
      🔨 https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter

[✓] Connected device (1 available) [101ms]
    • macOS (desktop) • macos • darwin-arm64 • macOS 15.4.1 24E263 darwin-arm64

[✓] Network resources [414ms]
    • All expected network resources are available.

! Doctor found issues in 2 categories.
```

![Image](https://github.com/user-attachments/assets/dc0facb5-1eb0-4744-9d77-d6ed584bb7a0)

### Relevant log output

```shell

```",y,
174541,"### Package

google_fonts

### Existing issue?

- [x] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected result:
All characters (Arabic and Latin) in a Text widget that uses NotoSansArabic (via google_fonts or a bundled TTF) are rendered in the same color, weight, and baseline on every supported Android version, including Android 16.

Switching the device/app locale must not change the consistency of the glyph rendering.

<img width=""422"" height=""116"" alt=""Image"" src=""https://github.com/user-attachments/assets/8604b909-cd7e-4102-a937-6a58cba23f0b"" />


## Actual result:
On Android 16 (API 35) only, Latin glyphs in a mixed string (اهلا و سهلا Hello) appear much lighter / grey than the Arabic glyphs—even though the entire Text is given color: Colors.black.

The mismatch persists after hot‑reload, full restart, and locale changes; it does not occur on Android 14 or iOS 17.

No runtime errors or warnings are printed in flutter run -v.

A comparison screenshot (dark = intended, light = wrong):

<img width=""426"" height=""115"" alt=""Image"" src=""https://github.com/user-attachments/assets/94f97485-5c39-463d-b735-f5e9878a7d61"" />

## Steps to reproduce:

1. flutter create noto_bug && cd noto_bug

2. Add google_fonts: to pubspec.yaml and run flutter pub get.

3. Replace lib/main.dart with:
```import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        body: Center(
          child: Text(
            'اهلا و سهلا  Hello',
            style: GoogleFonts.notoSansArabic(
              fontSize: 20,
              color: Colors.black,
            ),
            textDirection: TextDirection.rtl, // same if LTR
          ),
        ),
      ),
    );
  }
}```
4. Run on Android 16 (emulator or physical).

5. Observe the Latin glyphs appear lighter/grey compared with Arabic glyphs.

6. Repeat the same build on Android 14 or iOS 17 → both scripts render identically, confirming the regression is Android 16‑specific.


### Relevant log output

```shell
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel stable, 3.32.7, on macOS 15.5 24F74 darwin-arm64, locale en-US)
[✓] Android toolchain - develop for Android devices (Android SDK version 36.0.0)
[✓] Xcode - develop for iOS and macOS (Xcode 16.4)
[✓] Chrome - develop for the web
[✓] Android Studio (version 2025.1)
[✓] VS Code (version 1.102.0)
[✓] Connected device (5 available)
    ! Error: Failed to prepare the device for development. Please unlock and reconnect the device. (code 806)
[✓] Network resources
```",y,
173434,"### Use case

The default proxy setup for Flutter web doesn't allow developers to easily inject custom HTTP headers into their requests. This becomes a significant roadblock when a developer is building a Flutter web app that needs to communicate with an API that requires an authorization header (e.g., a JWT or OAuth token) to authenticate a user. Without the ability to add this header, all authenticated API calls fail with CORS errors during local development. While this is less of an issue in production where the app and API might be on the same domain or the server is configured to handle CORS, it hinders the development and testing process.

I've tried disabling web security in the browser by launching Chrome with the --disable-web-security flag to bypass CORS entirely. However, this is a major security risk and is not a viable solution for a production environment. It's also not a great option for a development team since it requires every developer to configure their browser in a specific way, which can lead to inconsistencies.





### Proposal

Use the headers method that injects headers from the web_dev_config.yaml file to get headers from the proxy rule as well. This can be injected when the proxy middleware makes a request.",n,
106642,"<!-- Thank you for using Flutter!

     If you are looking for support, please check out our documentation
     or consider asking a question on Stack Overflow:
      * https://flutter.dev/
      * https://api.flutter.dev/
      * https://stackoverflow.com/questions/tagged/flutter?sort=frequent

     If you have found a bug or if our documentation doesn't have an answer
     to what you're looking for, then fill out the template below. Please read
     our guide to filing a bug first: https://flutter.dev/docs/resources/bug-reports
-->

## Steps to Reproduce

<!-- Please include full steps to reproduce so that we can reproduce the problem. -->

1. Execute `flutter run` on the code sample (see ""Code sample"" section below) or on the code on https://github.com/ValentinVignal/flutter_app_stable/tree/update-dialog-theme
2. Click on the button ""Show dialog"" and update the theme (it works)
4. Close the dialog
5. Click on the button ""Show dialog with overridden theme"" and update the theme
6. Notice the dialog theme is not updated.

**Expected results:** <!-- what did you want to see? -->

The dialog's theme should updated as well as the rest of the app.

**Actual results:** <!-- what did you see? -->

The dialog's theme is not updated.

<details>
<summary>Code sample</summary>

<!--
      Please create a minimal reproducible sample that shows the problem
      and attach it below between the lines with the backticks.

      To create it you can use `flutter create bug` command and update the `main.dart` file.

      Alternatively, you can use https://dartpad.dev/
      which is capable of creating and running small Flutter apps.

      Without this we will unlikely be able to progress on the issue, and because of that
      we regretfully will have to close it.
-->

You can find this code at https://github.com/ValentinVignal/flutter_app_stable/tree/update-dialog-theme

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

final themeNotifier = ValueNotifier<ThemeMode>(ThemeMode.system);

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return AnimatedBuilder(
      animation: themeNotifier,
      builder: (context, child) {
        return MaterialApp(
          title: 'Flutter Demo',
          home: child,
          darkTheme: ThemeData.dark(),
          themeMode: themeNotifier.value,
        );
      },
      child: const MyHomePage(),
    );
  }
}

class MyHomePage extends StatelessWidget {
  const MyHomePage({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Center(
        child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            Theme(
              data: Theme.of(context).copyWith(
                primaryColor: Colors.red,
              ),
              child: Builder(
                builder: (context) {
                  return ElevatedButton(
                    onPressed: () {
                      showDialog(
                        context: context,
                        builder: (context) => const Dialog(),
                      );
                    },
                    child: const Text('Show dialog with overridden theme'),
                  );
                },
              ),
            ),
            const SizedBox(height: 16),
            ElevatedButton(
              onPressed: () {
                showDialog(
                  context: context,
                  builder: (context) => const Dialog(),
                );
              },
              child: const Text('Show dialog'),
            ),
          ],
        ),
      ),
    );
  }
}

class Dialog extends StatelessWidget {
  const Dialog({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return AlertDialog(
      content: AnimatedBuilder(
        animation: themeNotifier,
        builder: (context, _) {
          return ToggleButtons(
            children:
                ThemeMode.values.map((value) => Text(value.name)).toList(),
            isSelected: ThemeMode.values
                .map((value) => value == themeNotifier.value)
                .toList(),
            onPressed: (index) {
              themeNotifier.value = ThemeMode.values[index];
            },
          );
        },
      ),
    );
  }
}
```

</details>

<details>
  <summary>Logs</summary>

<!--
      Run your application with `flutter run --verbose` and attach all the
      log output below between the lines with the backticks. If there is an
      exception, please see if the error message includes enough information
      to explain how to solve the issue. If there is a crash, please include
      the entirety of the crash log including the backtrace.
-->

With `--verbose` I was hitting the limit of 65536 characters of Github's issues.
You can find the logs here 
https://github.com/ValentinVignal/flutter_app_stable/blob/cdf3ff7aca6d84dc9a563d065222cb9d972bee83/logs.txt

```
Multiple devices found:
macOS (desktop) • macos  • darwin-x64     • macOS 11.5.1 20G80 darwin-x64
Chrome (web)    • chrome • web-javascript • Google Chrome 102.0.5005.115
[1]: macOS (macos)
[2]: Chrome (chrome)
Please choose one (To quit, press ""q/Q""): 1
Launching lib/main.dart on macOS in debug mode...
Building macOS application...                                           
Syncing files to device macOS...                                    89ms

Flutter run key commands.
r Hot reload. 🔥🔥🔥
R Hot restart.
h List all available interactive commands.
d Detach (terminate ""flutter run"" but leave application running).
c Clear the screen
q Quit (terminate the application on the device).

💪 Running with sound null safety 💪

An Observatory debugger and profiler on macOS is available at: http://127.0.0.1:53117/Ou_hEEleBKQ=/
The Flutter DevTools debugger and profiler on macOS is available at:
http://127.0.0.1:9101?uri=http://127.0.0.1:53117/Ou_hEEleBKQ=/

```

<!--
     Run `flutter analyze` and attach any output of that command below.
     If there are any analysis errors, try resolving them before filing this issue.
-->

```
Analyzing flutter_app_stable...                                         
No issues found! (ran in 5.5s)
```

<!-- Finally, paste the output of running `flutter doctor -v` here. -->

```
[✓] Flutter (Channel stable, 3.0.3, on macOS 11.5.1 20G80 darwin-x64, locale en-GB)
    • Flutter version 3.0.3 at /Users/valentin/flutter/flutter
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 676cefaaff (4 days ago), 2022-06-22 11:34:49 -0700
    • Engine revision ffe7b86a1e
    • Dart version 2.17.5
    • DevTools version 2.12.2

[✓] Android toolchain - develop for Android devices (Android SDK version 30.0.2)
    • Android SDK at /usr/local/Caskroom/android-sdk/4333796
    • Platform android-31, build-tools 30.0.2
    • Java binary at: /Applications/Android Studio.app/Contents/jre/Contents/Home/bin/java
    • Java version OpenJDK Runtime Environment (build 11.0.11+0-b60-7590822)
    • All Android licenses accepted.

[✓] Xcode - develop for iOS and macOS (Xcode 13.2.1)
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • CocoaPods version 1.11.3

[✓] Chrome - develop for the web
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2021.1)
    • Android Studio at /Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 11.0.11+0-b60-7590822)

[✓] VS Code (version 1.68.1)
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension version 3.42.0

[✓] Connected device (2 available)
    • macOS (desktop) • macos  • darwin-x64     • macOS 11.5.1 20G80 darwin-x64
    • Chrome (web)    • chrome • web-javascript • Google Chrome 102.0.5005.115

[✓] HTTP Host Availability
    • All required HTTP hosts are available

• No issues found!
```

</details>


<!--
      Consider also attaching screenshots and/or videos to better
      illustrate the issue.

      You can upload them directly on GitHub.
      Beware that video file size is limited to 10MB.
-->


https://user-images.githubusercontent.com/32538273/175849691-e94f8039-41e9-4192-af88-de0eb74ffca2.mov



",y,
173435,"### Use case

To make it more inline with Firebase hosting, I suggest making the development proxy compatible with glob syntax. Users should be able to add rules and rewrites using glob syntax. 

### Proposal

I suggest create a new class in devfs_proxy that implements ProxyRule for glob syntax and uses the Glob.matches() method to match a path to a glob proxy rule.",n,
174534,"### Package

google_fonts

### Existing issue?

- [x] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

[Sour Gummy](https://fonts.google.com/specimen/Sour+Gummy) font is missing.

### Relevant log output

```shell

```",y,
174542,"### Package

google_fonts

### Existing issue?

- [x] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:
When using `GoogleFonts.instrumentSans().fontFamily` with `FontWeight.bold`, the font appears light during development/debug mode, even though bold is specified.

Expected:
	•	The font should appear bold when `FontWeight.bold` is used, even in debug mode.

Actual:
	•	The font renders with light weight during debug mode.
	•	However, in release mode, the font correctly appears bold.

This inconsistency makes it very hard to design and test the UI reliably during development.

## Steps to reproduce:

1. Use `GoogleFonts.instrumentSans().fontFamily` or any of existing font family in a Flutter widget.
2. Set the style to use `FontWeight.bold`.
3. Run the app in debug mode, the font appears light.
4. Build and run the app in release mode, the font appears correctly as bold.

### Relevant log output

```shell

```",y,
174535,"### Package

google_fonts

### Existing issue?

- [x] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

There are missing fonts, even thought they are in the github repo.

For example, the Open Sans condensed has only [three versions](https://github.com/material-foundation/flutter-packages/blob/main/packages/google_fonts/lib/src/google_fonts_parts/part_o.dart#L1375) exported: 

```dart
final fonts = <GoogleFontsVariant, GoogleFontsFile>{
      const GoogleFontsVariant(
        fontWeight: FontWeight.w300,
        fontStyle: FontStyle.normal,
      ): GoogleFontsFile(
        '534179e03aadc7717b088745a09c21f98cd3947bad7f1ae5642eb554b0e99adf',
        62392,
      ),
      const GoogleFontsVariant(
        fontWeight: FontWeight.w300,
        fontStyle: FontStyle.italic,
      ): GoogleFontsFile(
        '0a4c01cd5c43ec0ba40be8d2d99bba9b83697264185b95ea884b8dcb0eb13a66',
        66248,
      ),
      const GoogleFontsVariant(
        fontWeight: FontWeight.w700,
        fontStyle: FontStyle.normal,
      ): GoogleFontsFile(
        'c81d3d6556ebd5e15a18aff55e53cc40e0de66a2109eb60d54866c6ffefadd0e',
        99144,
      ),
    };
```

But there are many more in the [gitrepo](https://github.com/googlefonts/opensans/tree/main/fonts/ttf).

### Relevant log output

```shell

```",y,
174536,"### Package

google_fonts

### Existing issue?

- [x] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:
Trying to create a TextTheme using the Google Font Parkinsans as per the flutter instuctions https://fonts.google.com/selection/embed

`import 'google_fonts';`

```
ThemeData(
  textTheme: GoogleFonts.parkinsansTextTheme(),
),
```

## Steps to reproduce:
1. static TextTheme textTheme = GoogleFonts.parkinsansTextTheme();
2. The method 'parkinsansTextTheme' isn't defined for the type 'GoogleFonts'. 

Please could you include support to Parkinsans.
https://fonts.google.com/specimen/Parkinsans



### Relevant log output

```shell

```",y,
174543,"### Package

google_fonts

### Existing issue?

- [x] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:
The IntrinsicHeight should be calculated with the real font character width (and recalculated when the font is loaded for example)

The actual result is this, for some sizes the text overflows:
<img width=""511"" alt=""Image"" src=""https://github.com/user-attachments/assets/659eafe5-adf3-4731-9040-d01b524e6326"" />

## Steps to reproduce:
Copy and paste the following code in a 3.24.5 project
Edit: also present in 3.29.2
Edit: also present in 3.32.4

<details>
  <summary>main.dart</summary>

  ```dart
  import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(home: ThreeTilesScreen());
  }
}

class ThreeTilesScreen extends StatelessWidget {
  const ThreeTilesScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return const Scaffold(
      body: Center(
        child: IntrinsicHeight(
          child: Row(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              Expanded(
                child: _DomainShortcutCard(
                  title: 'Title 1',
                  subtitle: 'Some long subtitle that is very long and should wrap',
                ),
              ),
              SizedBox(width: 16),
              Expanded(
                child: _DomainShortcutCard(
                  title: 'Title 2',
                  subtitle: 'Some long subtitle that is very long and should wrap, but it is even longer than the first one',
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class _DomainShortcutCard extends StatelessWidget {
  const _DomainShortcutCard({
    required this.title,
    required this.subtitle,
  });

  final String title;
  final String subtitle;

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: BoxDecoration(
        border: Border.all(color: Colors.black),
      ),
      child: Column(
        children: [
          Text(title),
          const SizedBox(height: 12),
          Text(
            subtitle,
            style: TextStyle(fontFamily: GoogleFonts.albertSans().fontFamily),
          ),
        ],
      ),
    );
  }
}

  ```
</details>


flutter doctor:
<details>
  <summary>flutter doctor -v</summary>
```
[!] Flutter (Channel [user-branch], 3.24.5, on macOS 15.3.1 24D70 darwin-arm64, locale en-US)
    ! Flutter version 3.24.5 on channel [user-branch] at /Users/ortes/flutter
      Currently on an unknown channel. Run `flutter channel` to switch to an official channel.
      If that doesn't fix the issue, reinstall Flutter by following instructions at https://flutter.dev/setup.
    ! Upstream repository unknown source is not a standard remote.
      Set environment variable ""FLUTTER_GIT_URL"" to unknown source to dismiss this error.
    • Framework revision dec2ee5c1f (4 months ago), 2024-11-13 11:13:06 -0800
    • Engine revision a18df97ca5
    • Dart version 3.5.4
    • DevTools version 2.37.3
    • If those were intentional, you can disregard the above warnings; however it is recommended to use ""git"" directly to perform update checks and upgrades.

[!] Android toolchain - develop for Android devices (Android SDK version 35.0.1)
    • Android SDK at /Users/ortes/Library/Android/sdk
    ✗ cmdline-tools component is missing
      Run `path/to/sdkmanager --install ""cmdline-tools;latest""`
      See https://developer.android.com/studio/command-line for more details.
    ✗ Android license status unknown.
      Run `flutter doctor --android-licenses` to accept the SDK licenses.
      See https://flutter.dev/to/macos-android-setup for more details.

[!] Xcode - develop for iOS and macOS (Xcode 16.2)
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Build 16C5032a
    ✗ CocoaPods not installed.
        CocoaPods is a package manager for iOS or macOS platform code.
        Without CocoaPods, plugins will not work on iOS or macOS.
        For more info, see https://flutter.dev/to/platform-plugins
      For installation instructions, see https://guides.cocoapods.org/using/getting-started.html#installation

[✓] Chrome - develop for the web
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2024.2)
    • Android Studio at /Users/ortes/Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 21.0.5+-12932927-b750.29)

[✓] VS Code (version 1.97.2)
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension can be installed from:
      🔨 https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter

[✓] Connected device (3 available)
    • macOS (desktop)                 • macos                 • darwin-arm64   • macOS 15.3.1 24D70 darwin-arm64
    • Mac Designed for iPad (desktop) • mac-designed-for-ipad • darwin         • macOS 15.3.1 24D70 darwin-arm64
    • Chrome (web)                    • chrome                • web-javascript • Google Chrome 133.0.6943.142

[✓] Network resources
    • All expected network resources are available.

! Doctor found issues in 3 categories.
```
</details>

### Relevant log output

```shell
[!] Flutter (Channel [user-branch], 3.24.5, on macOS 15.3.1 24D70 darwin-arm64, locale en-US)
    ! Flutter version 3.24.5 on channel [user-branch] at /Users/ortes/flutter
      Currently on an unknown channel. Run `flutter channel` to switch to an official channel.
      If that doesn't fix the issue, reinstall Flutter by following instructions at https://flutter.dev/setup.
    ! Upstream repository unknown source is not a standard remote.
      Set environment variable ""FLUTTER_GIT_URL"" to unknown source to dismiss this error.
    • Framework revision dec2ee5c1f (4 months ago), 2024-11-13 11:13:06 -0800
    • Engine revision a18df97ca5
    • Dart version 3.5.4
    • DevTools version 2.37.3
    • If those were intentional, you can disregard the above warnings; however it is recommended to use ""git"" directly to perform update checks and upgrades.

[!] Android toolchain - develop for Android devices (Android SDK version 35.0.1)
    • Android SDK at /Users/ortes/Library/Android/sdk
    ✗ cmdline-tools component is missing
      Run `path/to/sdkmanager --install ""cmdline-tools;latest""`
      See https://developer.android.com/studio/command-line for more details.
    ✗ Android license status unknown.
      Run `flutter doctor --android-licenses` to accept the SDK licenses.
      See https://flutter.dev/to/macos-android-setup for more details.

[!] Xcode - develop for iOS and macOS (Xcode 16.2)
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Build 16C5032a
    ✗ CocoaPods not installed.
        CocoaPods is a package manager for iOS or macOS platform code.
        Without CocoaPods, plugins will not work on iOS or macOS.
        For more info, see https://flutter.dev/to/platform-plugins
      For installation instructions, see https://guides.cocoapods.org/using/getting-started.html#installation

[✓] Chrome - develop for the web
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2024.2)
    • Android Studio at /Users/ortes/Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 21.0.5+-12932927-b750.29)

[✓] VS Code (version 1.97.2)
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension can be installed from:
      🔨 https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter

[✓] Connected device (3 available)
    • macOS (desktop)                 • macos                 • darwin-arm64   • macOS 15.3.1 24D70 darwin-arm64
    • Mac Designed for iPad (desktop) • mac-designed-for-ipad • darwin         • macOS 15.3.1 24D70 darwin-arm64
    • Chrome (web)                    • chrome                • web-javascript • Google Chrome 133.0.6943.142

[✓] Network resources
    • All expected network resources are available.

! Doctor found issues in 3 categories.
```",y,
174544,"### Package

google_fonts

### Description



```dart

 final  List<TextStyle>  allgermanStyle  = GoogleFonts.allfont.where((element) => element.language == 'german').toList();
```",n,
174545,"### **Description:**

There is a systematic inconsistency in how fontFamily names are handled for multi-word font families in the google_fonts package. Specifically:

In the asMap function, font family names retain their spaces (e.g., 'ADLaM Display').
However, in the googleFontsTextStyle function, these spaces are removed (e.g., 'ADLaMDisplay').
This creates a mismatch between the asMap keys and the actual fontFamily values passed to googleFontsTextStyle.

### **Example:**
For the font family ADLaM Display:

In asMap:

`'ADLaM Display': PartA.aDLaMDisplay,`

In the aDLaMDisplay function:

`fontFamily: 'ADLaMDisplay',`

This mismatch causes issues when attempting to use fontFamily values programmatically (e.g., retrieving font families dynamically via asMap).

### **Additional Context:**

According to the [Google Fonts API](https://fonts.google.com/), font family names are returned with spaces (e.g., 'ADLaM Display').
Removing spaces from fontFamily values in googleFontsTextStyle creates unnecessary inconsistencies and may lead to unexpected behavior or errors.

### **Suggested Fix:**

Ensure that fontFamily values in both asMap and googleFontsTextStyle retain their spaces to match the naming convention used by Google Fonts (e.g., 'ADLaM Display').
",n,
173520,"Fixes #173514

## Description

Added support for manual high contrast theme mode control in MaterialApp. This allows developers to explicitly control the high contrast theme mode independently of the system settings, similar to how `themeMode` works for light/dark themes.

Changes include:
- Added `HighContrastThemeMode` enum with `system`, `enabled`, and `disabled` values
- Added `highContrastThemeMode` property to MaterialApp
- Updated theme resolution logic to respect manual high contrast settings
- Added comprehensive test coverage

## Test Plan

Added new test cases in `packages/flutter/test/material/app_test.dart` covering:
- Default behavior (system)
- Explicit enable/disable
- Interaction with platform settings
- State restoration
- Theme inheritance

All tests are passing.

## Breaking Change

No breaking changes. This is a new opt-in feature that maintains backward compatibility with existing apps.",n,
174546,"### Package

google_fonts

### Description

### **Description:**

Currently, the google_fonts package does not provide a direct mechanism to retrieve all available variants (e.g., font weights, styles) for a specific font family at runtime. While the package correctly prioritizes locally bundled font files over HTTP fetching, there is no way to programmatically access the available GoogleFontsVariant list for a given font family.

### **Feature Request**
I propose adding an official way to expose font variants for a font family dynamically, without requiring external APIs or manual mapping. This feature would benefit developers by providing:

1. A dynamic mechanism to query GoogleFontsVariant for any font family at runtime.
2. Better error handling for unsupported weights or styles by letting developers check available variants before applying them.
3. Improved visibility into locally bundled font assets for debugging and customization purposes.

### **Current Hack**
I have implemented a hack to achieve this functionality by modifying the google_fonts_base.dart file as follows:

1. Added a New fontsVariants Map in GoogleFonts.config: I extended the GoogleFonts.config object to include a map that dynamically tracks font family variants during runtime:

`Map<String, List<GoogleFontsVariant>> fontsVariants = {};
`

2. Modified googleFontsTextStyle: I updated the googleFontsTextStyle function to dynamically populate a fontsVariants map in the GoogleFonts.config object:

```
final variants = GoogleFonts.config.fontsVariants;
if (!variants.containsKey(fontFamily)) {
  variants[fontFamily] = fonts.keys.toList(growable: false);
}

```

3. Added a Function: I created a method to retrieve the variants for a font family:

```
static List<GoogleFontsVariant> getFontsVariants(String fontFamily) {
  final fonts = GoogleFonts.asMap();
  final font = fonts[fontFamily];

  if (font == null) {
    throw Exception(""No font family by name '$fontFamily' was found."");
  }

  final variants = GoogleFonts.config.fontsVariants;

  if (!variants.containsKey(fontFamily)) {
    font();
  }

  return List.of(variants[fontFamily]!);
}
```

However, since google_fonts.dart is a generated file, I cannot submit a direct pull request for this change. This is purely a hack solution, and the proper implementation should involve modifying the generator to handle this more effectively.

### **Suggested Solution**
A better approach would be to modify the google_fonts generator to maintain a centralized list of all GoogleFontsVariant for each font family. Currently, each font family function generates its own variants and passes them as parameters to the googleFontsTextStyle() function. By extracting and storing these variants in a separate list or map, the package can provide a much cleaner and official way to query them.

For example:

- Maintain a global list or map that holds all font families and their respective GoogleFontsVariant.
- This list can be used to expose the variants through a public API without requiring additional calls to the font family functions.

### **Benefits**

- Improved Developer Experience: Developers can programmatically query available font variants instead of relying on trial-and-error or manual mapping.
- Dynamic and Offline-First: No need for external APIs or hardcoded variant mappings, enabling a fully offline workflow.
- Better Error Handling: Prevents issues where unsupported weights or styles are silently ignored by Flutter.

### **Example Use Case**

```
final availableVariants = GoogleFonts.getFontsVariants('Roboto');
print(availableVariants); // Outputs all supported weights/styles for 'Roboto'
```
",n,
174522,"Rolls the dependencies to the once published today.

Covered by existing integration tests.",n,
106866,"Hello 

Change padding in PopupMenuItem from EdgeInsets to EdgeInsetsGeometry to accept EdgeInsetsDirectional.

Thanks",n,
174547,"### Package

google_fonts

### Description

Hi, google_fonts seems can not access in China due to google related. url blocked. Anyway to use this convenient lib in China?",n,
174548,"### Package

google_fonts

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:
When I have an arabic text with a font weight of 600-700, it looks something like this:
![Screenshot_20241226_094639](https://github.com/user-attachments/assets/8d6900cf-cce8-4770-bca9-ca7338ec8a44)
While it should look like this:
![Screenshot From 2024-12-26 09-56-02](https://github.com/user-attachments/assets/d9cd782a-fa9f-427f-a4d4-c25931e37262)


## Steps to reproduce:
1. Use ReadexPro text theme
2. Set the font weight to w700 
3. Add some text in arabic


### Relevant log output

_No response_",y,
174549,"### Package

All packages

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:


## Steps to reproduce:
1.
1.
1.


### Relevant log output

```shell
Execution failed for task ':path_provider_android:compileDebugJavaWithJavac'.
> Could not resolve all files for configuration ':path_provider_android:androidJdkImage'.
   > Failed to transform core-for-system-modules.jar to match attributes {artifactType=_internal_android_jdk_image, org.gradle.libraryelements=jar, org.gradle.usage=java-runtime}.
      > Execution failed for JdkImageTransform: /Users/tauseef/Library/Android/sdk/platforms/android-34/core-for-system-modules.jar.
         > Error while executing process /Applications/Android Studio.app/Contents/jbr/Contents/Home/bin/jlink with arguments {--module-path /Users/tauseef/.gradle/caches/transforms-3/d9e926982c2c139ff9125eb7b6be4144/transformed/output/temp/jmod --add-modules java.base --output /Users/tauseef/.gradle/caches/transforms-3/d9e926982c2c139ff9125eb7b6be4144/transformed/output/jdkImage --disable-plugin system-modules}
```
",n,
172630,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Linux build_android_host_app_with_module_aar""
}
-->

The post-submit test builder `Linux build_android_host_app_with_module_aar` had a flaky ratio 2.04% for the past (up to) 100 commits, which is above our 2.00% threshold.

One recent flaky example for a same commit: https://ci.chromium.org/ui/p/flutter/builders/prod/Linux%20build_android_host_app_with_module_aar/3940
Commit: https://github.com/flutter/flutter/commit/fb80c976c5d332507c5865a14afacc9308ebc584

Flaky builds:
https://ci.chromium.org/ui/p/flutter/builders/prod/Linux%20build_android_host_app_with_module_aar/3940
https://ci.chromium.org/ui/p/flutter/builders/prod/Linux%20build_android_host_app_with_module_aar/3913

Recent test runs:
https://flutter-dashboard.appspot.com/#/build?taskFilter=Linux%20build_android_host_app_with_module_aar

Please follow https://github.com/flutter/flutter/blob/master/docs/infra/Reducing-Test-Flakiness.md#fixing-flaky-tests to fix the flakiness and enable the test back after validating the fix (internal dashboard to validate: go/flutter_test_flakiness).
",n,
171858,"<!-- meta-tags: To be used by the automation script only, DO NOT MODIFY.
{
  ""name"": ""Windows tool_integration_tests_2_9""
}
-->

The post-submit test builder `Windows tool_integration_tests_2_9` had a flaky ratio 2.06% for the past (up to) 100 commits, which is above our 2.00% threshold.

One recent flaky example for a same commit: https://ci.chromium.org/ui/p/flutter/builders/prod/Windows%20tool_integration_tests_2_9/3989
Commit: https://github.com/flutter/flutter/commit/10cde0d157cb5caae882679567b58360781d4fc3

Flaky builds:
https://ci.chromium.org/ui/p/flutter/builders/prod/Windows%20tool_integration_tests_2_9/3989
https://ci.chromium.org/ui/p/flutter/builders/prod/Windows%20tool_integration_tests_2_9/3951

Recent test runs:
https://flutter-dashboard.appspot.com/#/build?taskFilter=Windows%20tool_integration_tests_2_9

Please follow https://github.com/flutter/flutter/blob/master/docs/infra/Reducing-Test-Flakiness.md#fixing-flaky-tests to fix the flakiness and enable the test back after validating the fix (internal dashboard to validate: go/flutter_test_flakiness).
",n,
173717,"### Help us understand the severity of this issue

- [ ] breakage; unable to contribute or trigger builds will no workarounds
- [ ] inconvenient workarounds exist, but significant effort required
- [ ] needed for a Flutter team-wide priority (already agreed upon)
- [ ] nice-to-have; none of the above

### What do you need help with

mac-11 is dead.

<img width=""1090"" height=""29"" alt=""Image"" src=""https://github.com/user-attachments/assets/e8e47382-7d9e-4e70-8c5f-61ce8bb8c603"" />",n,
174538,"### Package

google_fonts

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

https://fonts.google.com/specimen/SUSE is not available on `GoogleFonts`.


### Relevant log output

_No response_",y,
174550,"### Package

google_fonts

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:

Expected (as displayed on iOS):

![simulator_screenshot_58B93F85-4896-4778-9C7B-DD6891EB9195](https://github.com/user-attachments/assets/919faa72-43de-4e13-8968-d6f121c2a837)

Actual (as displayed on Android):

![unnamed](https://github.com/user-attachments/assets/c1e4a409-662f-459e-a809-c5293bdefc16)

## Steps to reproduce:
1. Use a `Text` widget with the aforementioned currency symbol: `Text('₱')` in any UI
1. Notice on Android that a black square with an X is rendered, but on iOS it works fine

It's worth noting that the [Google Fonts site](https://fonts.google.com/specimen/Poppins?preview.text=%E2%82%B1) also struggles to render the currency symbol, but if it was a font issue I would expect this to _not_ work on iOS as well (I may be wrong).


### Relevant log output

_No response_",y,
174551,"### Package

google_fonts

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:
![Simulator Screenshot - iPhone 15 Pro Max - 2024-04-26 at 12 03 40](https://github.com/flutter/flutter/assets/48594399/98df37d5-2140-460f-b238-eb4923d25356)
![Simulator Screenshot - iPhone 15 Pro Max - 2024-04-26 at 12 06 39](https://github.com/flutter/flutter/assets/48594399/cd95f57f-b9e9-4480-a94f-4f1fe431becd)

The code is super simple but it is not working in IOS/Android
Text(
         widget.ayaModel.arabicText,
          textAlign: TextAlign.right,
         style: GoogleFonts.amiriQuran(),
 )

### Relevant log output

_No response_",y,
174552,"### Package

google_fonts

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:
When I use the font ""Noto Color Emoji"", it doesn't render any emojis.
Other fonts like Roboto, Kanit and others works fine.
Just on the flutter package ""google_fonts"", it leaves a blank space instead of emojis.
On google chrome, it renders normally too.

## Steps to reproduce:
1. Install the latest google_fonts package with ""flutter pub add google_fonts"" (^6.2.1 atm)
2. Start a new flutter project, and add some Text as in the example bellow.
3. Compile it to windows (Windows 10 - x64)
4. All emojis using the ""Noto Color Emoji"" are not rendered while the rest is fine, including other google fonts.

Example:
```
            Text('Google Fonts 😊 Kanit',
                style: GoogleFonts.kanit(
                  textStyle: const TextStyle(fontSize: 20),
                )),
            Text('Google Fonts 😊🇫🇷 notoEmoji',
                style: GoogleFonts.notoEmoji(
                  textStyle: const TextStyle(fontSize: 20),
                )),
            Text('Google Fonts 😊🇫🇷 notoColorEmoji',
                style: GoogleFonts.notoColorEmoji(
                  textStyle: const TextStyle(fontSize: 20),
                )),
```
Output:
![image](https://github.com/flutter/flutter/assets/78024712/b1771464-939d-4c63-bc88-fc63d65dd966)


### Relevant log output

_No response_",y,
174553,"### Package

google_fonts

### Description

**Is your feature request related to a problem? Please describe.**
I would like to access all fonts in a simple list like ""GoogleFonts.fonts"".
Therefor the only function to achieve something like this is ""GoogleFonts.asMap()"" which returns all fonts as String/Builder Function pair.

**Describe the solution you'd like**
Wouldn't it be easier for the whole library to put all fonts in enumes?
like 
```dart
 typedef TextStyleBuilder = TextStyle Function({
  TextStyle? textStyle,
  Color? color,
  Color? backgroundColor,
  double? fontSize,
  FontWeight? fontWeight,
  FontStyle? fontStyle,
  double? letterSpacing,
  double? wordSpacing,
  TextBaseline? textBaseline,
  double? height,
  Locale? locale,
  Paint? foreground,
  Paint? background,
  List<ui.Shadow>? shadows,
  List<ui.FontFeature>? fontFeatures,
  TextDecoration? decoration,
  Color? decorationColor,
  TextDecorationStyle? decorationStyle,
  double? decorationThickness,
});


enum GoogleFont {
  ABeeZee,
  ADLaM_Display;
  // ...

  final String name;
  final TextStyleBuilder builder;
}
```

This way, one could easily retrieve a list of all fonts, could check if a given font is valid and pass the font typesafe around instead of holding a String.



**Describe alternatives you've considered**
Possibly another ""improvement"" (excuse me that i don't open another issue for that) would be to reduce the ""static TextTheme almaraiTextTheme([TextTheme? textTheme])"" TextThemeBuilder functions that are probably auto generated, with a simple callback like:

```dart
// Example almari function:
  static TextTheme almaraiTextTheme([TextTheme? textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return TextTheme(
      displayLarge: almarai(textStyle: textTheme.displayLarge),
      displayMedium: almarai(textStyle: textTheme.displayMedium),
      displaySmall: almarai(textStyle: textTheme.displaySmall),
      headlineLarge: almarai(textStyle: textTheme.headlineLarge),
      headlineMedium: almarai(textStyle: textTheme.headlineMedium),
      headlineSmall: almarai(textStyle: textTheme.headlineSmall),
      titleLarge: almarai(textStyle: textTheme.titleLarge),
      titleMedium: almarai(textStyle: textTheme.titleMedium),
      titleSmall: almarai(textStyle: textTheme.titleSmall),
      bodyLarge: almarai(textStyle: textTheme.bodyLarge),
      bodyMedium: almarai(textStyle: textTheme.bodyMedium),
      bodySmall: almarai(textStyle: textTheme.bodySmall),
      labelLarge: almarai(textStyle: textTheme.labelLarge),
      labelMedium: almarai(textStyle: textTheme.labelMedium),
      labelSmall: almarai(textStyle: textTheme.labelSmall),
    );
  }

// to:
 static TextTheme almaraiTextTheme([TextTheme? textTheme]) {
    textTheme ??= ThemeData.light().textTheme;
    return googleFontTextTheme(GoogleFont.almari);
 }

static TextTheme googleFontTextTheme(TextStyleBuilder builder, [TextTheme? textTheme]) {
  textTheme ??= ThemeData.light().textTheme;

  return TextTheme(
      displayLarge: builder(textStyle: textTheme.displayLarge),
      displayMedium: builder(textStyle: textTheme.displayMedium),
      displaySmall: builder(textStyle: textTheme.displaySmall),
      headlineLarge: builder(textStyle: textTheme.headlineLarge),
      headlineMedium: builder(textStyle: textTheme.headlineMedium),
      headlineSmall: builder(textStyle: textTheme.headlineSmall),
      titleLarge: builder(textStyle: textTheme.titleLarge),
      titleMedium: builder(textStyle: textTheme.titleMedium),
      titleSmall: builder(textStyle: textTheme.titleSmall),
      bodyLarge: builder(textStyle: textTheme.bodyLarge),
      bodyMedium: builder(textStyle: textTheme.bodyMedium),
      bodySmall: builder(textStyle: textTheme.bodySmall),
      labelLarge: builder(textStyle: textTheme.labelLarge),
      labelMedium: builder(textStyle: textTheme.labelMedium),
      labelSmall: builder(textStyle: textTheme.labelSmall),
    );
 }

```

**Additional context**
I am interested if this is an option and why it is currently made the way it is, which looks like a lot of boilerplate for every single GoogleFont for me.

",n,
174531,"### What package does this bug report belong to?

pigeon

### What target platforms are you seeing this bug on?

iOS

### Have you already upgraded your packages?

Yes

### Dependency versions

<details><summary>pubspec.lock</summary>

```lock
# Generated by pub
# See https://dart.dev/tools/pub/glossary#lockfile
packages:
  async:
    dependency: transitive
    description:
      name: async
      sha256: ""758e6d74e971c3e5aceb4110bfd6698efc7f501675bcfe0c775459a8140750eb""
      url: ""https://pub.dev""
    source: hosted
    version: ""2.13.0""
  boolean_selector:
    dependency: transitive
    description:
      name: boolean_selector
      sha256: ""8aab1771e1243a5063b8b0ff68042d67334e3feab9e95b9490f9a6ebf73b42ea""
      url: ""https://pub.dev""
    source: hosted
    version: ""2.1.2""
  characters:
    dependency: transitive
    description:
      name: characters
      sha256: f71061c654a3380576a52b451dd5532377954cf9dbd272a78fc8479606670803
      url: ""https://pub.dev""
    source: hosted
    version: ""1.4.0""
  clock:
    dependency: transitive
    description:
      name: clock
      sha256: fddb70d9b5277016c77a80201021d40a2247104d9f4aa7bab7157b7e3f05b84b
      url: ""https://pub.dev""
    source: hosted
    version: ""1.1.2""
  cloud_functions:
    dependency: ""direct main""
    description:
      name: cloud_functions
      sha256: ""5765f5e87cd7a04c33135b718581249265e2633a21dcbfda0a5db730398ba8cb""
      url: ""https://pub.dev""
    source: hosted
    version: ""6.0.0""
  cloud_functions_platform_interface:
    dependency: transitive
    description:
      name: cloud_functions_platform_interface
      sha256: f8953997dc4d9bd9c9b21718b761d8fa7e4e79d352002a79038c9b28770b02bb
      url: ""https://pub.dev""
    source: hosted
    version: ""5.8.3""
  cloud_functions_web:
    dependency: transitive
    description:
      name: cloud_functions_web
      sha256: ce52411f96b5e016a8fbab8a6cd38e1231a07b78a1775e97719bf545a8097fc8
      url: ""https://pub.dev""
    source: hosted
    version: ""5.0.0""
  collection:
    dependency: transitive
    description:
      name: collection
      sha256: ""2f5709ae4d3d59dd8f7cd309b4e023046b57d8a6c82130785d2b0e5868084e76""
      url: ""https://pub.dev""
    source: hosted
    version: ""1.19.1""
  fake_async:
    dependency: transitive
    description:
      name: fake_async
      sha256: ""5368f224a74523e8d2e7399ea1638b37aecfca824a3cc4dfdf77bf1fa905ac44""
      url: ""https://pub.dev""
    source: hosted
    version: ""1.3.3""
  firebase_core:
    dependency: transitive
    description:
      name: firebase_core
      sha256: ""6b343e6f7b72a4f32d7ce8df8c9a28d8f54b4ac20d7c6500f3e8b3969afca457""
      url: ""https://pub.dev""
    source: hosted
    version: ""4.0.0""
  firebase_core_platform_interface:
    dependency: transitive
    description:
      name: firebase_core_platform_interface
      sha256: ""5dbc900677dcbe5873d22ad7fbd64b047750124f1f9b7ebe2a33b9ddccc838eb""
      url: ""https://pub.dev""
    source: hosted
    version: ""6.0.0""
  firebase_core_web:
    dependency: transitive
    description:
      name: firebase_core_web
      sha256: ""5d28b14dd32282fb7ce2b22b897362453755b6b8541d491127dc72b755bb7b16""
      url: ""https://pub.dev""
    source: hosted
    version: ""3.0.0""
  flutter:
    dependency: ""direct main""
    description: flutter
    source: sdk
    version: ""0.0.0""
  flutter_test:
    dependency: transitive
    description: flutter
    source: sdk
    version: ""0.0.0""
  flutter_web_plugins:
    dependency: transitive
    description: flutter
    source: sdk
    version: ""0.0.0""
  leak_tracker:
    dependency: transitive
    description:
      name: leak_tracker
      sha256: ""6bb818ecbdffe216e81182c2f0714a2e62b593f4a4f13098713ff1685dfb6ab0""
      url: ""https://pub.dev""
    source: hosted
    version: ""10.0.9""
  leak_tracker_flutter_testing:
    dependency: transitive
    description:
      name: leak_tracker_flutter_testing
      sha256: f8b613e7e6a13ec79cfdc0e97638fddb3ab848452eff057653abd3edba760573
      url: ""https://pub.dev""
    source: hosted
    version: ""3.0.9""
  leak_tracker_testing:
    dependency: transitive
    description:
      name: leak_tracker_testing
      sha256: ""6ba465d5d76e67ddf503e1161d1f4a6bc42306f9d66ca1e8f079a47290fb06d3""
      url: ""https://pub.dev""
    source: hosted
    version: ""3.0.1""
  matcher:
    dependency: transitive
    description:
      name: matcher
      sha256: dc58c723c3c24bf8d3e2d3ad3f2f9d7bd9cf43ec6feaa64181775e60190153f2
      url: ""https://pub.dev""
    source: hosted
    version: ""0.12.17""
  material_color_utilities:
    dependency: transitive
    description:
      name: material_color_utilities
      sha256: f7142bb1154231d7ea5f96bc7bde4bda2a0945d2806bb11670e30b850d56bdec
      url: ""https://pub.dev""
    source: hosted
    version: ""0.11.1""
  meta:
    dependency: transitive
    description:
      name: meta
      sha256: e3641ec5d63ebf0d9b41bd43201a66e3fc79a65db5f61fc181f04cd27aab950c
      url: ""https://pub.dev""
    source: hosted
    version: ""1.16.0""
  path:
    dependency: transitive
    description:
      name: path
      sha256: ""75cca69d1490965be98c73ceaea117e8a04dd21217b37b292c9ddbec0d955bc5""
      url: ""https://pub.dev""
    source: hosted
    version: ""1.9.1""
  plugin_platform_interface:
    dependency: transitive
    description:
      name: plugin_platform_interface
      sha256: ""4820fbfdb9478b1ebae27888254d445073732dae3d6ea81f0b7e06d5dedc3f02""
      url: ""https://pub.dev""
    source: hosted
    version: ""2.1.8""
  sky_engine:
    dependency: transitive
    description: flutter
    source: sdk
    version: ""0.0.0""
  source_span:
    dependency: transitive
    description:
      name: source_span
      sha256: ""254ee5351d6cb365c859e20ee823c3bb479bf4a293c22d17a9f1bf144ce86f7c""
      url: ""https://pub.dev""
    source: hosted
    version: ""1.10.1""
  stack_trace:
    dependency: transitive
    description:
      name: stack_trace
      sha256: ""8b27215b45d22309b5cddda1aa2b19bdfec9df0e765f2de506401c071d38d1b1""
      url: ""https://pub.dev""
    source: hosted
    version: ""1.12.1""
  stream_channel:
    dependency: transitive
    description:
      name: stream_channel
      sha256: ""969e04c80b8bcdf826f8f16579c7b14d780458bd97f56d107d3950fdbeef059d""
      url: ""https://pub.dev""
    source: hosted
    version: ""2.1.4""
  string_scanner:
    dependency: transitive
    description:
      name: string_scanner
      sha256: ""921cd31725b72fe181906c6a94d987c78e3b98c2e205b397ea399d4054872b43""
      url: ""https://pub.dev""
    source: hosted
    version: ""1.4.1""
  term_glyph:
    dependency: transitive
    description:
      name: term_glyph
      sha256: ""7f554798625ea768a7518313e58f83891c7f5024f88e46e7182a4558850a4b8e""
      url: ""https://pub.dev""
    source: hosted
    version: ""1.2.2""
  test_api:
    dependency: transitive
    description:
      name: test_api
      sha256: fb31f383e2ee25fbbfe06b40fe21e1e458d14080e3c67e7ba0acfde4df4e0bbd
      url: ""https://pub.dev""
    source: hosted
    version: ""0.7.4""
  vector_math:
    dependency: transitive
    description:
      name: vector_math
      sha256: ""80b3257d1492ce4d091729e3a67a60407d227c27241d6927be0130c98e741803""
      url: ""https://pub.dev""
    source: hosted
    version: ""2.1.4""
  vm_service:
    dependency: transitive
    description:
      name: vm_service
      sha256: ddfa8d30d89985b96407efce8acbdd124701f96741f2d981ca860662f1c0dc02
      url: ""https://pub.dev""
    source: hosted
    version: ""15.0.0""
  web:
    dependency: transitive
    description:
      name: web
      sha256: ""868d88a33d8a87b18ffc05f9f030ba328ffefba92d6c127917a2ba740f9cfe4a""
      url: ""https://pub.dev""
    source: hosted
    version: ""1.1.1""
sdks:
  dart: "">=3.8.1 <4.0.0""
  flutter: "">=3.22.0""
```

</details>


### Steps to reproduce

1. Use a third-party library that uses Pigeon auto-generated message codecs, such as [cloud_functions](https://github.com/firebase/flutterfire/blob/main/packages/cloud_functions/cloud_functions_platform_interface/lib/src/pigeon/messages.pigeon.dart#L38) (or generate own Pigeon code)
2. Send a small Dart `int` (e.g. 1) via Pigeon to iOS native code
3. Receive an Int64 value

I have created a minimal Flutter app that reproduces the downstream issue with `cloud_functions`:
https://github.com/ernesto-elsaesser/cloud-functions-int-bug

However, this issue is about the auto-generated `_PigeonCodec` subclass, i.e. not specific to FlutterFire packages.

### Expected results

I would expect to receive an Int32 on iOS side, if the value passed on Dart side is within Int32 range, as implemented in Flutter's `StandardMessageCodec`: https://github.com/flutter/flutter/blob/main/packages/flutter/lib/src/services/message_codecs.dart#L399

I am aware that the Pigeon behavior was introduced to fix an Android bug: https://github.com/flutter/packages/pull/7725

I also understand that Dart integers might actually be ""native"" Int64s: https://dart.dev/resources/language/number-representation#dart-number-representation

However, this [overridden codec](https://github.com/flutter/packages/blob/main/packages/pigeon/lib/src/dart/dart_generator.dart#L460) introduces new issues downstream, if Int64 are handled different than Int32s.
See https://github.com/firebase/flutterfire/issues/17587

Currently, the Pigeon Dart templates don't seem to provide any way to pass small integers as Int32 from Dart to iOS.

### Actual results

Receive an Int64 in iOS native code.

### Code sample

<details open><summary>Code sample</summary>

See `parameters` argument in [cloud_functions](https://github.com/firebase/flutterfire/blob/main/packages/cloud_functions/cloud_functions_platform_interface/lib/src/method_channel/method_channel_https_callable.dart#L41)

</details>


### Screenshots or Videos

_No response_

### Logs

_No response_

### Flutter Doctor output

<details open><summary>Doctor output</summary>

This issue is not specific to my environment, but for completeness:

```console
[✓] Flutter (Channel stable, 3.32.5, on macOS 14.6.1 23G93 darwin-arm64, locale en-US) [361ms]
    • Flutter version 3.32.5 on channel stable at /Users/ernesto/Documents/flutter/flutter
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision fcf2c11572 (9 weeks ago), 2025-06-24 11:44:07 -0700
    • Engine revision dd93de6fb1
    • Dart version 3.8.1
    • DevTools version 2.45.1

[!] Android toolchain - develop for Android devices (Android SDK version 35.0.0) [1,092ms]
    • Android SDK at /Users/ernesto/Library/Android/sdk
    • Platform android-35, build-tools 35.0.0
    • Java binary at: /Applications/Android Studio.app/Contents/jbr/Contents/Home/bin/java
      This is the JDK bundled with the latest Android Studio installation on this machine.
      To manually set the JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`.
    • Java version OpenJDK Runtime Environment (build 17.0.11+0-17.0.11b1207.24-11852314)
    ! Some Android licenses not accepted. To resolve this, run: flutter doctor --android-licenses

[✓] Xcode - develop for iOS and macOS (Xcode 16.0) [834ms]
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Build 16A242d
    • CocoaPods version 1.16.2

[✗] Chrome - develop for the web (Cannot find Chrome executable at /Applications/Google
    Chrome.app/Contents/MacOS/Google Chrome) [8ms]
    ! Cannot find Chrome. Try setting CHROME_EXECUTABLE to a Chrome executable.

[✓] Android Studio (version 2024.1) [8ms]
    • Android Studio at /Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 17.0.11+0-17.0.11b1207.24-11852314)

[✓] VS Code (version 1.103.1) [7ms]
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension version 3.116.0

[✓] Connected device (1 available) [5.9s]
    • macOS (desktop) • macos • darwin-arm64 • macOS 14.6.1 23G93 darwin-arm64
    ! Error: Browsing on the local area network for XXX. Ensure the device is unlocked and attached
      with a cable or associated with the same local area network as this Mac.
      The device must be opted into Developer Mode to connect wirelessly. (code -27)

[✓] Network resources [721ms]
    • All expected network resources are available.

! Doctor found issues in 2 categories.
```

</details>
",n,
172289,"### Help us understand the severity of this issue

- [x] causing severe production issues e.g. malfunctions or data loss
- [ ] blocking next binary release
- [ ] blocking a client feature launch within a quarter
- [ ] nice-to-have but does not block a launch within the next quarter

### Steps to reproduce

None, crashes observed in production at a significant rate.

### Expected results

Does not crash

### Actual results

Crashes:

```
_TypeError
at InheritedModel._findModels(inherited_model.dart:160)
at InheritedModel.inheritFrom(inherited_model.dart:200)
at MediaQuery._maybeOf(media_query.dart:1282)
at MediaQuery.maybeDevicePixelRatioOf(media_query.dart:1394)
at createLocalImageConfiguration(image.dart:68)
at DecoratedBox.createRenderObject(container.dart:87)
at RenderObjectElement.mount(framework.dart:6686)
at SingleChildRenderObjectElement.mount(framework.dart:7008)
at Element.inflateWidget(framework.dart:4540)
at ComponentElement.performRebuild(framework.dart:5739)
at StatefulElement.performRebuild(framework.dart:5875)
at BuildScope._tryRebuild(framework.dart:2695)
at BuildScope._flushDirtyElements(framework.dart:2753)
at BuildOwner.buildScope(framework.dart:3057)
at _LayoutBuilderElement._rebuildWithConstraints(layout_builder.dart:272)
at RenderAbstractLayoutBuilderMixin.layoutCallback(layout_builder.dart:335)
at RenderObjectWithLayoutCallbackMixin.runLayoutCallback.<anonymous closure>(object.dart:4160)
at RenderObject.invokeLayoutCallback.<anonymous closure>(object.dart:2885)
at PipelineOwner._enableMutationsToDirtySubtrees(object.dart:1209)
at RenderObject.invokeLayoutCallback(object.dart:2884)
at RenderObjectWithLayoutCallbackMixin.runLayoutCallback(object.dart:4160)
at _RenderLayoutBuilder.performLayout(layout_builder.dart:449)
at RenderObject.layout(object.dart:2766)
at RenderProxyBoxMixin.performLayout(proxy_box.dart:115)
at RenderObject.layout(object.dart:2766)
at RenderProxyBoxMixin.performLayout(proxy_box.dart:115)
at RenderObject.layout(object.dart:2766)
at RenderProxyBoxMixin.performLayout(proxy_box.dart:115)
at RenderObject.layout(object.dart:2766)
at ChildLayoutHelper.layoutChild(layout_helper.dart:62)
at ChildLayoutHelper.layoutChild(layout_helper.dart:61)
at RenderStack._computeSize(stack.dart:646)
at RenderStack.performLayout(stack.dart:673)
at RenderObject.layout(object.dart:2766)
at RenderProxyBoxMixin.performLayout(proxy_box.dart:115)
at RenderObject.layout(object.dart:2766)
at MultiChildLayoutDelegate.layoutChild(custom_layout.dart:180)
at _ScaffoldLayout.performLayout(scaffold.dart:1119)
at MultiChildLayoutDelegate._callPerformLayout(custom_layout.dart:249)
at RenderCustomMultiChildLayoutBox.performLayout(custom_layout.dart:419)
at RenderObject.layout(object.dart:2766)
at RenderProxyBoxMixin.performLayout(proxy_box.dart:115)
at RenderObject.layout(object.dart:2766)
at RenderProxyBoxMixin.performLayout(proxy_box.dart:115)
at _RenderCustomClip.performLayout(proxy_box.dart:1483)
at RenderObject.layout(object.dart:2766)
at ChildLayoutHelper.layoutChild(layout_helper.dart:62)
at ChildLayoutHelper.layoutChild(layout_helper.dart:61)
at RenderStack._computeSize(stack.dart:646)
at RenderStack.performLayout(stack.dart:673)
at RenderObject._layoutWithoutResize(object.dart:2614)
at PipelineOwner.flushLayout(object.dart:1160)
at PipelineOwner.flushLayout(object.dart:1173)
at RendererBinding.drawFrame(binding.dart:629)
at WidgetsBinding.drawFrame(binding.dart:1261)
at RendererBinding._handlePersistentFrameCallback(binding.dart:495)
at RendererBinding._handlePersistentFrameCallback(binding.dart:494)
at SchedulerBinding._invokeFrameCallback(binding.dart:1438)
at SchedulerBinding.handleDrawFrame(binding.dart:1351)
at SchedulerBinding._handleDrawFrame(binding.dart:1204)
at SchedulerBinding._handleDrawFrame(binding.dart:1186)
at _rootRun(zone.dart:1525)
at _rootRun(zone.dart:1516)
at _CustomZone.run(zone.dart:1422)
at _CustomZone.runGuarded(zone.dart:1321)
at _invoke(hooks.dart:333)
at PlatformDispatcher._drawFrame(platform_dispatcher.dart:444)
at _drawFrame(hooks.dart:303)
at _drawFrame(hooks.dart:301)
```

I believe the root cause is this line in `InheritedModel`: https://github.com/flutter/flutter/blob/9c626d9f9afa6da96433e3bfc4895492f87e0009/packages/flutter/lib/src/widgets/inherited_model.dart#L160 The code assumes that `model.widget` is of type `T`, and for some reason that is failing. The issue could also be the call to `model.widget`, which under the hood has a null check on the actual field: https://github.com/flutter/flutter/blob/9c626d9f9afa6da96433e3bfc4895492f87e0009/packages/flutter/lib/src/widgets/framework.dart#L3598.

### Code sample

Code sample: None

### Screenshots or Video

Screenshots / Video demonstration: none

### Logs

Logs: none

### Flutter Doctor output

Doctor output: N/A, google3 internal client",y,
174523,"
https://skia.googlesource.com/skia.git/+log/8cf2faada2b5..7e6da45059c5

2025-08-27 thomsmit@google.com Returns defined result for SkSafeMath::mulInt
2025-08-27 tikuta@google.com recipes: Remove unnecessary annotations
2025-08-27 fmalita@google.com [skottie] Strict line break option
2025-08-27 michaelludwig@google.com [skif] Remove SK_DISABLE_BLUR_OVERSCALING staging code
2025-08-27 robertphillips@google.com [graphite] Make RuntimeEffectDictionary ref counted

If this roll has caused a breakage, revert this CL and stop the roller
using the controls here:
https://autoroll.skia.org/r/skia-flutter-autoroll
Please CC jimgraham@google.com,kjlubick@google.com,nicolettep@google.com on the revert to ensure that a human
is aware of the problem.

To file a bug in Skia: https://bugs.chromium.org/p/skia/issues/entry
To file a bug in Flutter: https://github.com/flutter/flutter/issues/new/choose

To report a problem with the AutoRoller itself, please file a bug:
https://issues.skia.org/issues/new?component=1389291&template=1850622

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+doc/main/autoroll/README.md
",n,
168984,"From a discussion elsewhere:

> The subbuild module attempts to add those links to step's presentation[^1], and the presentation object used here is a nested step:
> https://flutter.googlesource.com/recipes/+/refs/heads/main/recipes/engine_v2/engine_v2.py#111
> 
> I don't know if you can add links to a nested step, but seems like it doesn't get displayed (that could be a bug in Luci). You could pass in the presentation of an empty step and attach the links to that step instead as a workaround. Or change your subbuild module to add the links to the schedule step. If the schedule step ends up being the only step there, then maybe the nesting isn't needed at all? You could even change the step_name of schedule to launch builds and add the links there directly. You may even be able to remove the id based links.
> 
> [1]: https://flutter.googlesource.com/recipes/+/refs/heads/main/recipe_modules/subbuild/api.py#131
> 
> P.S.: what's up with the weird get buildbucket id steps in the screenshot? Those seem to not be doing anything.
>
> [^1]: https://flutter.googlesource.com/recipes/+/refs/heads/main/recipe_modules/subbuild/api.py#131",n,
174554,"### Package

google_fonts

### Existing issue?

- [X] I checked the [existing issues](https://github.com/material-foundation/flutter-packages/issues)

### What happened?

## Expected vs actual result:

Expected: The non-breaking hypen should be displayed as a hyphen
Actual: The non-brekaing hyphen is displayed as a small underscore (See attached screenshot).

## Steps to reproduce:

Here is a minimal Flutter app to reproduce this problem:

Note: I could not reproduce it with https://dartpad.dev !? But the error should be reproducible on an Android device.

```
import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Non-Breaking Hyphen Demo',
      debugShowCheckedModeBanner: false,
      home: MyDemoPage(),
    );
  }
}

class MyDemoPage extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Non-Breaking Hyphen Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.center,
          children: [
            Text('Default-Font:', style: TextStyle(fontWeight: FontWeight.bold)),
            SizedBox(height: 5),
            Text('With normal hyphen: E-Mail'),
            SizedBox(height: 5),
            Text('With non-breaking hyphen: E\u{2011}Mail'),
            SizedBox(height: 25),
            Text('Poppins:', style: TextStyle(fontWeight: FontWeight.bold)),
            SizedBox(height: 5),
            Text('With normal hyphen: E-Mail', style: GoogleFonts.poppins()),
            SizedBox(height: 5),
            Text('With non-breaking hyphen: E\u{2011}Mail', style: GoogleFonts.poppins()),
          ],
        ),
      ),
    );
  }
}
```
![image](https://github.com/flutter/flutter/assets/86703/28b9686b-18be-46ac-8d2e-54ea93213277)


### Relevant log output

_No response_",y,
170737,"### Steps to reproduce

1. Start a Video via Network URL
2. Let the Video finish
3. The loading spinner will appear, meaning the `isBuffering` variable got true
4. After a long wait time, the `isBuffering` value changes to false

### Expected results

If a video finishes, it should not be buffered anymore, so `isBuffering` should stay `false`.

### Actual results

`isBuffering` changes to `true` after the video finishes and stays `true` for a long time (about a minute).
I think this might be related to a previous issue #165149.

### Code sample

<details open><summary>Code sample (modified from #165149)</summary>

```dart
import 'package:flutter/material.dart';
import 'package:video_player/video_player.dart';

void main() => runApp(const VideoApp());

/// Stateful widget to fetch and then display video content.
class VideoApp extends StatefulWidget {
  const VideoApp({super.key});

  @override
  State<VideoApp> createState() => _VideoAppState();
}

class _VideoAppState extends State<VideoApp> {
  late VideoPlayerController _controller;

  bool buffering = false;

  @override
  void initState() {
    super.initState();
    _controller =
        VideoPlayerController.networkUrl(
            Uri.parse(
              ""https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4"",
            ),
          )
          ..initialize().then((_) {
            // Ensure the first frame is shown after the video is initialized, even before the play button has been pressed.
            setState(() {});
          });

    _controller.addListener(printBuffer);
  }

  void printBuffer() {
    print('----- BUFFERING: ${_controller.value.isBuffering}');

    setState(() {
      buffering = _controller.value.isBuffering;
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Video Demo',
      home: Scaffold(
        body: Builder(
          builder: (context) {
            return Center(
              child: _controller.value.isInitialized
                  ? Stack(
                      alignment: Alignment.center,
                      children: <Widget>[
                        AspectRatio(
                          aspectRatio: _controller.value.aspectRatio,
                          child: VideoPlayer(_controller),
                        ),
                        if (buffering)
                          Center(child: CircularProgressIndicator()),
                      ],
                    )
                  : const CircularProgressIndicator(),
            );
          },
        ),
        floatingActionButton: Column(
          mainAxisSize: MainAxisSize.min,
          spacing: 16,
          children: <Widget>[
            FloatingActionButton(
              onPressed: () async {
                final Duration end = _controller.value.duration;

                setState(() {
                  _controller.seekTo(end - const Duration(seconds: 5));
                });
              },
              child: const Icon(Icons.skip_next),
            ),
            FloatingActionButton(
              onPressed: () {
                setState(() {
                  _controller.value.isPlaying
                      ? _controller.pause()
                      : _controller.play();
                });
              },
              child: Icon(
                _controller.value.isPlaying ? Icons.pause : Icons.play_arrow,
              ),
            ),
          ],
        ),
      ),
    );
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }
}
```

</details>


### Screenshots or Video

_No response_

### Logs

_No response_

### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
[!] Flutter (Channel [user-branch], 3.32.4, on macOS 15.5 24F74 darwin-arm64, locale de-DE) [720ms]
    ! Flutter version 3.32.4 on channel [user-branch] at /Users/***/sdk/flutter
      Currently on an unknown channel. Run `flutter channel` to switch to an official channel.
      If that doesn't fix the issue, reinstall Flutter by following instructions at https://flutter.dev/setup.
    ! Upstream repository unknown source is not a standard remote.
      Set environment variable ""FLUTTER_GIT_URL"" to unknown source to dismiss this error.
    • Framework revision 6fba2447e9 (4 days ago), 2025-06-12 19:03:56 -0700
    • Engine revision 8cd19e509d
    • Dart version 3.8.1
    • DevTools version 2.45.1
    • If those were intentional, you can disregard the above warnings; however it is recommended to use ""git"" directly to perform update checks and upgrades.

[✓] Android toolchain - develop for Android devices (Android SDK version 34.0.0) [1.505ms]
    • Android SDK at /Users/***/Library/Android/sdk
    • Platform android-35, build-tools 34.0.0
    • Java binary at: /Applications/Android Studio.app/Contents/jbr/Contents/Home/bin/java
      This is the JDK bundled with the latest Android Studio installation on this machine.
      To manually set the JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`.
    • Java version OpenJDK Runtime Environment (build 17.0.11+0-17.0.11b1207.24-11852314)
    • All Android licenses accepted.

[✓] Xcode - develop for iOS and macOS (Xcode 16.4) [997ms]
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Build 16F6
    • CocoaPods version 1.16.2

[✓] Chrome - develop for the web [12ms]
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2024.1) [12ms]
    • Android Studio at /Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 17.0.11+0-17.0.11b1207.24-11852314)

[✓] VS Code (version 1.101.0) [10ms]
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension version 3.112.0

[✓] Connected device (4 available) [6,1s]
    • Pixel 7 Pro (mobile)                • 3B061FDH3S11PS            • android-arm64  • Android 16 (API 36)
    • iPhone von *** (wireless) (mobile) • 00008030-00111CEC1E9B802E • ios            • iOS 18.5 22F76
    • macOS (desktop)                     • macos                     • darwin-arm64   • macOS 15.5 24F74 darwin-arm64
    • Chrome (web)                        • chrome                    • web-javascript • Google Chrome 137.0.7151.104
    ! Error: Browsing on the local area network for iPad von ***. Ensure the device is unlocked and attached with a cable or associated with the same local area network as this Mac.
      The device must be opted into Developer Mode to connect wirelessly. (code -27)

[✓] Network resources [260ms]
    • All expected network resources are available.

! Doctor found issues in 1 category.
```

</details>
",y,
95142,"It assumes Google Chrome is installed on MacOS when issuing `v Open Flutter DevTools` from CLI debug interface.  Installing Google Chrome resolves the crash.

## Command
```
flutter run -d stm32mp1-disco
```

## Steps to Reproduce
1. Setup flutter config on MacOSX to reflect:
```
Settings:
enable-custom-devices: true
enable-linux-desktop: false
enable-android: false
enable-ios: false
enable-macos-desktop: true
enable-web: false
```
2. acquire stm32mp157f-disco device
3. Flash SD card using image from -> https://github.com/meta-flutter/meta-flutter/actions/workflows/dunfell-stm32mp15.yml
4. configure custom-device  -> https://github.com/meta-flutter/meta-flutter/wiki/STM32MP1-Disco-Notes#debugging-with-custom-device
5. `flutter run -d stm32mp1-disco`
6. type `v` to Open Flutter DevTools`

## Logs
ProcessException: No such file or directory Command: /Applications/Google Chrome.app/Contents/MacOS/Google Chrome, OS error code: 2
```
#0      _ProcessImpl._start (dart:io-patch/process_patch.dart:401:33)
#1      Process.start (dart:io-patch/process_patch.dart:38:20)
#2      Chrome._startProcess (package:browser_launcher/src/chrome.dart:145:26)
#3      Chrome.start (package:browser_launcher/src/chrome.dart:137:18)
#4      FlutterResidentDevtoolsHandler._launchDevToolsForDevices (package:flutter_tools/src/resident_devtools_handler.dart:134:24)
#5      FlutterResidentDevtoolsHandler.launchDevToolsInBrowser (package:flutter_tools/src/resident_devtools_handler.dart:122:7)
#6      TerminalHandler._commonTerminalInputHandler (package:flutter_tools/src/resident_runner.dart:1662:55)
#7      TerminalHandler.processTerminalInput (package:flutter_tools/src/resident_runner.dart:1680:13)
#8      _rootRunUnary (dart:async/zone.dart:1434:47)
#9      _CustomZone.runUnary (dart:async/zone.dart:1335:19)
#10     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1244:7)
#11     _BufferingStreamSubscription._sendData (dart:async/stream_impl.dart:341:11)
#12     _BufferingStreamSubscription._add (dart:async/stream_impl.dart:271:7)
#13     _SyncBroadcastStreamController._sendData (dart:async/broadcast_stream_controller.dart:378:25)
#14     _BroadcastStreamController.add (dart:async/broadcast_stream_controller.dart:244:5)
#15     _AsBroadcastStreamController.add (dart:async/broadcast_stream_controller.dart:475:11)
#16     _rootRunUnary (dart:async/zone.dart:1434:47)
#17     _CustomZone.runUnary (dart:async/zone.dart:1335:19)
#18     _CustomZone.runUnaryGuarded (dart:async/zone.dart:1244:7)
#19     _BufferingStreamSubscription._sendData (dart:async/stream_impl.dart:341:11)
#20     _BufferingStreamSubscription._add (dart:async/stream_impl.dart:271:7)
#21     _SinkTransformerStreamSubscription._add (dart:async/stream_transformers.dart:63:11)
#22     _EventSinkWrapper.add (dart:async/stream_transformers.dart:13:11)
#23     _StringAdapterSink.add (dart:convert/string_conversion.dart:238:11)
#24     _StringAdapterSink.addSlice (dart:convert/string_conversion.dart:243:7)
```
```
[✓] Flutter (Channel master, 2.6.0-12.0.pre.1001, on macOS 12.0.1 21A559 darwin-arm, locale en-US)
    • Flutter version 2.6.0-12.0.pre.1001 at /Users/joel/development/flutter
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 36709264b5 (4 hours ago), 2021-12-12 18:50:50 -0500
    • Engine revision 368e3cc505
    • Dart version 2.16.0 (build 2.16.0-85.0.dev)
    • DevTools version 2.9.1

[!] Xcode - develop for iOS and macOS (Xcode 13.1)
    • Xcode at /Applications/Xcode.app/Contents/Developer
    ✗ CocoaPods not installed.
        CocoaPods is used to retrieve the iOS and macOS platform side's plugin code that responds to your plugin usage on the Dart side.
        Without CocoaPods, plugins will not work on iOS or macOS.
        For more info, see https://flutter.dev/platform-plugins
      To install see https://guides.cocoapods.org/using/getting-started.html#installation for instructions.

[✓] VS Code (version 1.64.0-insider)
    • VS Code at /Applications/Visual Studio Code - Insiders.app/Contents
    • Flutter extension version 3.29.0

[✓] Connected device (2 available)
    • macOS (desktop)         • macos          • darwin-arm64 • macOS 12.0.1 21A559 darwin-arm
    • STM32MP1 Disco (mobile) • stm32mp1-disco • linux-arm64  • STM32MP1 Discovery Board

! Doctor found issues in 1 category.

```

## Flutter Application Metadata
**Type**: malformed
**Version**: null
**Material**: false
**Android X**: false
**Module**: false
**Plugin**: false
**Android package**: null
**iOS bundle identifier**: null
**Creation channel**: null
**Creation framework version**: null

",y,
173293,"### Steps to reproduce

This issue occurs when using the latest version of flutter stable 3.29 and 3.27. as well.
It occurs in first seconds of the user's session, and gets recorded in crashlytics.
Using  compileSdkVersion = 36 minSDKVersion = 29 targetSdkVersion = 36
It seems to be happening due to use of deprecated code in Android native.
Like this - https://issuetracker.google.com/issues/406271687?pli=1


### Expected results

App should not crash

### Actual results

App is crashing in the first second of the user's session.

### Code sample

<details open><summary>Code sample</summary>

```dart
[Paste your code here]
```

</details>


### Screenshots or Video

<details open>
<summary>Screenshots / Video demonstration</summary>

[Upload media here]

</details>


### Logs

<details open><summary>Logs</summary>

```console
          Fatal Exception: java.lang.NullPointerException: locale can't be null
       at java.util.Objects.requireNonNull(Objects.java:259)
       at libcore.icu.SimpleDateFormatData.getInstance(SimpleDateFormatData.java:98)
       at java.text.SimpleDateFormat.getDateTimeFormat(SimpleDateFormat.java:649)
       at java.text.SimpleDateFormat.<init>(SimpleDateFormat.java:645)
       at java.text.DateFormat.get(DateFormat.java:872)
       at java.text.DateFormat.getTimeInstance(DateFormat.java:532)
       at android.text.format.DateFormat.is24HourLocale(DateFormat.java:221)
       at android.text.format.DateFormat.is24HourFormat(DateFormat.java:203)
       at android.text.format.DateFormat.is24HourFormat(DateFormat.java:183)
       at io.flutter.embedding.android.FlutterView.sendUserSettingsToFlutter(FlutterView.java:1465)
       at io.flutter.embedding.android.FlutterView.attachToFlutterEngine(FlutterView.java:1170)
       at io.flutter.embedding.android.FlutterActivityAndFragmentDelegate.onCreateView(FlutterActivityAndFragmentDelegate.java:401)
       at io.flutter.embedding.android.FlutterFragment.onCreateView(FlutterFragment.java:1081)
       at androidx.fragment.app.Fragment.performCreateView(Fragment.java:3115)
       at androidx.fragment.app.FragmentStateManager.createView(FragmentStateManager.java:569)
       at androidx.fragment.app.FragmentStateManager.moveToExpectedState(FragmentStateManager.java:278)
       at androidx.fragment.app.FragmentManager.executeOpsTogether(FragmentManager.java:2103)
       at androidx.fragment.app.FragmentManager.removeRedundantOperationsAndExecute(FragmentManager.java:1998)
       at androidx.fragment.app.FragmentManager.execPendingActions(FragmentManager.java:1941)
       at androidx.fragment.app.FragmentManager.dispatchStateChange(FragmentManager.java:3206)
       at androidx.fragment.app.FragmentManager.dispatchActivityCreated(FragmentManager.java:3116)
       at androidx.fragment.app.FragmentController.dispatchActivityCreated(FragmentController.java:263)
       at androidx.fragment.app.FragmentActivity.onStart(FragmentActivity.java:350)
       at android.app.Instrumentation.callActivityOnStart(Instrumentation.java:1701)
       at android.app.Activity.performStart(Activity.java:9406)
       at android.app.ActivityThread.handleStartActivity(ActivityThread.java:4488)
       at android.app.servertransaction.TransactionExecutor.performLifecycleSequence(TransactionExecutor.java:270)
       at android.app.servertransaction.TransactionExecutor.cycleToPath(TransactionExecutor.java:250)
       at android.app.servertransaction.TransactionExecutor.executeLifecycleItem(TransactionExecutor.java:222)
       at android.app.servertransaction.TransactionExecutor.executeTransactionItems(TransactionExecutor.java:107)
       at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:81)
       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2895)
       at android.os.Handler.dispatchMessage(Handler.java:107)
       at android.os.Looper.loopOnce(Looper.java:257)
       at android.os.Looper.loop(Looper.java:342)
       at android.app.ActivityThread.main(ActivityThread.java:9634)
       at java.lang.reflect.Method.invoke(Method.java)
       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:619)
       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:929)
```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel stable, 3.29.0, on macOS 15.5 24F74 darwin-arm64, locale
    en-GB)
[✓] Android toolchain - develop for Android devices (Android SDK version 35.0.0)
[✓] Xcode - develop for iOS and macOS (Xcode 16.4)
[✓] Chrome - develop for the web
[✓] Android Studio (version 2024.1)
[✓] VS Code (version 1.101.2)
[✓] VS Code (version 1.67.2)
[✓] Connected device (3 available)
    ! Device emulator-5554 is offline.
[✓] Network resources

• No issues found!
```

</details>
",y,
174472,"### Steps to reproduce

1. Create a Flutter app with a snack bar theme, specifying a close icon color
2. Also add an icon button theme, with an icon color
3. Create a `SnackBar` widget, observe the close icon color being the icon button theme
4. Create a `SnackBar` widget and override `closeIconColor`, and observe the color being the icon button theme

### Expected results

In all cases the `closeIconColor` for the `SnackBar` widget should override any and all theme colors.

In my opinion also, the snack bar theme's `closeIconColor` should take precedent over the more generic icon button theme, but I could see a case for either way here.

### Actual results

The icon button theme color is used for the close icon color of the `SnackBar`, regardless of widget field overrides or snack bar theme.


### Code sample

<details open><summary>Code sample</summary>

See the `SnackBar` text for what I believe should be the actual behavior vs expected behavior.

```dart
import 'package:flutter/material.dart';

void main() => runApp(const SnackBarDemo());

class SnackBarDemo extends StatelessWidget {
  const SnackBarDemo({super.key});

  @override
  Widget build(BuildContext context) {
    final light = ThemeData.light();

    return MaterialApp(
      title: 'SnackBar Demo',
      theme: light.copyWith(
        snackBarTheme: light.snackBarTheme.copyWith(
          showCloseIcon: true,
          closeIconColor: Colors.blue,
        ),
        iconButtonTheme: IconButtonThemeData(
          style: ButtonStyle(
            iconColor: WidgetStateColor.fromMap({
              WidgetState.any: Colors.purple,
            }),
          ),
        ),
      ),
      home: Scaffold(
        appBar: AppBar(title: const Text('SnackBar Demo')),
        body: const SnackBarPage(),
      ),
    );
  }
}

class SnackBarPage extends StatelessWidget {
  const SnackBarPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Center(
      child: Row(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          ElevatedButton(
            onPressed: () {
              final snackBar = SnackBar(
                content: const Text(
                  'Snackbar should be Colors.blue (theme), but is Colors.purple',
                ),
              );
              ScaffoldMessenger.of(context).showSnackBar(snackBar);
            },
            child: const Text('Button 1'),
          ),
          ElevatedButton(
            onPressed: () {
              final snackBar = SnackBar(
                closeIconColor: Colors.green,
                content: const Text(
                  'Snackbar should be Colors.green (widget override), but is Colors.purple',
                ),
              );
              ScaffoldMessenger.of(context).showSnackBar(snackBar);
            },
            child: const Text('Button 2'),
          ),
        ],
      ),
    );
  }
}

```

</details>


### Screenshots or Video

<details open>
<summary>Screenshots / Video demonstration</summary>

Pressing ""Button 1"" from the example above:
<img width=""1332"" height=""819"" alt=""Image"" src=""https://github.com/user-attachments/assets/401e4111-3cd7-4372-b7fa-27f548e1c9cb"" />

Pressing ""Button 2"" from the example above:
<img width=""1332"" height=""819"" alt=""Image"" src=""https://github.com/user-attachments/assets/800062c5-89e3-40e4-977a-23302f81c3c3"" />

</details>


### Logs

<details open><summary>Logs</summary>

```console

[  +16 ms] Unable to locate an Android SDK.
[   +2 ms] executing: uname -m
[   +4 ms] Exit code 0 from: uname -m
[        ] x86_64
[   +5 ms] Artifact Instance of 'MaterialFonts' is not required, skipping update.
[        ] Artifact Instance of 'GradleWrapper' is not required, skipping update.
[        ] Artifact Instance of 'AndroidGenSnapshotArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'AndroidInternalBuildArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'IOSEngineArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'FlutterWebSdk' is not required, skipping update.
[        ] Artifact Instance of 'LegacyCanvasKitRemover' is not required, skipping update.
[        ] Artifact Instance of 'FlutterSdk' is not required, skipping update.
[        ] Artifact Instance of 'WindowsEngineArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'MacOSEngineArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'LinuxEngineArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'LinuxFuchsiaSDKArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'MacOSFuchsiaSDKArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'FlutterRunnerSDKArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'FlutterRunnerDebugSymbols' is not required, skipping update.
[        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'FontSubsetArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'PubDependencies' is not required, skipping update.
[  +27 ms] Artifact Instance of 'AndroidGenSnapshotArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'AndroidInternalBuildArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'IOSEngineArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'FlutterWebSdk' is not required, skipping update.
[        ] Artifact Instance of 'FlutterEngineStamp' is not required, skipping update.
[        ] Artifact Instance of 'LegacyCanvasKitRemover' is not required, skipping update.
[   +1 ms] Artifact Instance of 'WindowsEngineArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'MacOSEngineArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'LinuxEngineArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'LinuxFuchsiaSDKArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'MacOSFuchsiaSDKArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'FlutterRunnerSDKArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'FlutterRunnerDebugSymbols' is not required, skipping update.
[  +28 ms] Artifact Instance of 'AndroidGenSnapshotArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'AndroidInternalBuildArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'IOSEngineArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'FlutterWebSdk' is not required, skipping update.
[        ] Artifact Instance of 'FlutterEngineStamp' is not required, skipping update.
[        ] Artifact Instance of 'LegacyCanvasKitRemover' is not required, skipping update.
[        ] Artifact Instance of 'WindowsEngineArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'MacOSEngineArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'LinuxFuchsiaSDKArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'MacOSFuchsiaSDKArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'FlutterRunnerSDKArtifacts' is not required, skipping update.
[        ] Artifact Instance of 'FlutterRunnerDebugSymbols' is not required, skipping update.
[  +23 ms] Skipping pub get: version match.
[  +62 ms] Skipping generating web_plugin_registrant.dart because it is up-to-date.
[  +13 ms] Generating /home/[USERNAME]/Projects/temp/application_announce/android/app/src/main/java/io/flutter/plugins/GeneratedPluginRegistrant.java
[   +2 ms] Skipping generating GeneratedPluginRegistrant.java because it is up-to-date.
[   +1 ms] Skipping generating generated_plugin_registrant.h because it is up-to-date.
[        ] Skipping generating generated_plugin_registrant.cc because it is up-to-date.
[        ] Skipping generating generated_plugins.cmake because it is up-to-date.
[        ] Skipping generating generated_plugin_registrant.h because it is up-to-date.
[        ] Skipping generating generated_plugin_registrant.cc because it is up-to-date.
[        ] Skipping generating generated_plugins.cmake because it is up-to-date.
[        ] Skipping generating GeneratedPluginRegistrant.h because it is up-to-date.
[        ] Skipping generating GeneratedPluginRegistrant.m because it is up-to-date.
[        ] Skipping generating GeneratedPluginRegistrant.swift because it is up-to-date.
[  +24 ms] Initializing file store
[   +5 ms] Skipping target: gen_localizations
[   +1 ms] gen_dart_plugin_registrant: Starting due to {InvalidatedReasonKind.inputChanged: The following inputs have updated contents: /home/[USERNAME]/Projects/temp/application_announce/.dart_tool/package_config.json}
[  +15 ms] gen_dart_plugin_registrant: Complete
[   +1 ms] Skipping target: _composite
[   +2 ms] complete
[   +3 ms] Launching lib/main.dart on Linux in debug mode...
[   +2 ms] /home/[USERNAME]/fvm/versions/3.35.2/bin/cache/dart-sdk/bin/dartaotruntime /home/[USERNAME]/fvm/versions/3.35.2/bin/cache/dart-sdk/bin/snapshots/frontend_server_aot.dart.snapshot --sdk-root /home/[USERNAME]/fvm/versions/3.35.2/bin/cache/artifacts/engine/common/flutter_patched_sdk/ --incremental --target=flutter --experimental-emit-debug-metadata -DFLUTTER_VERSION=3.35.2 -DFLUTTER_CHANNEL=stable -DFLUTTER_GIT_URL=https://github.com/flutter/flutter.git -DFLUTTER_FRAMEWORK_REVISION=05db968908 -DFLUTTER_ENGINE_REVISION=a8bfdfc394 -DFLUTTER_DART_VERSION=3.9.0 --output-dill /tmp/flutter_tools.LYPKDZ/flutter_tool.RUJSMB/app.dill --packages /home/[USERNAME]/Projects/temp/application_announce/.dart_tool/package_config.json -Ddart.vm.profile=false -Ddart.vm.product=false --enable-asserts --track-widget-creation --filesystem-scheme org-dartlang-root --initialize-from-dill build/7b274049f380fd19360a9716927098ae.cache.dill.track.dill --verbosity=error --enable-experiment=alternative-invalidation-strategy
[  +13 ms] Building Linux application...
[  +10 ms] <- compile package:application_announce/main.dart
[   +2 ms] executing: [/home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/] cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DFLUTTER_TARGET_PLATFORM=linux-x64 /home/[USERNAME]/Projects/temp/application_announce/linux
[  +75 ms] -- Configuring done (0.1s)
[   +4 ms] -- Generating done (0.0s)
[ +117 ms] -- Build files have been written to: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug
[   +4 ms] executing: ninja -C /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug install
[  +65 ms] ninja: Entering directory `/home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug'
[+1445 ms] [1/5] Generating /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/libflutter_linux_gtk.so, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_basic_message_channel.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_binary_codec.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_binary_messenger.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_dart_project.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_engine.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_json_message_codec.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_json_method_codec.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_message_codec.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_method_call.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_method_channel.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_method_codec.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_method_response.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_plugin_registrar.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_plugin_registry.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_standard_message_codec.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_standard_method_codec.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_string_codec.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_value.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/fl_view.h, /home/[USERNAME]/Projects/temp/application_announce/linux/flutter/ephemeral/flutter_linux/flutter_linux.h, _phony_
[        ] [  +19 ms] Unable to locate an Android SDK.
[        ] [   +2 ms] executing: uname -m
[        ] [   +3 ms] Exit code 0 from: uname -m
[        ] [        ] x86_64
[        ] [   +5 ms] Artifact Instance of 'MaterialFonts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'GradleWrapper' is not required, skipping update.
[        ] [        ] Artifact Instance of 'AndroidGenSnapshotArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'AndroidInternalBuildArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IOSEngineArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterWebSdk' is not required, skipping update.
[        ] [        ] Artifact Instance of 'LegacyCanvasKitRemover' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterSdk' is not required, skipping update.
[        ] [        ] Artifact Instance of 'WindowsEngineArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'MacOSEngineArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'LinuxEngineArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'LinuxFuchsiaSDKArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'MacOSFuchsiaSDKArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterRunnerSDKArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterRunnerDebugSymbols' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FontSubsetArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'PubDependencies' is not required, skipping update.
[        ] [   +6 ms] Artifact Instance of 'AndroidGenSnapshotArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'AndroidInternalBuildArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IOSEngineArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterWebSdk' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterEngineStamp' is not required, skipping update.
[        ] [        ] Artifact Instance of 'LegacyCanvasKitRemover' is not required, skipping update.
[        ] [   +1 ms] Artifact Instance of 'WindowsEngineArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'MacOSEngineArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'LinuxEngineArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'LinuxFuchsiaSDKArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'MacOSFuchsiaSDKArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterRunnerSDKArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterRunnerDebugSymbols' is not required, skipping update.
[        ] [  +26 ms] Artifact Instance of 'MaterialFonts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'GradleWrapper' is not required, skipping update.
[        ] [        ] Artifact Instance of 'AndroidGenSnapshotArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'AndroidInternalBuildArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IOSEngineArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterWebSdk' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterEngineStamp' is not required, skipping update.
[        ] [        ] Artifact Instance of 'LegacyCanvasKitRemover' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterSdk' is not required, skipping update.
[        ] [        ] Artifact Instance of 'WindowsEngineArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'MacOSEngineArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'LinuxFuchsiaSDKArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'MacOSFuchsiaSDKArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterRunnerSDKArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FlutterRunnerDebugSymbols' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'IosUsbArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'FontSubsetArtifacts' is not required, skipping update.
[        ] [        ] Artifact Instance of 'PubDependencies' is not required, skipping update.
[        ] [  +10 ms] Initializing file store
[        ] [   +6 ms] Done initializing file store
[        ] [  +26 ms] Skipping target: gen_dart_plugin_registrant
[        ] [   +2 ms] Skipping target: dart_build
[        ] [ +619 ms] Skipping target: unpack_linux
[        ] [        ] Skipping target: gen_localizations
[        ] [   +1 ms] Skipping target: install_code_assets
[        ] [ +231 ms] Skipping target: kernel_snapshot_program
[        ] [ +155 ms] Skipping target: debug_bundle_linux-x64_assets
[        ] [        ] Persisting file store
[        ] [   +6 ms] Done persisting file store
[        ] [   +8 ms] build succeeded.
[        ] [        ] ""flutter assemble"" took 1,104ms.
[        ] [  +11 ms] Running 1 shutdown hook
[        ] [   +1 ms] Shutdown hooks complete
[        ] [        ] exiting with code 0
[        ] [1/2] Install the project...
[        ] -- Install configuration: ""Debug""
[   +4 ms] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/application_announce
[        ] -- Set non-toolchain portion of runtime path of ""/home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/application_announce"" to ""$ORIGIN/lib""
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/icudtl.dat
[   +1 ms] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/lib/libflutter_linux_gtk.so
[  +98 ms] -- Up-to-date: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/lib
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/NativeAssetsManifest.json
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/kernel_blob.bin
[  +47 ms] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/AssetManifest.json
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/NOTICES.Z
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/packages
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/packages/cupertino_icons
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/packages/cupertino_icons/assets
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/packages/cupertino_icons/assets/CupertinoIcons.ttf
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/shaders
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/shaders/ink_sparkle.frag
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/AssetManifest.bin
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/fonts
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/fonts/MaterialIcons-Regular.otf
[   +2 ms] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/FontManifest.json
[        ] -- Installing: /home/[USERNAME]/Projects/temp/application_announce/build/linux/x64/debug/bundle/data/flutter_assets/version.json
[  +11 ms] Building Linux application... (completed in 1,897ms)
[   +1 ms] ✓ Built build/linux/x64/debug/bundle/application_announce
[ +138 ms] Gdk-Message: 16:33:20.835: Unable to load  from the cursor theme
[  +59 ms] VM Service URL on device: http://127.0.0.1:45163/5RnXtuJSDY4=/
[   +3 ms] Caching compiled dill
[  +54 ms] Connecting to service protocol: http://127.0.0.1:45163/5RnXtuJSDY4=/
[ +105 ms] Launching a Dart Developer Service (DDS) instance at http://127.0.0.1:0, connecting to VM service at http://127.0.0.1:45163/5RnXtuJSDY4=/.
[ +111 ms] Successfully connected to service protocol: http://127.0.0.1:45163/5RnXtuJSDY4=/
[   +5 ms] DevFS: Creating new filesystem on the device (null)
[   +7 ms] DevFS: Created new filesystem on the device (file:///tmp/application_announceSRCXUJ/application_announce/)
[   +1 ms] Updating assets
[  +62 ms] Syncing files to device Linux...
[   +1 ms] Compiling dart to kernel with 0 updated files
[        ] Processing bundle.
[        ] <- recompile package:application_announce/main.dart 349da770-f68a-4bf7-a384-726b8e1b3b88
[        ] <- 349da770-f68a-4bf7-a384-726b8e1b3b88
[        ] Bundle processing done.
[  +45 ms] Updating files.
[        ] Pending asset builds completed. Writing dirty entries.
[        ] DevFS: Sync finished
[        ] Syncing files to device Linux... (completed in 49ms)
[        ] Synced 0.0MB.
[        ] <- accept
[   +1 ms] Connected to _flutterView/0x63d5ef4defa0.
[   +1 ms] Flutter run key commands.
[        ] r Hot reload. 🔥🔥🔥
[        ] R Hot restart.
[        ] h List all available interactive commands.
[        ] d Detach (terminate ""flutter run"" but leave application running).
[        ] c Clear the screen
[        ] q Quit (terminate the application on the device).
[        ] A Dart VM Service on Linux is available at: http://127.0.0.1:37281/5vs2mOy1C3M=/
[ +210 ms] The Flutter DevTools debugger and profiler on Linux is available at: http://127.0.0.1:9102?uri=http://127.0.0.1:37281/5vs2mOy1C3M=/
[+5698 ms] DevFS: Deleting filesystem on the device (file:///tmp/application_announceSRCXUJ/application_announce/)
[   +3 ms] DevFS: Deleted filesystem on the device (file:///tmp/application_announceSRCXUJ/application_announce/)
[  +14 ms] Application finished.
[   +1 ms] ""flutter run"" took 8,660ms.
[   +1 ms] Running 3 shutdown hooks
[        ] Shutdown hooks complete
[   +1 ms] Service protocol connection closed.
[        ] exiting with code 0

```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
[✓] Flutter (Channel stable, 3.35.2, on Ubuntu 24.04.3 LTS 6.14.0-27-generic, locale en_US.UTF-8) [26ms]
    • Flutter version 3.35.2 on channel stable at /home/[USERNAME]/fvm/versions/3.35.2
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 05db968908 (28 hours ago), 2025-08-25 10:21:35 -0700
    • Engine revision a8bfdfc394
    • Dart version 3.9.0
    • DevTools version 2.48.0
    • Feature flags: enable-web, enable-linux-desktop, enable-macos-desktop, enable-windows-desktop, enable-android,
      enable-ios, cli-animations, enable-lldb-debugging

[✗] Android toolchain - develop for Android devices [17ms]
    ✗ Unable to locate Android SDK.
      Install Android Studio from: https://developer.android.com/studio/index.html
      On first launch it will assist you in installing the Android SDK components.
      (or visit https://flutter.dev/to/linux-android-setup for detailed instructions).
      If the Android SDK has been installed to a custom location, please use
      `flutter config --android-sdk` to update to that location.


[✗] Chrome - develop for the web (Cannot find Chrome executable at google-chrome) [8ms]
    ! Cannot find Chrome. Try setting CHROME_EXECUTABLE to a Chrome executable.

[✓] Linux toolchain - develop for Linux desktop [133ms]
    • Ubuntu clang version 18.1.3 (1ubuntu1)
    • cmake version 3.28.3
    • ninja version 1.11.1
    • pkg-config version 1.8.1
    ! Unable to access driver information using 'eglinfo'.
      It is likely available from your distribution (e.g.: apt install mesa-utils)

[!] Android Studio (not installed) [6ms]
    • Android Studio not found; download from https://developer.android.com/studio/index.html
      (or visit https://flutter.dev/to/linux-android-setup for detailed instructions).

[✓] VS Code (version 1.103.0) [6ms]
    • VS Code at /snap/code/current/usr/share/code
    • Flutter extension version 3.116.0

[✓] Connected device (1 available) [18ms]
    • Linux (desktop) • linux • linux-x64 • Ubuntu 24.04.3 LTS 6.14.0-27-generic

[✓] Network resources [287ms]
    • All expected network resources are available.

! Doctor found issues in 3 categories.
```

</details>
",y,
174267,"### Steps to reproduce

1. Clone the [repo](https://github.com/RustamG/flutter_golden_tests). It has a sample golden test with an image that fails the test intentionally.
2. Launch iOS simulator
3. Run in the terminal `flutter test integration_test/E2Es`

### Expected results

The test process stops. I should not kill it manually.

### Actual results

The test process doesn't exit having the following output:
```
<< [ERROR:flutter/shell/testing/tester_main.cc(682)] Unhandled exception
<<< Exception: Golden ""goldens/failing_counter.png"": Pixel test failed, 0.11%, 4496px diff detected.
<<< Failure feedback can be found at /Users/x/Documents/Flutter/golden_tests/integration_test/E2Es/failures
<<< Stack trace: #0      LocalFileComparator.compare (package:flutter_test/src/_goldens_io.dart:108:5)
<<< <asynchronous suspension>
<<< #1      main (file:///var/folders/6n/2pnrqh45205_wq6kvgs8xmq00000gn/T/flutter_tools.40hhzs/flutter_web_platform.TmZB1C/listenerHyn8yD/listener.dart:29:26)
<<< <asynchronous suspension>
<<< 

00:23 +0 -1: loading /Users/x/Documents/Flutter/golden_tests/integration_test/E2Es/ui_test.dart [E]                                                                 
  type 'Null' is not a subtype of type 'Map<String, dynamic>'
  dart:async/stream_impl.dart 1038:17                                _StreamIterator.current
  package:flutter_tools/src/test/test_golden_comparator.dart 315:27  TestGoldenComparatorProcess.getResponse
  ===== asynchronous gap ===========================
  package:flutter_tools/src/test/test_golden_comparator.dart 161:41  TestGoldenComparator._compareGoldens
  ===== asynchronous gap ===========================
  package:flutter_tools/src/test/test_golden_comparator.dart 127:28  TestGoldenComparator.compare
  ===== asynchronous gap ===========================
  package:flutter_tools/src/test/flutter_platform.dart 554:17        FlutterPlatform._listenToVmServiceForGoldens.<fn>

```

### Code sample

<details open><summary>Code sample</summary>

```dart
import 'package:flutter_test/flutter_test.dart';
import 'package:golden_tests/main.dart';
import 'package:integration_test/integration_test.dart';

const kGoldensFolder = 'goldens';

void main() {
  testWidgets('Counter smoke test', (WidgetTester tester) async {
    await tester.pumpWidget(const MyApp());

    expect(find.text('0'), findsOneWidget);
    expect(find.text('1'), findsNothing);

    await tester.pumpAndSettle(const Duration(seconds: 5));

    await compareScreenshot(kGoldensFolder, 'failing_counter');
  });
}

Future<void> compareScreenshot(String goldensFolder, String key) async {
  List<int> screenshotBytes =
      await IntegrationTestWidgetsFlutterBinding.ensureInitialized()
          .takeScreenshot(key);

  await expectLater(
    screenshotBytes,
    matchesGoldenFile('$goldensFolder/$key.png'),
  );
}
```

</details>


### Screenshots or Video

<details open>
<summary>Screenshots</summary>

<img width=""2608"" height=""1312"" alt=""Image"" src=""https://github.com/user-attachments/assets/5277cbdc-3357-4df6-832a-4e31d569a533"" />

</details>


### Logs

_No response_

### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
[✓] Flutter (Channel stable, 3.35.1, on macOS 15.6 24G84 darwin-arm64, locale en-RU) [334ms]
    • Flutter version 3.35.1 on channel stable at /Users/x/fvm/versions/3.35.1
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 20f8274939 (8 days ago), 2025-08-14 10:53:09 -0700
    • Engine revision 1e9a811bf8
    • Dart version 3.9.0
    • DevTools version 2.48.0
    • Feature flags: enable-web, enable-linux-desktop, enable-macos-desktop, enable-windows-desktop, enable-android, enable-ios, cli-animations, enable-lldb-debugging

[✓] Android toolchain - develop for Android devices (Android SDK version 35.0.0) [1,087ms]
    • Android SDK at /Users/x/Library/Android/sdk/
    • Emulator version 35.2.10.0 (build_id 12414864) (CL:N/A)
    • Platform android-35, build-tools 35.0.0
    • ANDROID_HOME = /Users/x/Library/Android/sdk/
    • Java binary at: /Applications/Android Studio.app/Contents/jbr/Contents/Home/bin/java
      This is the JDK bundled with the latest Android Studio installation on this machine.
      To manually set the JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`.
    • Java version OpenJDK Runtime Environment (build 21.0.3+-79915917-b509.11)
    • All Android licenses accepted.

[✓] Xcode - develop for iOS and macOS (Xcode 16.4) [685ms]
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Build 16F6
    • CocoaPods version 1.16.2

[✓] Chrome - develop for the web [103ms]
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2024.2) [103ms]
    • Android Studio at /Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 21.0.3+-79915917-b509.11)

[✓] IntelliJ IDEA Ultimate Edition (version 2025.1.3) [102ms]
    • IntelliJ at /Applications/IntelliJ IDEA.app
    • Flutter plugin version 87.0
    • Dart plugin version 251.27623.5

[✓] IntelliJ IDEA Community Edition (version 2024.3.6) [23ms]
    • IntelliJ at /Applications/IntelliJ IDEA CE.app
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart

[✓] VS Code (version 1.102.2) [6ms]
    • VS Code at /Applications/Visual Studio Code.app/Contents
    • Flutter extension can be installed from:
      🔨 https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter

[✓] Connected device (3 available) [5.7s]
    • iPad Pro 11-inch (M4) (mobile) • 19A2CC4F-464F-4482-87E2-0B29AEED90A4 • ios            • com.apple.CoreSimulator.SimRuntime.iOS-18-6 (simulator)
    • macOS (desktop)                • macos                                • darwin-arm64   • macOS 15.6 24G84 darwin-arm64
    • Chrome (web)                   • chrome                               • web-javascript • Google Chrome 139.0.7258.139

[✓] Network resources [682ms]
    • All expected network resources are available.

• No issues found!

```

</details>
",y,
174355,"### Steps to reproduce

Following this guide, but left out the first step, as not developing for engine:

https://github.com/flutter/flutter/blob/master/CONTRIBUTING.md#developing-for-flutter

```powershell
git clone https://github.com/flutter/flutter.git flutter_main
cd flutter_main
git remote rename origin upstream
.\bin\flutter doctor
```

### Actual results

The command fails with an error message:
```
Invoke-WebRequest : NoSuchKeyThe specified key does not exist.No such object:
flutter_infra_release/flutter/e69de29bb2d1d6434b8b29ae775ad8c2e48c5391/dart-sdk-windows-x64.zip
```

Interestingly the doctor command works on `beta` or `stable`. So I guess the issue is, that the engine is not available for commit `e69de29bb2d1d6434b8b29ae775ad8c2e48c5391`
The commit also does not exist: https://github.com/flutter/flutter/commit/e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
Also not in the old engine repo: https://github.com/flutter/engine/commit/e69de29bb2d1d6434b8b29ae775ad8c2e48c5391

But this commit is mentioned here:
https://github.com/flutter/flutter/blob/9a459a4272fbd4bd26e5f58f988d9c220770bb84/engine/src/flutter/docs/monorepo/engine_binary_hashing.md?plain=1#L43

I suppose the engine is not build on every commit, but it should somehow work out of the box?

### Logs

<details open>
<summary>Logs</summary>

```console

.\bin\flutter doctor
error: unknown option `format'
usage: git ls-tree [<options>] <tree-ish> [<path>...]

    -d                    only show trees
    -r                    recurse into subtrees
    -t                    show trees when recursing
    -z                    terminate entries with NUL byte
    -l, --long            include object size
    --name-only           list only filenames
    --name-status         list only filenames
    --full-name           use full path names
    --full-tree           list entire tree; not just current directory (implies --full-name)
    --abbrev[=<n>]        use <n> digits to display object names

Checking Dart SDK version...
Downloading Dart SDK from Flutter engine ...
Downloading the Dart SDK using the BITS service failed, retrying with WebRequest...
Invoke-WebRequest : NoSuchKeyThe specified key does not exist.No such object:
flutter_infra_release/flutter/e69de29bb2d1d6434b8b29ae775ad8c2e48c5391/dart-sdk-windows-x64.zip
At D:\Tmp\Coding\git\flutter\flutter_beta\bin\internal\update_dart_sdk.ps1:97 char:5
+     Invoke-WebRequest -Uri $dartSdkUrl -OutFile $dartSdkZip
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (System.Net.HttpWebRequest:HttpWebRequest) [Invoke-WebRequest], WebExc
   eption
    + FullyQualifiedErrorId : WebCmdletWebResponseException,Microsoft.PowerShell.Commands.InvokeWebRequestCommand
Error: Unable to update Dart SDK. Retrying...
```

</details>


### Flutter Doctor output

<details open>
<summary>Doctor output</summary>

Cannot paste doctor output, because it cannot resolve, but its the current main: 
[62ea199](https://github.com/flutter/flutter/commit/62ea19965077fcece95e7f0258df1f3bed73ca2e)

</details>
",y,
173912,"### Steps to reproduce

When extending FormField if the builder returns a Sliver an exception is thrown by the framework. 

It's not clear what the cause is but removing the following from the FormField build method made the exception go away and produced the expected results.

Source: https://github.com/flutter/flutter/blob/master/packages/flutter/lib/src/widgets/form.dart#L783
```dart
final Widget child = Semantics(
      validationResult: hasError
          ? SemanticsValidationResult.invalid
          : SemanticsValidationResult.valid,
      child: widget.builder(this),
    );

```

Error:
> The following assertion was thrown building MtgRadioGroupSliver<IMtgCardLegalityFormat>(state: _MtgRadioGroupStateSliver<IMtgCardLegalityFormat>#b279d):
> A RenderSemanticsAnnotations expected a child of type RenderBox but received a child of type RenderSliverList.
> 
> RenderObjects expect specific types of children because they coordinate with their children during layout and paint. For example, a RenderSliver cannot be the child of a RenderBox because a RenderSliver does not understand the RenderBox layout protocol.
> The RenderSemanticsAnnotations that expected a RenderBox child was created by: Semantics ← MtgRadioGroupFormField<IMtgCardLegalityFormat> ← SliverToBoxAdapter ← ShrinkWrappingViewport ← IgnorePointer-[GlobalKey#45e78] ← Semantics ← Listener ← _GestureSemantics ← 


Steps:

1. Create a custom FormField by extending FormField
2. In the builder method return a SliverList. 
3. See exception is thrown.


### Expected results

The form fields should not error out. 

<img width=""456"" height=""716"" alt=""Image"" src=""https://github.com/user-attachments/assets/ff3bbc52-d84f-4fe5-abb6-f0f60cfc1645"" />

### Actual results

Exception is throw by the framework. 

<img width=""458"" height=""706"" alt=""Image"" src=""https://github.com/user-attachments/assets/fee9ba44-2d8d-4f62-9199-14adeb422724"" />

### Code sample

<details open><summary>Code sample</summary>

```dart
import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}


class SliverFormField<T extends Object> extends FormField<T> {

  SliverFormField({super.key,
    //super.validator,
    super.autovalidateMode,
    super.enabled,
    super.forceErrorText,
    super.initialValue,
    super.onSaved,
    super.restorationId,
    })
      :super(builder: (FormFieldState<T?> field) {
    return SliverList.list(children: []);
  });
  }

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});
  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: Text(widget.title),
      ),
      body: Center(
        child: Form(child: CustomScrollView(
          slivers: [SliverFormField()],
        )),
      ),

    );
  }
}

```

</details>


### Screenshots or Video

<details open>
<summary>Screenshots / Video demonstration</summary>

[Upload media here]

</details>


### Logs

<details open><summary>Logs</summary>

```console
Performing hot restart...
Syncing files to device macOS...
Restarted application in 394ms.

======== Exception caught by widgets library =======================================================
The following assertion was thrown building SliverFormField<Object>(dependencies: [UnmanagedRestorationScope, _FormScope], state: FormFieldState<Object>#5f240):
A RenderViewport expected a child of type RenderSliver but received a child of type RenderSemanticsAnnotations.

RenderObjects expect specific types of children because they coordinate with their children during layout and paint. For example, a RenderSliver cannot be the child of a RenderBox because a RenderSliver does not understand the RenderBox layout protocol.
The RenderViewport that expected a RenderSliver child was created by: Viewport ← IgnorePointer-[GlobalKey#bc1e6] ← Semantics ← Listener ← _GestureSemantics ← RawGestureDetector-[LabeledGlobalKey<RawGestureDetectorState>#ba216] ← Listener ← _ScrollableScope ← _ScrollSemantics-[GlobalKey#2a5f9] ← NotificationListener<ScrollMetricsNotification> ← RepaintBoundary ← CustomPaint-[GlobalKey#dbb9e] ← ⋯
The RenderSemanticsAnnotations that did not match the expected child type was created by: Semantics ← SliverFormField<Object> ← Viewport ← IgnorePointer-[GlobalKey#bc1e6] ← Semantics ← Listener ← _GestureSemantics ← RawGestureDetector-[LabeledGlobalKey<RawGestureDetectorState>#ba216] ← Listener ← _ScrollableScope ← _ScrollSemantics-[GlobalKey#2a5f9] ← NotificationListener<ScrollMetricsNotification> ← ⋯
The relevant error-causing widget was: 
  SliverFormField<Object> SliverFormField:file:///Users/codeminion/Projects/FlutterProjects/sliver_form_field_crash_sample/lib/main.dart:59:21
When the exception was thrown, this was the stack: 
#0      ContainerRenderObjectMixin.debugValidateChild.<anonymous closure> (package:flutter/src/rendering/object.dart:4268:9)
#1      ContainerRenderObjectMixin.debugValidateChild (package:flutter/src/rendering/object.dart:4295:6)
#2      MultiChildRenderObjectElement.insertRenderObjectChild (package:flutter/src/widgets/framework.dart:7097:25)
#3      _ViewportElement.insertRenderObjectChild (package:flutter/src/widgets/viewport.dart:295:11)
#4      RenderObjectElement.attachRenderObject (package:flutter/src/widgets/framework.dart:6844:35)
#5      RenderObjectElement.mount (package:flutter/src/widgets/framework.dart:6706:5)
#6      SingleChildRenderObjectElement.mount (package:flutter/src/widgets/framework.dart:7017:11)
...     Normal element mounting (9 frames)
#15     Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#16     MultiChildRenderObjectElement.inflateWidget (package:flutter/src/widgets/framework.dart:7169:36)
#17     MultiChildRenderObjectElement.mount (package:flutter/src/widgets/framework.dart:7185:32)
#18     _ViewportElement.mount (package:flutter/src/widgets/viewport.dart:254:11)
...     Normal element mounting (160 frames)
#178    Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#179    MultiChildRenderObjectElement.inflateWidget (package:flutter/src/widgets/framework.dart:7169:36)
#180    MultiChildRenderObjectElement.mount (package:flutter/src/widgets/framework.dart:7185:32)
...     Normal element mounting (136 frames)
#316    Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#317    MultiChildRenderObjectElement.inflateWidget (package:flutter/src/widgets/framework.dart:7169:36)
#318    MultiChildRenderObjectElement.mount (package:flutter/src/widgets/framework.dart:7185:32)
...     Normal element mounting (188 frames)
#506    Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#507    MultiChildRenderObjectElement.inflateWidget (package:flutter/src/widgets/framework.dart:7169:36)
#508    MultiChildRenderObjectElement.mount (package:flutter/src/widgets/framework.dart:7185:32)
...     Normal element mounting (558 frames)
#1066   Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#1067   Element.updateChild (package:flutter/src/widgets/framework.dart:4004:18)
#1068   _RawViewElement._updateChild (package:flutter/src/widgets/view.dart:481:16)
#1069   _RawViewElement.mount (package:flutter/src/widgets/view.dart:504:5)
...     Normal element mounting (15 frames)
#1084   Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#1085   Element.updateChild (package:flutter/src/widgets/framework.dart:4004:18)
#1086   RootElement._rebuild (package:flutter/src/widgets/binding.dart:1716:16)
#1087   RootElement.mount (package:flutter/src/widgets/binding.dart:1685:5)
#1088   RootWidget.attach.<anonymous closure> (package:flutter/src/widgets/binding.dart:1638:18)
#1089   BuildOwner.buildScope (package:flutter/src/widgets/framework.dart:3046:19)
#1090   RootWidget.attach (package:flutter/src/widgets/binding.dart:1637:13)
#1091   WidgetsBinding.attachToBuildOwner (package:flutter/src/widgets/binding.dart:1376:27)
#1092   WidgetsBinding.attachRootWidget (package:flutter/src/widgets/binding.dart:1361:5)
#1093   WidgetsBinding.scheduleAttachRootWidget.<anonymous closure> (package:flutter/src/widgets/binding.dart:1347:7)
#1097   _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
(elided 3 frames from class _Timer and dart:async-patch)
====================================================================================================

======== Exception caught by widgets library =======================================================
The following assertion was thrown building RawGestureDetector-[LabeledGlobalKey<RawGestureDetectorState>#ba216](state: RawGestureDetectorState#ce572(gestures: <none>, behavior: opaque)):
A RenderViewport expected a child of type RenderSliver but received a child of type RenderErrorBox.

RenderObjects expect specific types of children because they coordinate with their children during layout and paint. For example, a RenderSliver cannot be the child of a RenderBox because a RenderSliver does not understand the RenderBox layout protocol.
The RenderViewport that expected a RenderSliver child was created by: Viewport ← IgnorePointer-[GlobalKey#bc1e6] ← Semantics ← Listener ← _GestureSemantics ← RawGestureDetector-[LabeledGlobalKey<RawGestureDetectorState>#ba216] ← Listener ← _ScrollableScope ← _ScrollSemantics-[GlobalKey#2a5f9] ← NotificationListener<ScrollMetricsNotification> ← RepaintBoundary ← CustomPaint-[GlobalKey#dbb9e] ← ⋯
The RenderErrorBox that did not match the expected child type was created by: ErrorWidget-[#6ad5f] ← SliverFormField<Object> ← Viewport ← IgnorePointer-[GlobalKey#bc1e6] ← Semantics ← Listener ← _GestureSemantics ← RawGestureDetector-[LabeledGlobalKey<RawGestureDetectorState>#ba216] ← Listener ← _ScrollableScope ← _ScrollSemantics-[GlobalKey#2a5f9] ← NotificationListener<ScrollMetricsNotification> ← ⋯
The relevant error-causing widget was: 
  CustomScrollView CustomScrollView:file:///Users/codeminion/Projects/FlutterProjects/sliver_form_field_crash_sample/lib/main.dart:58:28
When the exception was thrown, this was the stack: 
#0      ContainerRenderObjectMixin.debugValidateChild.<anonymous closure> (package:flutter/src/rendering/object.dart:4268:9)
#1      ContainerRenderObjectMixin.debugValidateChild (package:flutter/src/rendering/object.dart:4295:6)
#2      MultiChildRenderObjectElement.insertRenderObjectChild (package:flutter/src/widgets/framework.dart:7097:25)
#3      _ViewportElement.insertRenderObjectChild (package:flutter/src/widgets/viewport.dart:295:11)
#4      RenderObjectElement.attachRenderObject (package:flutter/src/widgets/framework.dart:6844:35)
#5      RenderObjectElement.mount (package:flutter/src/widgets/framework.dart:6706:5)
...     Normal element mounting (9 frames)
#14     Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#15     MultiChildRenderObjectElement.inflateWidget (package:flutter/src/widgets/framework.dart:7169:36)
#16     MultiChildRenderObjectElement.mount (package:flutter/src/widgets/framework.dart:7185:32)
#17     _ViewportElement.mount (package:flutter/src/widgets/viewport.dart:254:11)
...     Normal element mounting (160 frames)
#177    Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#178    MultiChildRenderObjectElement.inflateWidget (package:flutter/src/widgets/framework.dart:7169:36)
#179    MultiChildRenderObjectElement.mount (package:flutter/src/widgets/framework.dart:7185:32)
...     Normal element mounting (136 frames)
#315    Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#316    MultiChildRenderObjectElement.inflateWidget (package:flutter/src/widgets/framework.dart:7169:36)
#317    MultiChildRenderObjectElement.mount (package:flutter/src/widgets/framework.dart:7185:32)
...     Normal element mounting (188 frames)
#505    Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#506    MultiChildRenderObjectElement.inflateWidget (package:flutter/src/widgets/framework.dart:7169:36)
#507    MultiChildRenderObjectElement.mount (package:flutter/src/widgets/framework.dart:7185:32)
...     Normal element mounting (558 frames)
#1065   Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#1066   Element.updateChild (package:flutter/src/widgets/framework.dart:4004:18)
#1067   _RawViewElement._updateChild (package:flutter/src/widgets/view.dart:481:16)
#1068   _RawViewElement.mount (package:flutter/src/widgets/view.dart:504:5)
...     Normal element mounting (15 frames)
#1083   Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#1084   Element.updateChild (package:flutter/src/widgets/framework.dart:4004:18)
#1085   RootElement._rebuild (package:flutter/src/widgets/binding.dart:1716:16)
#1086   RootElement.mount (package:flutter/src/widgets/binding.dart:1685:5)
#1087   RootWidget.attach.<anonymous closure> (package:flutter/src/widgets/binding.dart:1638:18)
#1088   BuildOwner.buildScope (package:flutter/src/widgets/framework.dart:3046:19)
#1089   RootWidget.attach (package:flutter/src/widgets/binding.dart:1637:13)
#1090   WidgetsBinding.attachToBuildOwner (package:flutter/src/widgets/binding.dart:1376:27)
#1091   WidgetsBinding.attachRootWidget (package:flutter/src/widgets/binding.dart:1361:5)
#1092   WidgetsBinding.scheduleAttachRootWidget.<anonymous closure> (package:flutter/src/widgets/binding.dart:1347:7)
#1096   _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
(elided 3 frames from class _Timer and dart:async-patch)
====================================================================================================

======== Exception caught by widgets library =======================================================
The following assertion was thrown building RawGestureDetector-[LabeledGlobalKey<RawGestureDetectorState>#ba216](state: RawGestureDetectorState#ce572(gestures: <none>, behavior: opaque)):
'package:flutter/src/widgets/framework.dart': Failed assertion: line 7010 pos 12: 'child == _child': is not true.


Either the assertion indicates an error in the framework itself, or we should provide substantially more information in this error message to help you determine and fix the underlying cause.
In either case, please report this assertion by filing a bug on GitHub:
  https://github.com/flutter/flutter/issues/new?template=02_bug.yml

The relevant error-causing widget was: 
  CustomScrollView CustomScrollView:file:///Users/codeminion/Projects/FlutterProjects/sliver_form_field_crash_sample/lib/main.dart:58:28
When the exception was thrown, this was the stack: 
#2      SingleChildRenderObjectElement.forgetChild (package:flutter/src/widgets/framework.dart:7010:12)
#3      Element._retakeInactiveElement (package:flutter/src/widgets/framework.dart:4476:14)
...     Normal element mounting (10 frames)
#13     Element.inflateWidget (package:flutter/src/widgets/framework.dart:4548:16)
#14     Element.updateChild (package:flutter/src/widgets/framework.dart:3998:20)
#15     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#16     StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#17     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#18     StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#19     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#20     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#21     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#22     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#23     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#24     ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#25     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#26     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#27     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#28     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#29     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#30     ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#31     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#32     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#33     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#34     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#35     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#36     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#37     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#38     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#39     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#40     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#41     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#42     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#43     StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#44     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#45     StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#46     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#47     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#48     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#49     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#50     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#51     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#52     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#53     ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#54     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#55     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#56     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#57     ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#58     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#59     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#60     StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#61     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#62     StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#63     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#64     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#65     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#66     StatelessElement.update (package:flutter/src/widgets/framework.dart:5797:5)
#67     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#68     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#69     StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#70     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#71     StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#72     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#73     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#74     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#75     StatelessElement.update (package:flutter/src/widgets/framework.dart:5797:5)
#76     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#77     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#78     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#79     ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#80     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#81     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#82     StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#83     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#84     StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#85     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#86     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#87     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#88     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#89     StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#90     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#91     StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#92     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#93     SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#94     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#95     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#96     Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#97     StatelessElement.update (package:flutter/src/widgets/framework.dart:5797:5)
#98     Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#99     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#100    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#101    StatelessElement.update (package:flutter/src/widgets/framework.dart:5797:5)
#102    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#103    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#104    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#105    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#106    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#107    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#108    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#109    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#110    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#111    Element.updateChildren (package:flutter/src/widgets/framework.dart:4139:32)
#112    MultiChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7202:17)
#113    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#114    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#115    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#116    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#117    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#118    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#119    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#120    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#121    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#122    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#123    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#124    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#125    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#126    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#127    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#128    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#129    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#130    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#131    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#132    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#133    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#134    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#135    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#136    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#137    SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#138    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#139    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#140    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#141    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#142    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#143    SingleChildRenderObjectElement.update (package:flutter/src/widgets/framework.dart:7025:14)
#144    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#145    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#146    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#147    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#148    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#149    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#150    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#151    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#152    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#153    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#154    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#155    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#156    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#157    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#158    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#159    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#160    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#161    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#162    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#163    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#164    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#165    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#166    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#167    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#168    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#169    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#170    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#171    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#172    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#173    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#174    ProxyElement.update (package:flutter/src/widgets/framework.dart:6051:5)
#175    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#176    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#177    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#178    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#179    StatefulElement.update (package:flutter/src/widgets/framework.dart:5909:5)
#180    Element.updateChild (package:flutter/src/widgets/framework.dart:3982:15)
#181    ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5747:16)
#182    StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5884:11)
#183    Element.rebuild (package:flutter/src/widgets/framework.dart:5435:7)
#184    BuildScope._tryRebuild (package:flutter/src/widgets/framework.dart:2695:15)
#185    BuildScope._flushDirtyElements (package:flutter/src/widgets/framework.dart:2752:11)
#186    BuildOwner.buildScope (package:flutter/src/widgets/framework.dart:3056:18)
#187    WidgetsBinding.drawFrame (package:flutter/src/widgets/binding.dart:1259:21)
#188    RendererBinding._handlePersistentFrameCallback (package:flutter/src/rendering/binding.dart:495:5)
#189    SchedulerBinding._invokeFrameCallback (package:flutter/src/scheduler/binding.dart:1434:15)
#190    SchedulerBinding.handleDrawFrame (package:flutter/src/scheduler/binding.dart:1347:9)
#191    SchedulerBinding.scheduleWarmUpFrame.<anonymous closure> (package:flutter/src/scheduler/binding.dart:1057:9)
#192    PlatformDispatcher.scheduleWarmUpFrame.<anonymous closure> (dart:ui/platform_dispatcher.dart:886:16)
#196    _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
(elided 5 frames from class _AssertionError, class _Timer, and dart:async-patch)
====================================================================================================

======== Exception caught by widgets library =======================================================
The following assertion was thrown while finalizing the widget tree:
Duplicate GlobalKey detected in widget tree.

The following GlobalKey was specified multiple times in the widget tree. This will lead to parts of the widget tree being truncated unexpectedly, because the second time a key is seen, the previous instance is moved to the new location. The key was:
- [GlobalKey#bc1e6]
This was determined by noticing that after the widget with the above global key was moved out of its previous parent, that previous parent never updated during this frame, meaning that it either did not update at all or updated before the widget was moved, in either case implying that it still thinks that it should have a child with that global key.
The specific parent that did not update after having one or more children forcibly removed due to GlobalKey reparenting is:
- Semantics(container: false, properties: SemanticsProperties, renderObject: RenderSemanticsAnnotations#d7bc1 NEEDS-LAYOUT NEEDS-PAINT NEEDS-COMPOSITING-BITS-UPDATE DETACHED)
A GlobalKey can only be specified on one widget at a time in the widget tree.
When the exception was thrown, this was the stack: 
#0      BuildOwner.finalizeTree.<anonymous closure> (package:flutter/src/widgets/framework.dart:3354:15)
#1      BuildOwner.finalizeTree (package:flutter/src/widgets/framework.dart:3379:8)
#2      WidgetsBinding.drawFrame (package:flutter/src/widgets/binding.dart:1266:19)
#3      RendererBinding._handlePersistentFrameCallback (package:flutter/src/rendering/binding.dart:495:5)
#4      SchedulerBinding._invokeFrameCallback (package:flutter/src/scheduler/binding.dart:1434:15)
#5      SchedulerBinding.handleDrawFrame (package:flutter/src/scheduler/binding.dart:1347:9)
#6      SchedulerBinding.scheduleWarmUpFrame.<anonymous closure> (package:flutter/src/scheduler/binding.dart:1057:9)
#7      PlatformDispatcher.scheduleWarmUpFrame.<anonymous closure> (dart:ui/platform_dispatcher.dart:886:16)
#11     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
(elided 3 frames from class _Timer and dart:async-patch)
====================================================================================================

```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
[✓] Flutter (Channel stable, 3.35.1, on macOS 15.5 24F74 darwin-arm64, locale en-US) [552ms]
    • Flutter version 3.35.1 on channel stable at /Users/codeminion/development/flutter
    • Upstream repository https://github.com/flutter/flutter.git
    • Framework revision 20f8274939 (2 days ago), 2025-08-14 10:53:09 -0700
    • Engine revision 1e9a811bf8
    • Dart version 3.9.0
    • DevTools version 2.48.0
    • Feature flags: enable-web, enable-linux-desktop, enable-macos-desktop, enable-windows-desktop, enable-android, enable-ios, cli-animations,
      enable-lldb-debugging

[!] Android toolchain - develop for Android devices (Android SDK version 34.0.0) [2.5s]
    • Android SDK at /Users/codeminion/Library/Android/sdk
    • Emulator version 31.2.10.0 (build_id 8420304) (CL:N/A)
    • Platform android-35, build-tools 34.0.0
    • Java binary at: /Applications/Android Studio.app/Contents/jbr/Contents/Home/bin/java
      This is the JDK bundled with the latest Android Studio installation on this machine.
      To manually set the JDK path, use: `flutter config --jdk-dir=""path/to/jdk""`.
    • Java version OpenJDK Runtime Environment (build 21.0.3+-79915917-b509.11)
    ! Some Android licenses not accepted. To resolve this, run: flutter doctor --android-licenses

[!] Xcode - develop for iOS and macOS (Xcode 16.3) [1,286ms]
    • Xcode at /Applications/Xcode.app/Contents/Developer
    • Build 16E140
    ! CocoaPods 1.11.3 out of date (1.16.2 is recommended).
        CocoaPods is a package manager for iOS or macOS platform code.
        Without CocoaPods, plugins will not work on iOS or macOS.
        For more info, see https://flutter.dev/to/platform-plugins
      To update CocoaPods, see https://guides.cocoapods.org/using/getting-started.html#updating-cocoapods

[✓] Chrome - develop for the web [29ms]
    • Chrome at /Applications/Google Chrome.app/Contents/MacOS/Google Chrome

[✓] Android Studio (version 2024.2) [28ms]
    • Android Studio at /Applications/Android Studio.app/Contents
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart
    • Java version OpenJDK Runtime Environment (build 21.0.3+-79915917-b509.11)

[✓] IntelliJ IDEA Community Edition (version 2021.3.1) [27ms]
    • IntelliJ at /Applications/IntelliJ IDEA CE.app
    • Flutter plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/9212-flutter
    • Dart plugin can be installed from:
      🔨 https://plugins.jetbrains.com/plugin/6351-dart

[✓] VS Code (version 1.101.1) [8ms]
    • VS Code at /Users/codeminion/Downloads/Visual Studio Code.app/Contents
    • Flutter extension can be installed from:
      🔨 https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter

[✓] Connected device (2 available) [7.5s]
    • macOS (desktop) • macos  • darwin-arm64   • macOS 15.5 24F74 darwin-arm64
    • Chrome (web)    • chrome • web-javascript • Google Chrome 139.0.7258.128

[✓] Network resources [225ms]
    • All expected network resources are available.

! Doctor found issues in 2 categories.

```

</details>
",y,
174495,"### Steps to reproduce

1. Create Flutter app with Engine Group
2. Open WebView with Hybrid Composition
3. Load web page
4. WebView displays black screen

### Expected results

webview load url correctly

### Actual results

screen black and logcat show error log
`2025-08-27 15:33:07.653  5325-19753 libEGL                  E  eglMakeCurrentImpl:1076 error 3002 (EGL_BAD_ACCESS)
2025-08-27 15:33:07.653  5325-19753 flutter                    E  [ERROR:flutter/impeller/toolkit/egl/egl.cc(56)] EGL Error: Bad Access (12290) in ../../../flutter/impeller/toolkit/egl/context.cc:55
2025-08-27 15:33:07.653  5325-19753 flutter                    E  [ERROR:flutter/shell/gpu/gpu_surface_gl_impeller.cc(76)] Could not make the context current to acquire the frame.`

### Code sample

<details open><summary>Code sample</summary>

```dart
[Paste your code here]
```

</details>


### Screenshots or Video

<details open>
<summary>Screenshots / Video demonstration</summary>

[Upload media here]

![Image](https://github.com/user-attachments/assets/06a8e020-8982-4598-ad0e-1e4489878d01)

</details>


### Logs

<details open><summary>Logs</summary>

```console
[Paste your logs here]
```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
2025-08-27 15:33:07.653  5325-19753 libEGL                  com...yishuer.REDcity.redcity.debug  E  eglMakeCurrentImpl:1076 error 3002 (EGL_BAD_ACCESS)
2025-08-27 15:33:07.653  5325-19753 flutter                 com...yishuer.REDcity.redcity.debug  E  [ERROR:flutter/impeller/toolkit/egl/egl.cc(56)] EGL Error: Bad Access (12290) in ../../../flutter/impeller/toolkit/egl/context.cc:55
2025-08-27 15:33:07.653  5325-19753 flutter                 com...yishuer.REDcity.redcity.debug  E  [ERROR:flutter/shell/gpu/gpu_surface_gl_impeller.cc(76)] Could not make the context current to acquire the frame.
```

</details>
",y,
174487,"### What package does this bug report belong to?

animations

### What target platforms are you seeing this bug on?

Windows

### Have you already upgraded your packages?

Yes

### Dependency versions

<details><summary>pubspec.lock</summary>

```lock
[Paste file content here]
```

</details>


### Steps to reproduce

```dart
import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:get/get.dart';
import 'package:mikesworks93_app/constants/app_assets/assets_image.dart';
import 'package:mikesworks93_app/constants/text_font_style.dart';
import 'package:mikesworks93_app/helpers/ui_helpers.dart';
import 'package:slide_to_act/slide_to_act.dart';
import '../../common_wigdets/text_gradient.dart';
import '../../constants/app_assets/assets_icons.dart';
import 'onboarding_screen2.dart';

class OnboardingScreen1 extends StatelessWidget {
  const OnboardingScreen1({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(
        fit: StackFit.expand,
        children: [
          Image.asset(AssetsImages.onboarding1, fit: BoxFit.cover),
          SafeArea(
            child: Padding(
              padding: EdgeInsets.symmetric(horizontal: 24.w),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  UIHelper.verticalSpace(44.h),
                  Text(
                    'RAMBLE ON',
                    style: TextFontStyle.textStyle20Avenir400cC7C7C7,
                  ),
                  UIHelper.verticalSpace(8.h),
                  TextGradient(
                    text: 'Enjoy every moment',
                    fontSize: 32.sp,
                    fontWeight: FontWeight.w600,
                  ),
                  const Spacer(),
                  Center(
                    child: Container(
                      width: double.infinity,
                      height: 60.h,
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(40.r),
                        gradient: const LinearGradient(
                          colors: [Color(0xFFDA8CFF), Color(0xFFFF5C5C)],
                          begin: Alignment.centerLeft,
                          end: Alignment.centerRight,
                        ),
                      ),
                      child: Builder(
                        builder: (context) {
                          return SlideAction(
                            outerColor: Colors.transparent,
                            innerColor: Colors.white,
                            elevation: 0,
                            sliderButtonIcon: Image.asset(
                              AssetsIcons.swipe,
                              width: 48.w,
                              height: 48.h,
                            ),
                            height: 60.h,
                            borderRadius: 40.r,
                            text: """",
                            onSubmit: () async {
                              Get.to(() => OnboardingScreen2());
                            },
                            sliderButtonIconPadding: 8.w,
                            child: Padding(
                              padding: EdgeInsets.only(left: 28.w, right: 8.w),
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Text(
                                    ""Get Started"",
                                    style: TextFontStyle
                                        .headline16w500StylecFFFFFFManrope,
                                  ),
                                  SizedBox(width: 12.w),
                                  Row(
                                    children: [
                                      Image.asset(
                                        AssetsIcons.rightArrow,
                                        height: 16.h,
                                        width: 16.w,
                                      ),
                                      UIHelper.horizontalSpaceSmall,
                                      Image.asset(
                                        AssetsIcons.rightArrow,
                                        height: 16.h,
                                        width: 16.w,
                                      ),
                                      UIHelper.horizontalSpaceSmall,
                                      Image.asset(
                                        AssetsIcons.rightArrow,
                                        height: 16.h,
                                        width: 16.w,
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                          );
                        },
                      ),
                    ),
                  ),
                  UIHelper.verticalSpace(32.h),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}


### Expected results

It shold show to slider and in time of apk building will vause no issues

### Actual results

Pakage got broken and i cant buil the apk or run the software

### Code sample

import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:get/get.dart';
import 'package:mikesworks93_app/constants/app_assets/assets_image.dart';
import 'package:mikesworks93_app/constants/text_font_style.dart';
import 'package:mikesworks93_app/helpers/ui_helpers.dart';
import 'package:slide_to_act/slide_to_act.dart';
import '../../common_wigdets/text_gradient.dart';
import '../../constants/app_assets/assets_icons.dart';
import 'onboarding_screen2.dart';

class OnboardingScreen1 extends StatelessWidget {
  const OnboardingScreen1({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(
        fit: StackFit.expand,
        children: [
          Image.asset(AssetsImages.onboarding1, fit: BoxFit.cover),
          SafeArea(
            child: Padding(
              padding: EdgeInsets.symmetric(horizontal: 24.w),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  UIHelper.verticalSpace(44.h),
                  Text(
                    'RAMBLE ON',
                    style: TextFontStyle.textStyle20Avenir400cC7C7C7,
                  ),
                  UIHelper.verticalSpace(8.h),
                  TextGradient(
                    text: 'Enjoy every moment',
                    fontSize: 32.sp,
                    fontWeight: FontWeight.w600,
                  ),
                  const Spacer(),
                  Center(
                    child: Container(
                      width: double.infinity,
                      height: 60.h,
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(40.r),
                        gradient: const LinearGradient(
                          colors: [Color(0xFFDA8CFF), Color(0xFFFF5C5C)],
                          begin: Alignment.centerLeft,
                          end: Alignment.centerRight,
                        ),
                      ),
                      child: Builder(
                        builder: (context) {
                          return SlideAction(
                            outerColor: Colors.transparent,
                            innerColor: Colors.white,
                            elevation: 0,
                            sliderButtonIcon: Image.asset(
                              AssetsIcons.swipe,
                              width: 48.w,
                              height: 48.h,
                            ),
                            height: 60.h,
                            borderRadius: 40.r,
                            text: """",
                            onSubmit: () async {
                              Get.to(() => OnboardingScreen2());
                            },
                            sliderButtonIconPadding: 8.w,
                            child: Padding(
                              padding: EdgeInsets.only(left: 28.w, right: 8.w),
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Text(
                                    ""Get Started"",
                                    style: TextFontStyle
                                        .headline16w500StylecFFFFFFManrope,
                                  ),
                                  SizedBox(width: 12.w),
                                  Row(
                                    children: [
                                      Image.asset(
                                        AssetsIcons.rightArrow,
                                        height: 16.h,
                                        width: 16.w,
                                      ),
                                      UIHelper.horizontalSpaceSmall,
                                      Image.asset(
                                        AssetsIcons.rightArrow,
                                        height: 16.h,
                                        width: 16.w,
                                      ),
                                      UIHelper.horizontalSpaceSmall,
                                      Image.asset(
                                        AssetsIcons.rightArrow,
                                        height: 16.h,
                                        width: 16.w,
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                          );
                        },
                      ),
                    ),
                  ),
                  UIHelper.verticalSpace(32.h),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}
```

### Screenshots or Videos

<details open>
<summary>Screenshots / Video demonstration</summary>

[Upload media here]

</details>


### Logs

<details open><summary>Logs</summary>

```console
[Paste your logs here]
```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
[Paste your output here]
```

</details>
",y,
174354,"### Steps to reproduce

The method GoogleSignIn.supportsAuthentication returns a bool indicating whether auth is supported.

On Linux (and presumably other non-supported platforms) an UnimplementedError is thrown from google_sigin_in_platform_interface.

```dart
class _PlaceholderImplementation extends GoogleSignInPlatform {
  @override
  Future<void> init(InitParameters params) {
    throw UnimplementedError();
  }

  @override
  Future<AuthenticationResults?> attemptLightweightAuthentication(
      AttemptLightweightAuthenticationParameters params) {
    throw UnimplementedError();
  }

  @override
  bool supportsAuthenticate() {
    throw UnimplementedError();
  }
```

Rather than throwing an error, supportsAuthentication should return false.


### Expected results

the method should return false.

### Actual results

the method throws:
UnimplementedError

### Code sample

<details open><summary>Code sample</summary>

```dart
return GoogleSignIn.instance.supportsAuthenticate();
```

</details>


### Screenshots or Video

<details open>
<summary>Screenshots / Video demonstration</summary>

[Upload media here]

</details>


### Logs

<details open><summary>Logs</summary>

```console
[Paste your logs here]
```

</details>


### Flutter Doctor output

<details open><summary>Doctor output</summary>

```console
flutter doctor
Doctor summary (to see all details, run flutter doctor -v):
[✓] Flutter (Channel stable, 3.35.1, on Ubuntu 25.04 6.11.0-26-generic, locale en_AU.UTF-8)
[✓] Android toolchain - develop for Android devices (Android SDK version 36.0.0)
[✓] Chrome - develop for the web
[✓] Linux toolchain - develop for Linux desktop
[✓] Android Studio (version 2024.3.2)
[✓] VS Code (version 1.103.0)
[✓] Connected device (2 available)
[✓] Network resources

• No issues found!
```

</details>
",y,